{"version":3,"sources":["sxc-edit.min.js"],"names":["angular","module","directive","restrict","replace","transclude","templateUrl","factory","$http","eavConfig","sxc","svcCreator","appRoot","appId","contentType","entityGuid","field","subfolder","serviceConfig","svc","url","resolveServiceUrl","folders","adamRoot","substr","indexOf","uploadUrl","targetSubfolder","usePortalRoot","addFullPath","value","key","fullPath","Path","toLowerCase","extend","implementLiveList","get","params","then","result","forEach","data","addFolder","newfolder","post","newFolder","liveListReload","goIntoFolder","childFolder","push","pathParts","split","subPath","c","length","Subfolder","goUp","pop","item","isFolder","IsFolder","id","Id","rename","newName","reload","BrowserController","$scope","adamSvc","debugState","eavAdminDialogs","fileType","vm","this","debug","initConfig","contentTypeName","fieldName","subFolder","showImagesOnly","folderDepth","showFolders","allowAssetsInRoot","metadataContentTypes","show","adamModeConfig","disabled","ngDisabled","enableSelect","activate","autoLoad","toggle","registerSelf","refresh","items","liveList","newConfig","configChanged","JSON","stringify","oldConfig","openUpload","dropzone","select","fileItem","updateCallback","folderName","window","prompt","del","ok","confirm","Name","folder","currentFolderDepth","allowCreateFolder","editMetadata","_itemDefinition","getMetadataType","openEditItems","found","Type","match","metadataType","title","MetadataId","EntityId","Title","ContentTypeName","Metadata","Key","KeyType","TargetType","metadataOfCmsObject","Prefill","EntityTitle","icon","getIconClass","allowedFileTypes","fileFilter","map","i","trim","fileEndingFilter","extension","$inject","app","controller","require","link","scope","elem","attrs","dropzoneCtrl","adam","controllerAs","tabId","AppInstanceId","ContentBlockId","dragClass","$timeout","$translate","postLink","element","header","$parent","to","options","Guid","config","urlRoot","maxFilesize","paramName","maxThumbnailFilesize","headers","ModuleId","TabId","dictDefaultMessage","addRemoveLinks","previewsContainer","clickable","eventHandlers","addedfile","file","$apply","uploading","processing","success","response","Success","afterUpload","alert","Error","error","xhr","instant","queuecomplete","getUploadingFiles","getQueuedFiles","Dropzone","handler","event","on","processDropzone","processQueue","resetDropzone","removeAllFiles","hiddenFileInput","click","formlyConfigProvider","defaultFieldWrappers","setType","name","template","wrapper","$uibModal","promiseToastr","open","oldValue","callback","type","connector","valueChanged","dialogType","modalInstance","close","CurrentValue","console","log","resolve","bridge","windowClass","getUrlOfId","idCode","entityId","linkLowered","encodeURIComponent","portalRoot","webFormsBridgeUrl","$2sxc","urlParams","bridgeSyncHeight","Object","keys","prop","join","src","w","contentWindow","connectBridge","resize","css","document","body","scrollHeight","$","ready","setTimeout","wrappers","slice","splice","$controller","$filter","eavDefaultValueService","settings","merged","EnableRemove","AllowMultiValue","EnableAddExisting","EnableCreate","EnableEdit","EntityType","enableCollapseField","collapseField","model","Values","Value","fieldWrappersWithPreview","dnnBridgeSvc","ensureDefaultConfig","undefined","ShowAdam","Buttons","testLink","isImage","thumbnailUrl","size","quote","qt","tooltipUrl","str","$watch","newValue","promise","processResultOfPagePicker","openPageDialog","Paths","FileFilter","registerAdam","setValue","ServerResourceMapping","toggleAdam","imagesOnly","defaultFieldWrappersNoFloat","CHARS","Math","uuid","len","radix","chars","random","r","uuidFast","Array","rnd","uuidCompact","v","toString","$ocLazyLoad","getIconClasses","className","charcount","foundList","duplicateDetector","ssSet","styleSheets","classes","rules","cssRules","x","selectorText","substring","txt","icnClass","rule","class","loadAdditionalResources","files","mapped","fileList","load","iconFilter","prefix","previewPrefix","icons","useTestValues","selectorIsOpen","setIcon","form","$setDirty","controlSettings","Files","CssPrefix","PreviewCss","templateOptions","cs","init","context","inj","$injector","appDialogConfigSvc","getDialogSettings","IsContent","formVm","formFields","SortOrder","appAssetsSvc","fieldMask","setFileConfig","typeWatcher","locWatcher","onLocationChange","templates","svcApp","svcGlobal","readyToUse","specs","Token","ext","suggestion","C# Razor","loc","svcCurrent","add","fileName","path","foundSlash","lastIndexOf","endsWith","create","filter","paths","out","initialValue","initialReadOnly","onChanged","setReadOnly","readOnly","FieldWysiwygTinyMceController","languages","tinyMceHelpers","tinyMceToolbars","tinyMceConfig","tinyMceAdam","tinyMceDnnBridge","tinyMceInitCallback","editor","tinymceOptions","language","addTranslations","addButtons","enableContentBlocksIfPossible","watchDisabled","ngscope","readonly","$broadcast","fields","index","nextField","enableContentBlocks","getDefaultOptions","setup","attachAdam","attach","lang2","currentLanguage","language_url","modeImage","adamModeImage","insertContent","addAdamButtons","e","addButton","onclick","menu","text","tooltip","execCommand","beta","buildModes","modes","standard","menubar","toolbar","contextmenu","advanced","cdnRoot","imgSizes","defaultLanguage","plugins","validateAlso","baseURL","inline","automatic_uploads","autosave_ask_before_unload","paste_as_text","extended_valid_elements","custom_elements","relative_urls","default_link_target","object_resizing","skin","theme","debounce","processResultOfDnnBridge","previouslySelected","selection","getContent","FileId","openDnnDialog","initLangResources","primaryLan","mceTranslations","pLen","all","getTranslationTable","translations","k","tinymce","addI18n","addTinyMceToolbarButtons","initOnPostRender","watchChange","formatter","formatChanged","state","self","active","registerTinyMceFormats","imgformats","is","selector","collapsed","styles","width","register","switchModes","mode","panel","remove","renderUI","getElementById","focus","makeImgFormatCall","apply","makeTagDetector","tagWeNeedInTheTagPath","currentElement","selectorMatched","dom","getBody","contains","linkgroup","onPostRender","linkgroupPro","copy","cmd","tag","buttons","h3","h4","h5","h6","p","guid","imgMenuArray","resizeimg100","addContextToolbar","run","$templateCache","put"],"mappings":"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","file":"sxc-edit.min.js","sourcesContent":["(function() { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    angular.module(\"Adam\", [\r\n        \"SxcServices\",\r\n        \"EavConfiguration\", // config\r\n        \"EavServices\", // multi-language stuff\r\n        ])\r\n        ;\r\n\r\n} ());\n(function() {\r\n    /* jshint laxbreak:true*/\r\n\r\n    angular.module(\"Adam\", [])\r\n        /*@ngInject*/\r\n        .directive(\"adamHint\", function () {\r\n            return {\r\n                restrict: \"E\",\r\n                replace: false,\r\n                transclude: false,\r\n                templateUrl: \"adam/adam-hint.html\"\r\n            };\r\n        });\r\n})();\n// note: don't prefix angular with window - something fails in production build if you do that\r\n// ReSharper disable PossiblyUnassignedProperty\r\nangular.module('Adam')\r\n    /*@ngInject*/\r\n    .factory('adamSvc', [\"$http\", \"eavConfig\", \"sxc\", \"svcCreator\", \"appRoot\", \"appId\", function ($http, eavConfig, sxc, svcCreator, appRoot, appId) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(contentType, entityGuid, field, subfolder, serviceConfig) {\r\n            var svc = {\r\n                url: sxc.resolveServiceUrl('app-content/' + contentType + '/' + entityGuid + '/' + field),\r\n                subfolder: subfolder,\r\n                folders: [],\r\n                adamRoot: appRoot.substr(0, appRoot.indexOf('2sxc'))\r\n            };\r\n\r\n            // get the correct url for uploading as it is needed by external services (dropzone)\r\n            svc.uploadUrl = function(targetSubfolder) {\r\n                var url = (targetSubfolder === '')\r\n                    ? svc.url\r\n                    : svc.url + '?subfolder=' + targetSubfolder;\r\n                url += (url.indexOf('?') === -1 ? '?' : '&')\r\n                    + 'usePortalRoot=' + serviceConfig.usePortalRoot\r\n                    + '&appId=' + appId;\r\n                return url;\r\n            };\r\n\r\n            // extend a json-response with a path (based on the adam-root) to also have a fullPath\r\n          svc.addFullPath = function(value, key) {\r\n            // 2dm 2018-03-29 special fix - sometimes the path already has the full path, sometimes not\r\n            // it should actually be resolved properly, but because I don't have time\r\n            // ATM (data comes from different web-services, which are also used in other places\r\n            // I'll just check if it's already in there\r\n            value.fullPath = value.Path;\r\n\r\n            if(value.Path && value.Path.toLowerCase().indexOf(svc.adamRoot.toLowerCase()) === -1)\r\n              value.fullPath = svc.adamRoot + value.Path;\r\n          };\r\n\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(svc.url + '/items',\r\n                        {\r\n                            params: {\r\n                                subfolder: svc.subfolder,\r\n                                usePortalRoot: serviceConfig.usePortalRoot,\r\n                                appId: appId\r\n                            }\r\n                        })\r\n                    .then(function(result) {\r\n                        angular.forEach(result.data, svc.addFullPath);\r\n                        return result;\r\n                    });\r\n            }));\r\n\r\n            // create folder\r\n            svc.addFolder = function (newfolder) {\r\n                return $http.post(svc.url + '/folder',\r\n                        {},\r\n                        {\r\n                            params: {\r\n                                subfolder: svc.subfolder,\r\n                                newFolder: newfolder,\r\n                                usePortalRoot: serviceConfig.usePortalRoot,\r\n                                appId: appId\r\n                            }\r\n                        })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            svc.goIntoFolder = function(childFolder) {\r\n                svc.folders.push(childFolder);\r\n                var pathParts = childFolder.Path.split('/');\r\n                var subPath = '';\r\n                for (var c = 0; c < svc.folders.length; c++)\r\n                    subPath = pathParts[pathParts.length - c - 2] + '/' + subPath;\r\n\r\n                subPath = subPath.replace('//', '/');\r\n                if (subPath[subPath.length - 1] === '/')\r\n                    subPath = subPath.substr(0, subPath.length - 1);\r\n\r\n                childFolder.Subfolder = subPath;\r\n\r\n                // now assemble the correct subfolder based on the folders-array\r\n                svc.subfolder = subPath;\r\n                svc.liveListReload();\r\n                return subPath;\r\n            };\r\n\r\n            svc.goUp = function() {\r\n                if (svc.folders.length > 0)\r\n                    svc.folders.pop();\r\n                if (svc.folders.length > 0) {\r\n                    svc.subfolder = svc.folders[svc.folders.length - 1].Subfolder;\r\n                } else {\r\n                    svc.subfolder = '';\r\n                }\r\n                svc.liveListReload();\r\n                return svc.subfolder;\r\n            };\r\n\r\n            // delete, then reload\r\n            // IF verb DELETE fails, so I'm using get for now\r\n            svc.delete = function (item) {\r\n                return $http.get(svc.url + '/delete',\r\n                        {\r\n                            params: {\r\n                                subfolder: svc.subfolder,\r\n                                isFolder: item.IsFolder,\r\n                                id: item.Id,\r\n                                usePortalRoot: serviceConfig.usePortalRoot,\r\n                                appId: appId\r\n                            }\r\n                        })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            // rename, then reload\r\n            svc.rename = function (item, newName) {\r\n                return $http.get(svc.url + '/rename',\r\n                        {\r\n                            params: {\r\n                                subfolder: svc.subfolder,\r\n                                isFolder: item.IsFolder,\r\n                                id: item.Id,\r\n                                usePortalRoot: serviceConfig.usePortalRoot,\r\n                                newName: newName,\r\n                                appId: appId\r\n                            }\r\n                        })\r\n                    .then(svc.liveListReload);\r\n            };\r\n            \r\n            svc.reload = svc.liveListReload;\r\n\r\n            return svc;\r\n        };\r\n    }]);\r\n// ReSharper restore PossiblyUnassignedProperty\r\n\n(function () {\r\n    /* jshint laxbreak:true */\r\n    \"use strict\";\r\n\r\n    BrowserController.$inject = [\"$scope\", \"adamSvc\", \"debugState\", \"eavConfig\", \"eavAdminDialogs\", \"appRoot\", \"fileType\"];\r\n    var app = angular.module(\"Adam\"); \r\n\r\n    // The controller for the main form directive\r\n    app.controller(\"BrowserController\", BrowserController);\r\n    \r\n    /*@ngInject*/\r\n    function BrowserController($scope, adamSvc, debugState, eavConfig, eavAdminDialogs, appRoot, fileType) {\r\n        var vm = this;\r\n        vm.debug = debugState;\r\n\r\n        var initConfig = function initConfig() {\r\n            vm.contentTypeName = $scope.contentTypeName;\r\n            vm.entityGuid = $scope.entityGuid;\r\n            vm.fieldName = $scope.fieldName;\r\n            vm.subFolder = $scope.subFolder || \"\";\r\n            vm.showImagesOnly = $scope.showImagesOnly = $scope.showImagesOnly || false;\r\n\r\n            vm.folderDepth = (typeof $scope.folderDepth !== 'undefined' && $scope.folderDepth !== null)\r\n                ? $scope.folderDepth\r\n                : 2;\r\n            vm.showFolders = !!vm.folderDepth;\r\n            vm.allowAssetsInRoot = $scope.allowAssetsInRoot || true;    // if true, the initial folder can have files, otherwise only subfolders\r\n            vm.metadataContentTypes = $scope.metadataContentTypes || \"\";\r\n        };\r\n\r\n        initConfig();\r\n        \r\n        vm.show = false;\r\n        vm.appRoot = appRoot;        \r\n        vm.adamModeConfig = $scope.adamModeConfig;\r\n\r\n        vm.disabled = $scope.ngDisabled;\r\n        vm.enableSelect = ($scope.enableSelect === false) ? false : true; // must do it like this, $scope.enableSelect || true will not work\r\n\r\n        vm.activate = function () {\r\n            if($scope.autoLoad)\r\n                vm.toggle();\r\n            if ($scope.registerSelf)\r\n                $scope.registerSelf(vm);\r\n        };\r\n\r\n        // load svc...\r\n        vm.svc = adamSvc(vm.contentTypeName, vm.entityGuid, vm.fieldName, vm.subFolder, $scope.adamModeConfig);\r\n\r\n        // refresh - also used by callback after an upload completed\r\n        vm.refresh = vm.svc.liveListReload;\r\n\r\n        vm.get = function () {\r\n            vm.items = vm.svc.liveList();\r\n            vm.folders = vm.svc.folders;\r\n            vm.svc.liveListReload();\r\n        };\r\n\r\n        vm.toggle = function toggle(newConfig) {\r\n            // Reload configuration\r\n            initConfig();\r\n            var configChanged = false;\r\n            if (newConfig) {\r\n                // Detect changes in config, allows correct toggle behaviour\r\n                if (JSON.stringify(newConfig) !== vm.oldConfig)\r\n                    configChanged = true;\r\n                vm.oldConfig = JSON.stringify(newConfig);\r\n\r\n                vm.showImagesOnly = newConfig.showImagesOnly;\r\n                $scope.adamModeConfig.usePortalRoot = !!(newConfig.usePortalRoot);\r\n            }\r\n\r\n            vm.show = configChanged || !vm.show;\r\n            \r\n            if (!vm.show)\r\n                $scope.adamModeConfig.usePortalRoot = false;\r\n\r\n            // Override configuration in portal mode\r\n            if ($scope.adamModeConfig.usePortalRoot) {\r\n                vm.showFolders = true;\r\n                vm.folderDepth = 99;\r\n            }\r\n\r\n            if (vm.show)\r\n                vm.get();\r\n        };\r\n\r\n        vm.openUpload = function() {\r\n            vm.dropzone.openUpload();\r\n        };\r\n\r\n        vm.select = function (fileItem) {\r\n            if (vm.disabled || !vm.enableSelect)\r\n                return;\r\n            $scope.updateCallback(fileItem);\r\n        };\r\n\r\n        vm.addFolder = function () {\r\n            if (vm.disabled)\r\n                return;\r\n            var folderName = window.prompt(\"Please enter a folder name\"); // todo i18n\r\n            if (folderName)\r\n                vm.svc.addFolder(folderName)\r\n                    .then(vm.refresh);\r\n        };\r\n\r\n        vm.del = function del(item) {\r\n            if (vm.disabled)\r\n                return;\r\n            var ok = window.confirm(\"Are you sure you want to delete this item?\"); // todo i18n\r\n            if (ok)\r\n                vm.svc.delete(item);\r\n        };\r\n\r\n        vm.rename = function rename(item) {\r\n            var newName = window.prompt('Rename the file / folder to: ', item.Name);\r\n            if (newName)\r\n                vm.svc.rename(item, newName);\r\n        };\r\n\r\n        //#region Folder Navigation\r\n        vm.goIntoFolder = function (folder) {\r\n            var subFolder = vm.svc.goIntoFolder(folder);\r\n            vm.subFolder = subFolder;\r\n        };\r\n\r\n        vm.goUp = function () {\r\n            vm.subFolder = vm.svc.goUp();\r\n        };\r\n\r\n        vm.currentFolderDepth = function() {\r\n            return vm.svc.folders.length;\r\n        };\r\n\r\n        vm.allowCreateFolder = function() {\r\n            return vm.svc.folders.length < vm.folderDepth;\r\n        };\r\n        //#endregion\r\n\r\n        //#region Metadata\r\n        vm.editMetadata = function(item) {\r\n            var items = [\r\n                vm._itemDefinition(item, vm.getMetadataType(item))\r\n            ];\r\n\r\n            eavAdminDialogs.openEditItems(items, vm.refresh);\r\n        };\r\n\r\n        vm.getMetadataType = function(item) {\r\n            var found;\r\n\r\n            // check if it's a folder and if this has a special registration\r\n            if (item.Type === \"folder\") {\r\n                found = vm.metadataContentTypes.match(/^(folder)(:)([^\\n]*)/im);\r\n                if (found)\r\n                    return found[3];\r\n                else \r\n                    return null;\r\n            }\r\n\r\n            // check if the extension has a special registration\r\n            // -- not implemented yet\r\n\r\n            // check if the type \"image\" or \"document\" has a special registration\r\n            // -- not implemneted yet\r\n\r\n\r\n            // nothing found so far, go for the default with nothing as the prefix \r\n            found = vm.metadataContentTypes.match(/^([^:\\n]*)(\\n|$)/im);\r\n            if (found)\r\n                return found[1];\r\n\r\n            // this is if we don't find anything\r\n            return null;\r\n        };\r\n\r\n        // todo: move to service, shouldn't be part of the application\r\n        vm._itemDefinition = function (item, metadataType) {\r\n            var title = \"EditFormTitle.Metadata\"; // todo: i18n\r\n            return item.MetadataId !== 0\r\n                ? { EntityId: item.MetadataId, Title: title } // if defined, return the entity-number to edit\r\n                : {\r\n                    ContentTypeName: metadataType, // otherwise the content type for new-assegnment\r\n                    Metadata: {\r\n                        Key: (item.Type === \"folder\" ? \"folder\" : \"file\") + \":\" + item.Id,\r\n                        KeyType: \"string\",\r\n                        TargetType: eavConfig.metadataOfCmsObject\r\n                    },\r\n                    Title: title,\r\n                    Prefill: { EntityTitle: item.Name } // possibly prefill the entity title \r\n                };\r\n\r\n        };\r\n\r\n        //#endregion\r\n\r\n        //#region icons\r\n        vm.icon = function (item) {\r\n            return fileType.getIconClass(item.Name);\r\n        };\r\n        //#endregion\r\n\r\n        vm.allowedFileTypes = [];\r\n        if ($scope.fileFilter) {\r\n            vm.allowedFileTypes = $scope.fileFilter.split(',').map(function (i) {\r\n                return i.replace('*', '').trim();\r\n            });\r\n        }\r\n\r\n        vm.fileEndingFilter = function (item) {\r\n            if (vm.allowedFileTypes.length === 0)\r\n                return true;\r\n            var extension = item.Name.match(/(?:\\.([^.]+))?$/)[0];\r\n            return vm.allowedFileTypes.indexOf(extension) != -1;\r\n        };\r\n\r\n        vm.activate();\r\n    }\r\n\r\n})();\r\n\n(function () {\r\n    /* jshint laxbreak:true*/\r\n\r\n    angular.module(\"Adam\")\r\n        /*@ngInject*/\r\n        .directive(\"adamBrowser\", function () {\r\n            return {\r\n                restrict: \"E\",\r\n                templateUrl: \"adam/browser.html\",\r\n\r\n                //replace: true,\r\n                transclude: false,\r\n                require: \"^dropzone\",\r\n                link: function postLink(scope, elem, attrs, dropzoneCtrl) {\r\n                    // connect this adam to the dropzone\r\n                    dropzoneCtrl.adam = scope.vm;       // so the dropzone controller knows what path etc.\r\n                    scope.vm.dropzone = dropzoneCtrl;   // so we can require an \"open file browse\" dialog\r\n                },\r\n\r\n                // todo: change \"scope\" to bindToController whenever I have time - http://blog.thoughtram.io/angularjs/2015/01/02/exploring-angular-1.3-bindToController.html\r\n                scope: {\r\n                    // Identity fields\r\n                    contentTypeName: \"=\",\r\n                    entityGuid: \"=\",\r\n                    fieldName: \"=\",\r\n\r\n                    // configuration general\r\n                    subFolder: \"=\",\r\n                    folderDepth: \"=\", \r\n                    metadataContentTypes: \"=\",\r\n                    allowAssetsInRoot: \"=\",\r\n                    showImagesOnly: \"=?\",\r\n                    adamModeConfig: \"=\",\r\n                    fileFilter: \"=?\",\r\n\r\n                    // binding and cross-component communication\r\n                    autoLoad: \"=\",\r\n                    updateCallback: \"=\",\r\n                    registerSelf: \"=\",\r\n\r\n                    // basic functionality\r\n                    enableSelect: \"=\",\r\n                    ngDisabled: \"=\"\r\n                },\r\n                controller: \"BrowserController\",\r\n                controllerAs: \"vm\"\r\n\r\n            };\r\n        });\r\n})();\n(function() {\r\n    /* jshint laxbreak:true*/\r\n    angular.module(\"Adam\")\r\n        /*@ngInject*/\r\n        .directive(\"dropzoneUploadPreview\", function () {\r\n            return {\r\n                restrict: \"E\",\r\n                templateUrl: \"adam/dropzone-upload-preview.html\",\r\n                replace: true,\r\n                transclude: false\r\n            };\r\n        });\r\n})();\n/* js/fileAppDirectives */\r\n(function() {\r\n    angular.module('Adam')\r\n        /*@ngInject*/\r\n        .directive('dropzone', [\"sxc\", \"tabId\", \"AppInstanceId\", \"ContentBlockId\", \"dragClass\", \"adamSvc\", \"$timeout\", \"$translate\", function (sxc, tabId, AppInstanceId, ContentBlockId, dragClass, adamSvc, $timeout, $translate) {\r\n\r\n            return {\r\n                restrict: 'C',\r\n                link: postLink,\r\n\r\n                // This controller is needed, because it needs an API which can talk to other directives\r\n                controller: controller\r\n            };\r\n\r\n\r\n            // this is the method called after linking the directive, which initializes Dropzone\r\n            function postLink(scope, element, attrs, controller) {\r\n                var header = scope.$parent.to.header;\r\n                var field = scope.$parent.options.key;\r\n                var entityGuid = header.Guid;\r\n                var svc = adamSvc(header.ContentTypeName, entityGuid, field, '', scope.$parent.vm.adamModeConfig);\r\n                var url = svc.url;\r\n\r\n                var config = {\r\n                    url: url,\r\n                    urlRoot: url,\r\n                    maxFilesize: 10000, // 10'000 MB = 10 GB, note that it will also be stopped on the server if it's larger than the really allowed sized\r\n                    paramName: 'uploadfile',\r\n                    maxThumbnailFilesize: 10,\r\n\r\n                    headers: {\r\n                        \"ModuleId\": AppInstanceId,\r\n                        \"TabId\": tabId,\r\n                        \"ContentBlockId\": ContentBlockId\r\n                    },\r\n\r\n                    dictDefaultMessage: '',\r\n                    addRemoveLinks: false,\r\n                    previewsContainer: '.field-' + field.toLowerCase() + ' .dropzone-previews',\r\n                    // we need a clickable, because otherwise the entire area is clickable. so i'm just making the preview clickable, as it's not important\r\n                    clickable: '.field-' + field.toLowerCase() + ' .invisible-clickable' // \" .dropzone-adam\"\r\n                };\r\n\r\n\r\n                var eventHandlers = {\r\n                    'addedfile': function (file) {\r\n                        $timeout(function () {\r\n                            // anything you want can go here and will safely be run on the next digest.\r\n                            scope.$apply(function () { // this must run in a timeout\r\n                                scope.uploading = true;\r\n                            });\r\n                        });\r\n                    },\r\n\r\n                    \"processing\": function (file) {\r\n                        this.options.url = svc.uploadUrl(controller.adam.subFolder);\r\n                    },\r\n\r\n                    'success': function (file, response) {\r\n                        if (response.Success) {\r\n                            svc.addFullPath(response); // calculate additional infos\r\n                            scope.$parent.afterUpload(response);\r\n                        } else {\r\n                            alert('Upload failed because: ' + response.Error);\r\n                        }\r\n                    },\r\n                    'error': function (file, error, xhr) {\r\n                        alert($translate.instant('Errors.AdamUploadError'));\r\n                    },\r\n\r\n                    \"queuecomplete\": function (file) {\r\n                        if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {\r\n                            scope.uploading = false;\r\n                            controller.adam.refresh();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // delay building the dropszone till the DOM is ready\r\n                $timeout(function () {\r\n                    var dropzone = new Dropzone(element[0], config);\r\n\r\n                    angular.forEach(eventHandlers, function(handler, event) {\r\n                        dropzone.on(event, handler);\r\n                    });\r\n\r\n                    scope.processDropzone = function() { dropzone.processQueue(); };\r\n                    scope.resetDropzone = function() { dropzone.removeAllFiles(); };\r\n                    controller.openUpload = function() { dropzone.hiddenFileInput.click(); };\r\n\r\n                }, 0);\r\n            }\r\n\r\n            /*@ngInject*/\r\n            function controller() {\r\n                var vm = this;\r\n                vm.adam = {\r\n                    show: false,\r\n                    subFolder: '',\r\n                    refresh: function () { }\r\n                };\r\n\r\n            }\r\n\r\n        }]);\r\n\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\t/* This app registers all field templates for 2sxc in the angularjs sxcFieldTemplates app */\r\n\r\n    angular.module(\"sxcFieldTemplates\", [\r\n        \"formly\",\r\n        \"formlyBootstrap\",\r\n        \"ui.bootstrap\",\r\n        \"ui.tree\",\r\n        \"2sxc4ng\",\r\n        \"SxcEditTemplates\",     // temp - was because of bad template-converter, remove once I update grunt\r\n        \"EavConfiguration\",\r\n        \"SxcServices\",\r\n        \"eavFieldTemplates\",\r\n        \"Adam\",\r\n        //\"ui.tinymce\",   // connector to tiny-mce for angular\r\n        \"oc.lazyLoad\"   // needed to lazy-load the MCE editor from the cloud\r\n    ]);\r\n\r\n})();\n/* \r\n * Field: String - Default\r\n */\r\n\r\nangular.module('eavFieldTemplates')\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: 'custom-json-editor',\r\n            template: '<div>Warning: this is still work-in-progres, there is no json validation, use at own risk.' +\r\n            '<textarea rows=\"{{options.templateOptions.settings.merged.RowCount}}\" class=\"form-control material\" ng-model=\"value.Value\"></textarea>'\r\n            + '</div>',\r\n            wrapper: defaultFieldWrappers, \r\n          controller: 'FieldTemplate-CustomJson as vm'\r\n        });\r\n\r\n  }]).controller('FieldTemplate-CustomJson', [\"$scope\", function ($scope) {\r\n\r\n        // todo: later extend with json validation\r\n        //var vm = this;\r\n        //var validationRegexString = '.*';\r\n\r\n        //var settings = $scope.options.templateOptions.settings;\r\n        \r\n        //// Do not use settings.merged here because there is an old (hidden field) that causes\r\n        //// merged.ValidationRegExJavaScript to be always empty\r\n        //if (settings.All && settings.All.ValidationRegExJavaScript)\r\n        //    validationRegexString = settings.All.ValidationRegExJavaScript;\r\n        \r\n        //vm.regexPattern = new RegExp(validationRegexString, 'i');\r\n\r\n        //console.log($scope.options.templateOptions);\r\n    }]);\n// This is the service which allows opening dnn-bridge dialogs and processes the results\r\n\r\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"dnnBridgeSvc\", [\"$uibModal\", \"$http\", \"promiseToastr\", function ($uibModal, $http, promiseToastr) {\r\n        var svc = {};\r\n        svc.open = function open(oldValue, params, callback) {\r\n            var type = \"pagepicker\";\r\n\r\n            var connector = {\r\n                params: params,\r\n                valueChanged: callback,\r\n                dialogType: type\r\n            };\r\n\r\n            connector.valueChanged = function valueChanged(value) {\r\n                connector.modalInstance.close();\r\n                callback(value);\r\n            };\r\n\r\n            connector.params.CurrentValue = oldValue;\r\n\r\n            console.log(\"before open page picker\");\r\n            console.log($uibModal);\r\n            connector.modalInstance = $uibModal.open({\r\n                templateUrl: \"fields/dnn-bridge/hyperlink-default-pagepicker.html\",\r\n                resolve: {\r\n                    bridge: function () {\r\n                        return connector;\r\n                    }\r\n                },\r\n                /*@ngInject*/\r\n                controller: [\"$scope\", \"bridge\", function ($scope, bridge) {\r\n                    $scope.bridge = bridge;\r\n                }],\r\n                windowClass: \"sxc-dialog-filemanager\"\r\n            });\r\n            console.log(\"after open page picker\");\r\n\r\n            return connector.modalInstance;\r\n        };\r\n\r\n\r\n        // handle short-ID links like file:17\r\n        svc.getUrlOfId = function(idCode, entityId) {\r\n            var linkLowered = idCode.toLowerCase();\r\n            if (linkLowered.indexOf(\"file:\") !== -1 || linkLowered.indexOf(\"page:\") !== -1)\r\n                return $http.get(\"dnn/Hyperlink/ResolveHyperlink?hyperlink=\" + encodeURIComponent(idCode));\r\n            return null;\r\n        };\r\n\r\n        return svc;\r\n\r\n    }]);\n\r\n// this is in charge of the iframe which shows the dnn-bridge components\r\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\tangular.module(\"sxcFieldTemplates\")\r\n\r\n\r\n    /*@ngInject*/\r\n\t.directive(\"webFormsBridge\", [\"sxc\", \"portalRoot\", function (sxc, portalRoot) {\r\n\t    var webFormsBridgeUrl = portalRoot + \"Default.aspx?tabid=\" + $2sxc.urlParams.require(\"tid\") + \"&ctl=webformsbridge&mid=\" + sxc.id + \"&dnnprintmode=true&SkinSrc=%5bG%5dSkins%2f_default%2fNo+Skin&ContainerSrc=%5bG%5dContainers%2f_default%2fNo+Container\"; //\"&popUp=true\";\r\n\r\n\t\treturn {\r\n\t\t\trestrict: \"A\",\r\n\t\t\tscope: {\r\n\t\t\t\ttype: \"@bridgeType\",\r\n\t\t\t\tbridge: \"=webFormsBridge\",\r\n\t\t\t\tbridgeSyncHeight: \"@bridgeSyncHeight\"\r\n\t\t\t},\r\n\t\t\tlink: function (scope, elem, attrs) {\r\n\r\n\t\t\t    var params = \"\";\r\n\t\t\t    if (scope.bridge.params) {\r\n\t\t\t        params = Object.keys(scope.bridge.params).map(function (prop) {\r\n\t\t\t            if (scope.bridge.params[prop] === null || scope.bridge.params[prop] === '')\r\n\t\t\t                return;\r\n\t\t\t            return [prop, scope.bridge.params[prop]].map(encodeURIComponent).join(\"=\");\r\n\t\t\t        }).join(\"&\");\r\n\t\t\t    }\r\n\r\n\t\t\t    elem[0].src = webFormsBridgeUrl + \"&type=\" + scope.type + (scope.bridge.params ? \"&\" + params : \"\");\r\n\t\t\t\telem.on(\"load\", function () {\t\t\t\t\t\r\n\t\t\t\t    var w = elem[0].contentWindow || elem[0];\r\n                    // test if the connectBridge works, if not, it's usually a telerik-not-installed issue\r\n\t\t\t\t    if (!w.connectBridge)\r\n\t\t\t\t        return alert(\"can't connect to the dialog - you are probably running a new DNN (v.8+) and didn't activate the old Telerik components. Please install these in the host > extensions to get this to work\");\r\n\t\t\t\t    \r\n\t\t\t\t\tw.connectBridge(scope.bridge);\r\n\r\n\t\t\t\t\t// Sync height\r\n\t\t\t\t\tif (scope.bridgeSyncHeight === \"true\") {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar resize = function () {\r\n\t\t\t\t\t\t\telem.css(\"height\", \"\");\r\n\t\t\t\t\t\t\telem.css(\"height\", w.document.body.scrollHeight + \"px\");\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t//w.$(w).resize(resize); // Performance issues when uncommenting this line...\r\n\t\t\t\t\t\tresize();\r\n\t\t\t\t\t\tw.$(w.document).ready(function() {\r\n\t\t\t\t\t\t\tresize();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tw.$(w.document).on('triggerbridgeresize', function () {\r\n\t\t\t\t\t\t    window.setTimeout(resize, 0);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t}]);\r\n\r\n})();\n(function() {\r\n    \"use strict\";\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n            var wrappers = defaultFieldWrappers.slice(0); // copy the array\r\n            wrappers.splice(defaultFieldWrappers.indexOf(\"eavLocalization\"), 1); // remove the localization...\r\n\r\n            formlyConfigProvider.setType({\r\n                name: \"entity-content-blocks\",\r\n                templateUrl: \"fields/entity/entity-default.html\",\r\n                wrapper: wrappers, // [\"eavLabel\", \"bootstrapHasError\", \"collapsible\"],\r\n                controller: \"FieldTemplate-EntityContentBlockCtrl\"\r\n            });\r\n        }])\r\n        /*@ngInject*/\r\n        .controller(\"FieldTemplate-EntityContentBlockCtrl\", [\"$controller\", \"$scope\", \"$http\", \"$filter\", \"$translate\", \"$uibModal\", \"appId\", \"eavAdminDialogs\", \"eavDefaultValueService\", function($controller, $scope, $http, $filter, $translate, $uibModal, appId, eavAdminDialogs, eavDefaultValueService) {\r\n            $scope.to.settings.merged.EnableRemove = true;\r\n            $scope.to.settings.merged.AllowMultiValue = true; // for correct UI showing \"remove\"\r\n            $scope.to.settings.merged.EnableAddExisting = false; // disable manual select existing\r\n            $scope.to.settings.merged.EnableCreate = false;         // disable manual create\r\n            $scope.to.settings.merged.EnableEdit = false;\r\n            $scope.to.settings.merged.EntityType = \"ContentGroupReference\";\r\n            $scope.to.enableCollapseField = true;   // ui option to allow collapsing\r\n            $scope.to.collapseField = true;   // ui option to allow collapsing\r\n\r\n\r\n            // use \"inherited\" controller just like described in http://stackoverflow.com/questions/18461263/can-an-angularjs-controller-inherit-from-another-controller-in-the-same-module\r\n            $controller(\"FieldTemplate-EntityCtrl\", { $scope: $scope });\r\n\r\n            // do something with the values...\r\n            var vals = $scope.model[$scope.options.key].Values[0].Value;\r\n\r\n            //addCSSRule(\"div\", \"background-color: pink\");\r\n        }]);\r\n\r\n    function addCSSRule(selector, rules, index) {\r\n        var sheet = document.styleSheets[0];\r\n        if (\"insertRule\" in sheet) {\r\n            sheet.insertRule(selector + \"{\" + rules + \"}\", index);\r\n        }\r\n        else if (\"addRule\" in sheet) {\r\n            sheet.addRule(selector, rules, index);\r\n        }\r\n    }\r\n\r\n})();\n\r\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('sxcFieldTemplates')\r\n        .config([\"formlyConfigProvider\", \"fieldWrappersWithPreview\", function (formlyConfigProvider, fieldWrappersWithPreview) {\r\n\r\n            formlyConfigProvider.setType({\r\n                name: 'hyperlink-default',\r\n                templateUrl: 'fields/hyperlink/hyperlink-default.html',\r\n                wrapper: fieldWrappersWithPreview,\r\n                controller: 'FieldTemplate-HyperlinkCtrl as vm'\r\n            });\r\n        }])\r\n        /*@ngInject*/\r\n        .controller('FieldTemplate-HyperlinkCtrl', [\"$uibModal\", \"$scope\", \"$http\", \"sxc\", \"adamSvc\", \"debugState\", \"dnnBridgeSvc\", \"fileType\", function ($uibModal, $scope, $http, sxc, adamSvc, debugState, dnnBridgeSvc, fileType) {\r\n\r\n            var vm = this;\r\n            vm.debug = debugState;\r\n            vm.testLink = '';\r\n\r\n            vm.isImage = function () { return fileType.isImage(vm.testLink); };\r\n            vm.thumbnailUrl = function thumbnailUrl(size, quote) {\r\n                var result = vm.testLink;\r\n                if (size === 1)\r\n                    result = result + '?w=64&h=64&mode=crop';\r\n                if (size === 2)\r\n                    result = result + '?w=500&h=400&mode=max';\r\n                var qt = quote ? '\"' : '';\r\n                return qt + result + qt;\r\n            };\r\n\r\n            vm.icon = function () { return fileType.getIconClass(vm.testLink); };\r\n            vm.tooltipUrl = function (str) { return str.replace(/\\//g, '/&#8203;'); };\r\n            vm.adamModeConfig = {\r\n                usePortalRoot: false\r\n            };\r\n\r\n            function ensureDefaultConfig() {\r\n                var merged = $scope.to.settings.merged;\r\n                if (merged.ShowAdam === undefined || merged.ShowAdam === null) merged.ShowAdam = true;\r\n                if (merged.Buttons === undefined || merged.Buttons === null) merged.Buttons = 'adam,more';\r\n            }\r\n\r\n            ensureDefaultConfig();\r\n\r\n            // Update test-link if necessary - both when typing or if link was set by dialogs\r\n            $scope.$watch('value.Value', function(newValue, oldValue) {\r\n                if (!newValue)\r\n                    return;\r\n\r\n                // handle short-ID links like file:17\r\n                var promise = dnnBridgeSvc.getUrlOfId(newValue);\r\n                if(promise)\r\n                    promise.then(function (result) {\r\n                        if (result.data) \r\n                            vm.testLink = result.data;\r\n                    });\r\n                else \r\n                    vm.testLink = newValue;\r\n            });\r\n\r\n            //#region dnn-page picker dialog\r\n\r\n            // the callback when something was selected\r\n            vm.processResultOfPagePicker = function (value) {\r\n                $scope.$apply(function() {\r\n                    // Convert to page:xyz format (if it wasn't cancelled)\r\n                    if (value)\r\n                        $scope.value.Value = 'page:' + value.id;\r\n                });\r\n            };\r\n\r\n            // open the dialog\r\n            vm.openPageDialog = function () {\r\n                dnnBridgeSvc.open(\r\n                    $scope.value.Value,\r\n                    {\r\n                        Paths: $scope.to.settings.merged ? $scope.to.settings.merged.Paths : '',\r\n                        FileFilter: $scope.to.settings.merged ? $scope.to.settings.merged.FileFilter : ''\r\n                    },\r\n                    vm.processResultOfPagePicker);\r\n            };\r\n            //#endregion dnn page picker\r\n\r\n          //#region new adam: callbacks only\r\n          vm.registerAdam = function(adam) {\r\n              vm.adam = adam;\r\n          };\r\n\r\n          vm.setValue = function (fileItem) {\r\n            // depending on settings, use the id or not\r\n            if ($scope.to.settings.merged.ServerResourceMapping &&\r\n              $scope.to.settings.merged.ServerResourceMapping === 'url')\r\n              $scope.value.Value = fileItem.fullPath // this is the one coming from the adam-browser\r\n                || fileItem.Path; // or the server request\r\n            else\r\n              $scope.value.Value = 'file:' + fileItem.Id;\r\n          };\r\n\r\n            $scope.afterUpload = vm.setValue;   // binding for dropzone\r\n\r\n            vm.toggleAdam = function toggle(usePortalRoot, imagesOnly) {\r\n                \r\n                vm.adam.toggle({\r\n                    showImagesOnly: imagesOnly,\r\n                    usePortalRoot: usePortalRoot\r\n                });\r\n            };\r\n\r\n            //#endregion\r\n\r\n\r\n        }]);\r\n\r\n\r\n})();\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", \"defaultFieldWrappersNoFloat\", function (formlyConfigProvider, defaultFieldWrappersNoFloat) {\r\n\r\n            formlyConfigProvider.setType({\r\n                name: \"hyperlink-library\",\r\n                templateUrl: \"fields/hyperlink/hyperlink-library.html\",\r\n                // todo: check if we could use the defaultFieldWrappers instead\r\n                wrapper: defaultFieldWrappersNoFloat,// [\"eavLabel\", \"bootstrapHasError\", \"eavLocalization\", \"collapsible\"],\r\n                controller: \"FieldTemplate-Library as vm\"\r\n            });\r\n\r\n        }])\r\n        /*@ngInject*/\r\n        .controller(\"FieldTemplate-Library\", [\"$uibModal\", \"$scope\", \"$http\", \"sxc\", \"adamSvc\", \"debugState\", function ($uibModal, $scope, $http, sxc, adamSvc, debugState) {\r\n\r\n            var vm = this;\r\n            vm.debug = debugState;\r\n            vm.modalInstance = null;\r\n            vm.testLink = \"\";\r\n\r\n            vm.adamModeConfig = {\r\n                usePortalRoot: false\r\n            };\r\n\r\n            //#region new adam: callbacks only\r\n            vm.registerAdam = function(adam) {\r\n                vm.adam = adam;\r\n            };\r\n            //vm.setValue = function(url) {\r\n            //    $scope.value.Value = url;\r\n            //};\r\n            $scope.afterUpload = function(fileItem) {};\r\n\r\n            vm.toggleAdam = function toggle() {\r\n                vm.adam.toggle();\r\n            };\r\n\r\n            //#endregion\r\n\r\n\r\n        }]);\r\n\r\n\r\n})();\n/*!\r\nMath.uuid.js (v1.4)\r\nhttp://www.broofa.com\r\nmailto:robert@broofa.com\r\n\r\nCopyright (c) 2010 Robert Kieffer\r\nDual licensed under the MIT and GPL licenses.\r\n*/\r\n\r\n/*\r\n * Generate a random uuid.\r\n *\r\n * USAGE: Math.uuid(length, radix)\r\n *   length - the desired number of characters\r\n *   radix  - the number of allowable values for each character.\r\n *\r\n * EXAMPLES:\r\n *   // No arguments  - returns RFC4122, version 4 ID\r\n *   >>> Math.uuid()\r\n *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\r\n *\r\n *   // One argument - returns ID of the specified length\r\n *   >>> Math.uuid(15)     // 15 character ID (default base=62)\r\n *   \"VcydxgltxrVZSTV\"\r\n *\r\n *   // Two arguments - returns ID of the specified length, and radix. (Radix must be <= 62)\r\n *   >>> Math.uuid(8, 2)  // 8 character ID (base=2)\r\n *   \"01001010\"\r\n *   >>> Math.uuid(8, 10) // 8 character ID (base=10)\r\n *   \"47473046\"\r\n *   >>> Math.uuid(8, 16) // 8 character ID (base=16)\r\n *   \"098F4D35\"\r\n */\r\n(function () {\r\n    // Private array of chars to use\r\n    var CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\r\n\r\n    Math.uuid = function (len, radix) {\r\n        var chars = CHARS, uuid = [], i;\r\n        radix = radix || chars.length;\r\n\r\n        if (len) {\r\n            // Compact form\r\n            for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix];\r\n        } else {\r\n            // rfc4122, version 4 form\r\n            var r;\r\n\r\n            // rfc4122 requires these characters\r\n            uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\r\n            uuid[14] = '4';\r\n\r\n            // Fill in random data.  At i==19 set the high bits of clock sequence as\r\n            // per rfc4122, sec. 4.1.5\r\n            for (i = 0; i < 36; i++) {\r\n                if (!uuid[i]) {\r\n                    r = 0 | Math.random() * 16;\r\n                    uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n                }\r\n            }\r\n        }\r\n\r\n        return uuid.join('');\r\n    };\r\n\r\n    // A more performant, but slightly bulkier, RFC4122v4 solution.  We boost performance\r\n    // by minimizing calls to random()\r\n    Math.uuidFast = function () {\r\n        var chars = CHARS, uuid = new Array(36), rnd = 0, r;\r\n        for (var i = 0; i < 36; i++) {\r\n            if (i == 8 || i == 13 || i == 18 || i == 23) {\r\n                uuid[i] = '-';\r\n            } else if (i == 14) {\r\n                uuid[i] = '4';\r\n            } else {\r\n                if (rnd <= 0x02) rnd = 0x2000000 + (Math.random() * 0x1000000) | 0;\r\n                r = rnd & 0xf;\r\n                rnd = rnd >> 4;\r\n                uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n            }\r\n        }\r\n        return uuid.join('');\r\n    };\r\n\r\n    // A more compact, but less performant, RFC4122v4 solution:\r\n    Math.uuidCompact = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n})();\n/* \r\n * Field: String - font-icon picker\r\n */\r\n\r\nangular.module(\"sxcFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"fieldWrappersWithPreview\", function (formlyConfigProvider, fieldWrappersWithPreview) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"string-font-icon-picker\",\r\n            templateUrl: \"fields/string/string-font-icon-picker.html\",\r\n            wrapper: fieldWrappersWithPreview,\r\n            controller: \"FieldTemplate-String-Font-Icon-Picker as vm\"\r\n        });\r\n\r\n    }])\r\n    /*@ngInject*/\r\n    .controller(\"FieldTemplate-String-Font-Icon-Picker\", [\"$scope\", \"debugState\", \"$ocLazyLoad\", \"appRoot\", function ($scope, debugState, $ocLazyLoad, appRoot) {\r\n        var vm = angular.extend(this, {\r\n            iconFilter: \"\", // used for in-line search\r\n            prefix: \"\", // used to find the right css-classes\r\n            previewPrefix: \"\", // used to preview the icon, in addition to the built-in class\r\n            icons: [], // list of icons, to be filled\r\n            useTestValues: false, // to prefill with test-values, in case needed\r\n            selectorIsOpen: false\r\n    });\r\n\r\n\r\n        //#region icon css-class-methods\r\n        function getIconClasses(className) {\r\n            var charcount = className.length, foundList = [], duplicateDetector = {};\r\n            if (!className) return foundList;\r\n            for (var ssSet = 0; ssSet < document.styleSheets.length; ssSet++) {\r\n                var classes = document.styleSheets[ssSet].rules || document.styleSheets[ssSet].cssRules;\r\n                if(classes)\r\n                    for (var x = 0; x < classes.length; x++)\r\n                        if (classes[x].selectorText && classes[x].selectorText.substring(0, charcount) === className) {\r\n                            // prevent duplicate-add...\r\n                            var txt = classes[x].selectorText,\r\n                                icnClass = txt.substring(0, txt.indexOf(\":\")).replace(\".\", \"\");\r\n                            if (!duplicateDetector[icnClass]) {\r\n                                foundList.push({ rule: classes[x], 'class': icnClass });\r\n                                duplicateDetector[icnClass] = true;\r\n                            }\r\n                        }\r\n            }\r\n            return foundList;\r\n        }\r\n\r\n//#endregion\r\n\r\n        //#region load additional resources\r\n        function loadAdditionalResources(files) {\r\n            files = files || \"\";\r\n            var mapped = files.replace(\"[App:Path]\", appRoot)\r\n                .replace(/([\\w])\\/\\/([\\w])/g,   // match any double // but not if part of https or just \"//\" at the beginning\r\n                \"$1/$2\");\r\n            var fileList = mapped ? mapped.split(\"\\n\") : [];\r\n            return $ocLazyLoad.load(fileList);\r\n        }\r\n        //#endregion\r\n\r\n        vm.setIcon = function(newValue) {\r\n            $scope.value.Value = newValue;\r\n            vm.selectorIsOpen = false;\r\n            //$scope.status.isopen = false;\r\n            $scope.form.$setDirty();\r\n        };\r\n\r\n        vm.activate = function() {\r\n            // get configured\r\n            var controlSettings = $scope.to.settings[\"string-font-icon-picker\"];\r\n            vm.files = (controlSettings) ? controlSettings.Files || \"\" : \"\";\r\n            vm.prefix = (controlSettings) ? controlSettings.CssPrefix || \"\" : \"\";\r\n            vm.previewPrefix = (controlSettings) ? controlSettings.PreviewCss || \"\" : \"\";\r\n\r\n            if (vm.useTestValues)\r\n                angular.extend(vm, {\r\n                    iconFilter: \"\",\r\n                    prefix: \".glyphicon-\",\r\n                    previewPrefix: \"glyphicon\",\r\n                });\r\n\r\n            // load all additional css, THEN load the icons\r\n            loadAdditionalResources(vm.files).then(function() {\r\n                // load the icons\r\n                vm.icons = getIconClasses(vm.prefix);\r\n\r\n            });\r\n\r\n            vm.debug = debugState;\r\n            if (debugState.on) console.log($scope.options.templateOptions);\r\n        };\r\n\r\n        vm.activate();\r\n    }]);\n// This isn't fully nice, but it's the code used by the template picker elements\r\n// it's outsourced here, to ensure that code revisions are clear and api consistent\r\n// because the previous version had the code inside the field-config\r\n// and was highly dependent on the angular/formly API, which changes a bit from time to time\r\n// this makes it easier to keep it in sync\r\n\r\n// I'll have to think of a better way to provide/inject this in the future...\r\n\r\n// must find out if we're in App or Content before we do more...\r\n\r\n(function () {\r\n    var cs = {\r\n        init: function(context) {\r\n            cs.context = context;\r\n\r\n            // get angular injector to get a service\r\n            var inj = context.$injector;\r\n\r\n            var appDialogConfigSvc = inj.get(\"appDialogConfigSvc\");\r\n\r\n            appDialogConfigSvc.getDialogSettings().then(function(result) {\r\n                var config = result.data;\r\n                // if this is a content-app, disable two fields\r\n                if (config.IsContent) {\r\n                    //disable current field\r\n                    context.formVm.formFields[context.field.SortOrder].templateOptions.disabled = true;\r\n                    // do the same for the data-field (field 20)\r\n                    context.formVm.formFields[20].templateOptions.disabled = true;\r\n                }\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    window[\"2sxc-template-picker-custom-script-for-name-field\"] = cs;\r\n})();\n/* \r\n * Field: String - Dropdown\r\n */\r\n\r\nangular.module(\"sxcFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function(formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"string-template-picker\",\r\n            templateUrl: \"fields/string/string-template-picker.html\",\r\n            wrapper: defaultFieldWrappers,\r\n            controller: \"FieldTemplate-String-TemplatePicker\"\r\n        });\r\n\r\n    }])\r\n    /*@ngInject*/\r\n    .controller(\"FieldTemplate-String-TemplatePicker\", [\"$scope\", \"appAssetsSvc\", \"appId\", \"fieldMask\", function ($scope, appAssetsSvc, appId, fieldMask) {\r\n\r\n        function activate() {\r\n            // ensure settings are merged\r\n            if (!$scope.to.settings.merged)\r\n                $scope.to.settings.merged = {};\r\n\r\n            $scope.setFileConfig(\"Token\"); // use token setting as default, till the UI tells us otherwise\r\n\r\n            // clean up existing paths, because some used \"/\" and some \"\\\" for paths, so it wouldn't match in the drop-down\r\n            if ($scope.options && $scope.options.value())\r\n                angular.forEach($scope.options.value().Values, function(v, i) {\r\n                    v.Value = v.Value.replace(\"\\\\\", \"/\");\r\n                });\r\n            \r\n\r\n            // set change-watchers to the other values\r\n            $scope.typeWatcher = fieldMask(\"[Type]\", $scope, $scope.setFileConfig);\r\n            $scope.locWatcher = fieldMask(\"[Location]\", $scope, $scope.onLocationChange);\r\n\r\n            // create initial list for binding\r\n            $scope.templates = [];\r\n\r\n            $scope.svcApp = appAssetsSvc(appId, false);\r\n            $scope.svcGlobal = appAssetsSvc(appId, true);\r\n\r\n            $scope.onLocationChange(); // set initial file list\r\n            //$scope.templates = $scope.svcApp.liveList();\r\n        }\r\n\r\n        $scope.readyToUse = function() {\r\n            return $scope.typeWatcher.value && $scope.locWatcher.value; // check if these have real values inside\r\n        };\r\n\r\n        $scope.setFileConfig = function (type) {\r\n            var specs = {\r\n                \"Token\": { ext: \".html\", prefix: \"\", suggestion: \"yourfile.html\", body: \"<p>You successfully created your own template. Start editing it by hovering the \\\"Manage\\\" button and opening the \\\"Edit Template\\\" dialog.</p>\" },\r\n                \"C# Razor\": { ext: \".cshtml\", prefix: \"_\", suggestion: \"_yourfile.cshtml\", body: \"<p>You successfully created your own template. Start editing it by hovering the \\\"Manage\\\" button and opening the \\\"Edit Template\\\" dialog.</p>\" }\r\n            };\r\n            $scope.file = specs[type];\r\n\r\n        };\r\n\r\n        // when the watcher says the location changed, reset stuff\r\n        $scope.onLocationChange = function(loc) {\r\n            $scope.svcCurrent = (loc === \"Host File System\") \r\n                ? $scope.svcGlobal\r\n                : $scope.svcApp;\r\n\r\n            $scope.templates = $scope.svcCurrent.liveList();\r\n        };\r\n\r\n        // ask for a new file name and \r\n        $scope.add = function() {\r\n            var fileName = prompt(\"enter new file name\", $scope.file.suggestion); // todo: i18n\r\n\r\n            if (!fileName)\r\n                return;\r\n\r\n            // 1. check for folders\r\n            var path = \"\";\r\n            fileName = fileName.replace(\"\\\\\", \"/\");\r\n            var foundSlash = fileName.lastIndexOf(\"/\");\r\n            if (foundSlash > -1) {\r\n                path = fileName.substring(0, foundSlash + 1); // path with slash\r\n                fileName = fileName.substring(foundSlash + 1);\r\n            }\r\n\r\n            // 2. check if extension already provided, otherwise or if not perfect, just attach default\r\n            if (!fileName.endsWith($scope.file.ext))// fileName.indexOf($scope.fileExt) !== fileName.length - $scope.fileExt.length)\r\n                fileName += $scope.file.ext;\r\n\r\n            // 3. check if cshtmls have a \"_\" in the file name (not folder, must be the file name part)\r\n            if ($scope.file.prefix !== \"\" && fileName[0] !== $scope.file.prefix)\r\n                fileName = $scope.file.prefix + fileName;\r\n\r\n            var fullPath = path + fileName;\r\n            console.log(fullPath);\r\n\r\n            // 4. tell service to create it\r\n            $scope.svcCurrent.create(fullPath, $scope.file.body)\r\n                .then(function() {\r\n                    $scope.value.Value = fullPath; // set the dropdown to the new file\r\n                });\r\n        };\r\n\r\n        activate();\r\n\r\n    }])\r\n\r\n    // filter to only show files which are applicable to this\r\n    .filter(\"isValidFile\", function() {\r\n\r\n        // Create the return function\r\n        // set the required parameter name to **number**\r\n        return function(paths, ext) {\r\n            var out = [];\r\n            angular.forEach(paths, function(path) {\r\n                if (path.slice(path.length - ext.length) === ext)\r\n                    out.push(path);\r\n            });\r\n            return out;\r\n        };\r\n    });\r\n\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\t/* This app registers all field templates for 2sxc in the angularjs sxcFieldTemplates app */\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function(formlyConfigProvider) {\r\n\r\n            // for now identical with -adv, but later will change\r\n            formlyConfigProvider.setType({\r\n                name: \"string-wysiwyg-adv\",\r\n                templateUrl: \"fields/string/string-wysiwyg-adv.html\",\r\n                // todo: check if we could use the defaultFieldWrappers instead\r\n                wrapper: [\"eavLabel\", \"bootstrapHasError\", \"eavLocalization\", \"collapsible\"]\r\n            });\r\n\r\n\r\n        }]);\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\t/* This app registers all field templates for 2sxc in the angularjs sxcFieldTemplates app */\r\n\r\n\tangular.module(\"sxcFieldTemplates\")\r\n\r\n    .config([\"formlyConfigProvider\", function (formlyConfigProvider) {\r\n\r\n        // for now identical with -adv, but later will change\r\n\t\tformlyConfigProvider.setType({\r\n\t\t\tname: \"string-wysiwyg-dnn\",\r\n\t\t\ttemplateUrl: \"fields/string/string-wysiwyg-dnn.html\",\r\n\t\t    // todo: check if we could use the defaultFieldWrappers instead\r\n\t\t\twrapper: [\"eavLabel\", \"bootstrapHasError\", \"eavLocalization\", \"collapsible\"],\r\n\t\t\tcontroller: \"FieldTemplate-WysiwygCtrl as vm\"\r\n\t\t});\r\n\r\n        \r\n\t}])\r\n\r\n\r\n    /*@ngInject*/\r\n\t.controller(\"FieldTemplate-WysiwygCtrl\", [\"$scope\", function ($scope) {\r\n\r\n\t\tvar vm = this;\r\n\r\n\t\t// Everything the WebForms bridge (iFrame) should have access to\r\n\t\tvm.bridge = {\r\n\t\t    initialValue: \"\",\r\n            initialReadOnly: false,\r\n\t\t    onChanged: function (newValue) {\r\n\t\t\t\t$scope.$apply(function () {\r\n\t\t\t\t\t$scope.value.Value = newValue;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tsetValue: function (value) { vm.bridge.initialValue = value; },\r\n\t\t\tsetReadOnly: function(readOnly) { vm.bridge.initialReadOnly = readOnly; }\r\n\t\t};\r\n\r\n\t\t$scope.$watch(\"value.Value\", function (newValue, oldValue) {\r\n\t\t\tif (newValue !== oldValue)\r\n\t\t\t\tvm.bridge.setValue(newValue);\r\n\t\t});\r\n\r\n\t\t$scope.$watch(\"to.disabled\", function (newValue, oldValue) {\r\n\t\t\tif (newValue !== oldValue)\r\n\t\t\t\tvm.bridge.setReadOnly(newValue);\r\n\t\t});\r\n\r\n\t}]);\r\n\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n    // Register in Angular Formly\r\n    FieldWysiwygTinyMceController.$inject = [\"$scope\", \"languages\", \"tinyMceHelpers\", \"tinyMceToolbars\", \"tinyMceConfig\", \"tinyMceAdam\", \"tinyMceDnnBridge\"];\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n            formlyConfigProvider.setType({\r\n                name: \"string-wysiwyg-tinymce\",\r\n                templateUrl: \"fields/string/string-wysiwyg-tinymce.html\",\r\n                wrapper: defaultFieldWrappers, \r\n                controller: \"FieldWysiwygTinyMce as vm\"\r\n            });\r\n        }])\r\n\r\n        .controller(\"FieldWysiwygTinyMce\", FieldWysiwygTinyMceController);\r\n\r\n    /*@ngInject*/\r\n    function FieldWysiwygTinyMceController($scope, languages, tinyMceHelpers, tinyMceToolbars, tinyMceConfig, tinyMceAdam, tinyMceDnnBridge) {\r\n        var vm = this;\r\n        vm.enableContentBlocks = true;\r\n\r\n        var settings = {\r\n            enableContentBlocks : false\r\n        };\r\n\r\n        vm.adamModeConfig = {\r\n            usePortalRoot: false\r\n        };\r\n\r\n        vm.activate = function () {\r\n\r\n            enableContentBlocksIfPossible(settings);\r\n\r\n            // initialize options and wire-up init-callback\r\n            $scope.tinymceOptions = angular.extend(tinyMceConfig.getDefaultOptions(settings), {\r\n                setup: tinyMceInitCallback\r\n            });\r\n\r\n            // add ADAM definition, so that the callback will be able to link up to this\r\n            tinyMceAdam.attachAdam(vm, $scope);\r\n\r\n            // add DNN Bridge, needed for webforms dnn-dialogs\r\n            tinyMceDnnBridge.attach(vm, $scope);\r\n\r\n            // check if it's an additionally translated language and load the translations\r\n            var lang2 = /* \"de\" */ languages.currentLanguage.substr(0, 2);\r\n            if (tinyMceConfig.languages.indexOf(lang2) >= 0)\r\n                angular.extend($scope.tinymceOptions, {\r\n                    language: lang2,\r\n                    language_url: \"../i18n/lib/tinymce/\" + lang2 + \".js\"\r\n                });\r\n\r\n            watchDisabled($scope);\r\n        };\r\n        vm.activate();\r\n\r\n        // callback event which tinyMce will execute when it's built the editor\r\n        function tinyMceInitCallback(editor) {\r\n            vm.editor = editor;\r\n            if ($scope.tinymceOptions.language)\r\n                tinyMceHelpers.addTranslations(editor, $scope.tinymceOptions.language);\r\n\r\n            tinyMceToolbars.addButtons(vm);\r\n            tinyMceAdam.addButtons(vm);\r\n\r\n            enableContentBlocksIfPossible(editor);\r\n        }\r\n\r\n        function watchDisabled(ngscope) {\r\n            // Monitor for changes on Disabled\r\n            ngscope.$watch(\"to.disabled\", function(newValue, oldValue) {\r\n                if (newValue !== oldValue && vm.editor !== null) {\r\n                    ngscope.tinymceOptions.readonly = newValue;\r\n                    ngscope.$broadcast(\"$tinymce:refresh\"); // Refresh tinymce instance to pick-up new readonly value\r\n                }\r\n            });\r\n        }\r\n\r\n        function enableContentBlocksIfPossible(settings) {\r\n            // quit if there are no following fields\r\n            if ($scope.fields.length === $scope.index + 1)\r\n                return;\r\n\r\n            var nextField = $scope.fields[$scope.index + 1];\r\n            if (nextField.type === \"entity-content-blocks\")\r\n                settings.enableContentBlocks = true;\r\n        }\r\n    }\r\n\r\n\r\n\r\n})();\r\n\r\n\r\n\nangular.module('sxcFieldTemplates')\r\n    /*@ngInject*/\r\n    .factory('tinyMceAdam', function () {\r\n        return {\r\n            attachAdam: attachAdam,\r\n            addButtons: addAdamButtons\r\n        };\r\n\r\n        function attachAdam(vm, $scope) {\r\n            vm.registerAdam = function (adam) {\r\n                vm.adam = adam;\r\n            };\r\n\r\n            vm.setValue = function (fileItem, modeImage) {\r\n              if (modeImage === undefined) // if not supplied, use the setting in the adam\r\n                modeImage = vm.adamModeImage;\r\n              var fileName = fileItem.Name.substr(0, fileItem.Name.lastIndexOf('.'));\r\n              vm.editor.insertContent(modeImage\r\n                ? '<img src=\"' + fileItem.fullPath + '\" + alt=\"' + fileName + '\">'\r\n                : '<a href=\"' + fileItem.fullPath + '\">' + fileName + '</a>');\r\n            };\r\n\r\n            // this is the event called by dropzone as something is dropped\r\n            $scope.afterUpload = function (fileItem) {\r\n                vm.setValue(fileItem, fileItem.Type === 'image');\r\n            };\r\n\r\n            vm.toggleAdam = function toggle(imagesOnly, usePortalRoot) {\r\n                vm.adamModeImage = imagesOnly;\r\n                vm.adam.toggle({\r\n                    showImagesOnly: imagesOnly,\r\n                    usePortalRoot: usePortalRoot\r\n                });\r\n                $scope.$apply();\r\n            };\r\n        }\r\n\r\n        function addAdamButtons(vm) {\r\n            var e = vm.editor;\r\n            // group with adam-link, dnn-link\r\n            e.addButton('linkfiles', {\r\n                type: 'splitbutton',\r\n                icon: ' eav-icon-file-pdf',\r\n                title: 'Link.AdamFile.Tooltip',\r\n                onclick: function () {\r\n                    vm.toggleAdam(false);\r\n                },\r\n                menu: [\r\n                    {\r\n                        text: 'Link.AdamFile',\r\n                        tooltip: 'Link.AdamFile.Tooltip',\r\n                        icon: ' eav-icon-file-pdf',\r\n                        onclick: function () {\r\n                            vm.toggleAdam(false, false);\r\n                        }\r\n                    }, {\r\n                        text: 'Link.DnnFile',\r\n                        tooltip: 'Link.DnnFile.Tooltip',\r\n                        icon: ' eav-icon-file',\r\n                        onclick: function () {\r\n                            vm.toggleAdam(false, true);\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n\r\n            // group with images (adam) - only in PRO mode\r\n            e.addButton('images', {\r\n                type: 'splitbutton',\r\n                text: '',\r\n                icon: 'image',\r\n                onclick: function () {\r\n                    vm.toggleAdam(true);\r\n                },\r\n                menu: [\r\n                    {\r\n                        text: 'Image.AdamImage',\r\n                        tooltip: 'Image.AdamImage.Tooltip',\r\n                        icon: 'image',\r\n                        onclick: function () { vm.toggleAdam(true); }\r\n                    }, {\r\n                        text: 'Image.DnnImage',\r\n                        tooltip: 'Image.DnnImage.Tooltip',\r\n                        icon: 'image',\r\n                        onclick: function () { vm.toggleAdam(true, true); }\r\n                    }, {\r\n                        text: 'Insert\\/edit image', // i18n tinyMce standard\r\n                        icon: 'image',\r\n                        onclick: function () { e.execCommand('mceImage'); }\r\n\r\n                    },\r\n                    // note: all these use i18n from tinyMce standard\r\n                    { icon: 'alignleft', tooltip: 'Align left', onclick: function () { e.execCommand('JustifyLeft'); } },\r\n                    { icon: 'aligncenter', tooltip: 'Align center', onclick: function () { e.execCommand('JustifyCenter'); } },\r\n                    { icon: 'alignright', tooltip: 'Align right', onclick: function () { e.execCommand('JustifyRight'); } }\r\n                ]\r\n            });\r\n\r\n        }\r\n    });\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceConfig\", [\"beta\", function (beta) {\r\n        var svc = {\r\n            // cdn root\r\n            cdnRoot: \"//cdn.tinymce.com/4\",\r\n            // these are the sizes we can auto-resize to\r\n            imgSizes: [100, 75, 70, 66, 60, 50, 40, 33, 30, 25, 10],\r\n\r\n            // the default language, in which we have all labels/translations\r\n            defaultLanguage: \"en\",\r\n\r\n            // all other languages\r\n            languages: \"de,es,fr,it,uk,nl\".split(\",\"),\r\n\r\n            // tinyMCE plugins we're using\r\n            plugins: [\r\n                \"code\", // allow view / edit source\r\n                \"contextmenu\", // right-click menu for things like insert, etc.\r\n                \"autolink\", // automatically convert www.xxx links to real links\r\n                \"tabfocus\", // get in an out of the editor with tab\r\n                \"image\", // image button and image-settings\r\n                \"link\", // link button + ctrl+k to add link\r\n                // \"autosave\",     // temp-backups the content in case the browser crashes, allows restore\r\n                \"paste\", // enables paste as text from word etc. https://www.tinymce.com/docs/plugins/paste/\r\n                \"anchor\", // allows users to set an anchor inside the text\r\n                \"charmap\", // character map https://www.tinymce.com/docs/plugins/visualchars/\r\n                \"hr\", // hr\r\n                \"media\", // video embed\r\n                \"nonbreaking\", // add button to insert &nbsp; https://www.tinymce.com/docs/plugins/nonbreaking/\r\n                \"searchreplace\", // search/replace https://www.tinymce.com/docs/plugins/searchreplace/\r\n                \"table\", // https://www.tinymce.com/docs/plugins/searchreplace/\r\n                \"lists\", // should fix bug with fonts in list-items (https://github.com/tinymce/tinymce/issues/2330),\r\n                \"textpattern\" // enable typing like \"1. text\" to create lists etc.\r\n            ],\r\n            \r\n            validateAlso: '@[class]' // allow classes on all elements, \r\n                    + ',i' // allow i elements (allows icon-font tags like <i class=\"fa fa-...\">)\r\n                    + \",hr[sxc|guid]\" // experimental: allow inline content-blocks\r\n        };\r\n\r\n        function buildModes(settings) {\r\n            // the WYSIWYG-modes we offer, standard with simple toolbar and advanced with much more\r\n            modes = {\r\n                standard: {\r\n                    menubar: false,\r\n                    toolbar: \" undo redo removeformat \"\r\n                        + \"| bold formatgroup \"\r\n                        + \"| h1 h2 hgroup \"\r\n                        + \"| listgroup \"\r\n                        + \"| linkfiles linkgroup \"\r\n                        + \"| \" + (settings.enableContentBlocks ? \" addcontentblock \" : \"\")+ \"modeadvanced \",\r\n                    contextmenu: \"charmap hr\" + (settings.enableContentBlocks ? \" addcontentblock\" : \"\")\r\n                },\r\n                advanced: {\r\n                    menubar: true,\r\n                    toolbar: \" undo redo removeformat \"\r\n                        + \"| styleselect \"\r\n                        + \"| bold italic \"\r\n                        + \"| h1 h2 hgroup \"\r\n                        + \"| bullist numlist outdent indent \"\r\n                        + \"| images linkfiles linkgrouppro \"\r\n                        + \"| code modestandard \",\r\n                    contextmenu: \"link image | charmap hr adamimage\"\r\n                }\r\n            };\r\n            return modes;\r\n        }\r\n\r\n        svc.getDefaultOptions = function (settings) {\r\n            var modes = buildModes(settings);\r\n            return {\r\n                baseURL: svc.cdnRoot,\r\n                inline: true, // use the div, not an iframe\r\n                automatic_uploads: false, // we're using our own upload mechanism\r\n                modes: modes, // for later switch to another mode\r\n                menubar: modes.standard.menubar, // basic menu (none)\r\n                toolbar: modes.standard.toolbar, // basic toolbar\r\n                plugins: svc.plugins.join(\" \"),\r\n                contextmenu: modes.standard.contextmenu, //\"link image | charmap hr adamimage\",\r\n                autosave_ask_before_unload: false,\r\n                paste_as_text: true,\r\n                extended_valid_elements: svc.validateAlso,\r\n                //'@[class]' // allow classes on all elements, \r\n                //+ ',i' // allow i elements (allows icon-font tags like <i class=\"fa fa-...\">)\r\n                //+ \",hr[sxc|guid]\", // experimental: allow inline content-blocks\r\n                custom_elements: \"hr\",\r\n\r\n                // Url Rewriting in images and pages\r\n                //convert_urls: false,  // don't use this, would keep the domain which is often a test-domain\r\n                relative_urls: false, // keep urls with full path so starting with a \"/\" - otherwise it would rewrite them to a \"../../..\" syntax\r\n                default_link_target: \"_blank\", // auto-use blank as default link-target\r\n                object_resizing: false, // don't allow manual scaling of images\r\n\r\n                // General looks\r\n                skin: \"lightgray\",\r\n                theme: \"modern\",\r\n                // statusbar: true,    // doesn't work in inline :(\r\n\r\n                language: svc.defaultLanguage,\r\n\r\n                debounce: false // DONT slow-down model updates - otherwise we sometimes miss the last changes\r\n            };\r\n        };\r\n\r\n        return svc;\r\n    }]);\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceDnnBridge\", [\"dnnBridgeSvc\", function (dnnBridgeSvc) {\r\n        return {\r\n            attach: attach\r\n        };\r\n\r\n        function attach(vm, $scope) {\r\n\r\n            // the callback when something was selected\r\n            vm.processResultOfDnnBridge = function (value) {\r\n                $scope.$apply(function () {\r\n                    if (!value) return;\r\n\r\n                    var previouslySelected = vm.editor.selection.getContent();\r\n                    \r\n                    var promise = dnnBridgeSvc.getUrlOfId(\"page:\" + (value.id || value.FileId)); // id on page, FileId on file\r\n                    return promise.then(function (result) {\r\n                        vm.editor.insertContent(\"<a href=\\\"\" + result.data + \"\\\">\" + (previouslySelected || value.name) + \"</a>\");\r\n                    });\r\n\r\n                });\r\n            };\r\n\r\n            // open the dialog - note: strong dependency on the buttons, not perfect here\r\n            vm.openDnnDialog = function (type) {\r\n                dnnBridgeSvc.open(\"\", { Paths: null, FileFilter: null }, vm.processResultOfDnnBridge);\r\n            };\r\n\r\n        }\r\n\r\n    }]);\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceHelpers\", [\"$translate\", \"tinyMceConfig\", function ($translate, tinyMceConfig) {\r\n        var svc = {\r\n            addTranslations: initLangResources\r\n        };\r\n\r\n        // Initialize the tinymce resources which we translate ourselves\r\n        function initLangResources(editor, language) {\r\n            var primaryLan = tinyMceConfig.defaultLanguage;\r\n            var keys = [], mceTranslations = {}, prefix = \"Extension.TinyMce.\", pLen = prefix.length;\r\n\r\n            // find all relevant keys by querying the primary language\r\n            var all = $translate.getTranslationTable(primaryLan);\r\n            // ReSharper disable once MissingHasOwnPropertyInForeach\r\n            for (var key in all)\r\n                if (key.indexOf(prefix) === 0)\r\n                    keys.push(key);\r\n\r\n            var translations = $translate.instant(keys);\r\n\r\n            for (var k = 0; k < keys.length; k++)\r\n                mceTranslations[keys[k].substring(pLen)] = translations[keys[k]];\r\n            tinymce.addI18n(language, mceTranslations);\r\n        }\r\n        return svc;\r\n    }]);\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceToolbars\", [\"tinyMceConfig\", function (tinyMceConfig) {\r\n        var svc = {\r\n            addButtons: addTinyMceToolbarButtons\r\n        };\r\n\r\n        function addTinyMceToolbarButtons(vm) {\r\n            var editor = vm.editor;\r\n            //#region helpers like initOnPostRender(name)\r\n\r\n            // helper function to add activate/deactivate to buttons like alignleft, alignright etc.\r\n            function initOnPostRender(name) { // copied/modified from https://github.com/tinymce/tinymce/blob/ddfa0366fc700334f67b2c57f8c6e290abf0b222/js/tinymce/classes/ui/FormatControls.js#L232-L249\r\n                return function () {\r\n                    var self = this; // keep ref to the current button?\r\n\r\n                    function watchChange() {\r\n                        editor.formatter.formatChanged(name, function (state) {\r\n                            self.active(state);\r\n                        });\r\n                    }\r\n\r\n                    if (editor.formatter)\r\n                        watchChange();\r\n                    else\r\n                        editor.on(\"init\", watchChange());\r\n                };\r\n            }\r\n\r\n            //#endregion\r\n\r\n            //#region register formats\r\n\r\n            // the method that will register all formats - like img-sizes\r\n            function registerTinyMceFormats(editor, vm) {\r\n                var imgformats = {};\r\n                for (var is = 0; is < tinyMceConfig.imgSizes.length; is++)\r\n                    imgformats[\"imgwidth\" + tinyMceConfig.imgSizes[is]] = [{ selector: \"img\", collapsed: false, styles: { 'width': tinyMceConfig.imgSizes[is] + \"%\" } }];\r\n                editor.formatter.register(imgformats);\r\n            }\r\n\r\n            // call register once the editor-object is ready\r\n            editor.on('init', function () {\r\n                registerTinyMceFormats(editor, vm);\r\n            });\r\n\r\n            //#endregion\r\n\r\n            //// group with adam-link, dnn-link\r\n            //editor.addButton(\"linkfiles\", {\r\n            //    type: \"splitbutton\",\r\n            //    icon: \" eav-icon-file-pdf\",\r\n            //    title: \"Link.AdamFile.Tooltip\",\r\n            //    onclick: function () {\r\n            //        vm.toggleAdam(false);\r\n            //    },\r\n            //    menu: [\r\n            //        {\r\n            //            text: \"Link.AdamFile\",\r\n            //            tooltip: \"Link.AdamFile.Tooltip\",\r\n            //            icon: \" eav-icon-file-pdf\",\r\n            //            onclick: function () {\r\n            //                vm.toggleAdam(false);\r\n            //            }\r\n            //        }, {\r\n            //            text: \"Link.DnnFile\",\r\n            //            tooltip: \"Link.DnnFile.Tooltip\",\r\n            //            icon: \" eav-icon-file\",\r\n            //            onclick: function () {\r\n            //                vm.openDnnDialog(\"documentmanager\");\r\n            //            }\r\n            //        }\r\n            //    ]\r\n            //});\r\n\r\n            //#region link group with web-link, page-link, unlink, anchor\r\n            var linkgroup = {\r\n                type: \"splitbutton\",\r\n                icon: \"link\",\r\n                title: \"Link\",\r\n                onPostRender: initOnPostRender(\"link\"),\r\n                onclick: function () {\r\n                    editor.execCommand(\"mceLink\");\r\n                },\r\n\r\n                menu: [\r\n                { icon: \"link\", text: \"Link\", onclick: function () { editor.execCommand(\"mceLink\"); } },\r\n                {\r\n                    text: \"Link.Page\",\r\n                    tooltip: \"Link.Page.Tooltip\",\r\n                    icon: \" eav-icon-sitemap\",\r\n                    onclick: function () {\r\n                        vm.openDnnDialog(\"pagepicker\");\r\n                    }\r\n                }\r\n                ]\r\n            };\r\n            var linkgroupPro = angular.copy(linkgroup);\r\n            linkgroupPro.menu.push({ icon: \" eav-icon-anchor\", text: \"Anchor\", tooltip: \"Link.Anchor.Tooltip\", onclick: function () { editor.execCommand(\"mceAnchor\"); } });\r\n            editor.addButton(\"linkgroup\", linkgroup);\r\n            editor.addButton(\"linkgrouppro\", linkgroupPro);\r\n            //#endregion\r\n\r\n            // group with images (adam) - only in PRO mode\r\n            editor.addButton(\"images\", {\r\n                type: \"splitbutton\",\r\n                text: \"\",\r\n                icon: \"image\",\r\n                onclick: function () {\r\n                    vm.toggleAdam(true);\r\n                },\r\n                menu: [\r\n                    {\r\n                        text: \"Image.AdamImage\",\r\n                        tooltip: \"Image.AdamImage.Tooltip\",\r\n                        icon: \"image\",\r\n                        onclick: function () { vm.toggleAdam(true); }\r\n                    }, {\r\n                        text: \"Image.DnnImage\",\r\n                        tooltip: \"Image.DnnImage.Tooltip\",\r\n                        icon: \"image\",\r\n                        onclick: function () { vm.toggleAdam(true, true); }\r\n                    }, {\r\n                        text: \"Insert\\/edit image\", // i18n tinyMce standard\r\n                        icon: \"image\",\r\n                        onclick: function () { editor.execCommand(\"mceImage\"); }\r\n\r\n                    },\r\n                    // note: all these use i18n from tinyMce standard\r\n                    { icon: \"alignleft\", tooltip: \"Align left\", onclick: function () { editor.execCommand(\"JustifyLeft\"); } },\r\n                    { icon: \"aligncenter\", tooltip: \"Align center\", onclick: function () { editor.execCommand(\"JustifyCenter\"); } },\r\n                    { icon: \"alignright\", tooltip: \"Align right\", onclick: function () { editor.execCommand(\"JustifyRight\"); } }\r\n                ]\r\n            });\r\n\r\n            // drop-down with italic, strikethrough, ...\r\n            editor.addButton(\"formatgroup\", {\r\n                type: \"splitbutton\",\r\n                tooltip: \"Italic\",  // will be autotranslated\r\n                text: \"\",\r\n                icon: \"italic\",\r\n                cmd: \"italic\",\r\n                onPostRender: initOnPostRender(\"italic\"),\r\n                menu: [\r\n                    { icon: \"strikethrough\", text: \"Strikethrough\", onclick: function () { editor.execCommand(\"strikethrough\"); } },\r\n                    { icon: \"superscript\", text: \"Superscript\", onclick: function () { editor.execCommand(\"superscript\"); } },\r\n                    { icon: \"subscript\", text: \"Subscript\", onclick: function () { editor.execCommand(\"subscript\"); } }\r\n                ]\r\n\r\n            });\r\n\r\n            // drop-down with italic, strikethrough, ...\r\n            editor.addButton(\"listgroup\", {\r\n                type: \"splitbutton\",\r\n                tooltip: \"Numbered list\",  // official tinymce key\r\n                text: \"\",\r\n                icon: \"numlist\",\r\n                cmd: \"InsertOrderedList\",\r\n                onPostRender: initOnPostRender(\"numlist\"),  // for unknown reasons, this just doesn't activate correctly :( - neither does the bullist\r\n                menu: [\r\n                    { icon: \"bullist\", text: \"Bullet list\", onPostRender: initOnPostRender(\"bullist\"), onclick: function () { editor.execCommand(\"InsertUnorderedList\"); } },\r\n                    { icon: \"outdent\", text: \"Outdent\", onclick: function () { editor.execCommand(\"Outdent\"); } },\r\n                    { icon: \"indent\", text: \"Indent\", onclick: function () { editor.execCommand(\"Indent\"); } }\r\n                ]\r\n\r\n            });\r\n\r\n            //#region mode switching and the buttons for it\r\n            function switchModes(mode) {\r\n                editor.settings.toolbar = editor.settings.modes[mode].toolbar;\r\n                editor.settings.menubar = editor.settings.modes[mode].menubar;\r\n                // editor.settings.contextmenu = editor.settings.modes[mode].contextmenu; - doesn't work at the moment\r\n\r\n                editor.theme.panel.remove();    // kill current toolbar\r\n                editor.theme.renderUI(editor);\r\n                editor.execCommand(\"mceFocus\");\r\n\r\n                // focus away...\r\n                document.getElementById(\"dummyfocus\").focus();\r\n\r\n                // ...and focus back a bit later\r\n                setTimeout(function () {\r\n                    editor.focus();\r\n                }, 100);\r\n            }\r\n\r\n            editor.addButton(\"modestandard\", {\r\n                icon: \" eav-icon-cancel\",\r\n                tooltip: \"SwitchMode.Standard\",\r\n                onclick: function () { switchModes(\"standard\"); }\r\n            });\r\n\r\n            editor.addButton(\"modeadvanced\", {\r\n                icon: \" eav-icon-pro\",\r\n                tooltip: \"SwitchMode.Pro\",\r\n                onclick: function () { switchModes(\"advanced\"); }\r\n            });\r\n            //#endregion\r\n\r\n            //#region h1, h2, etc. buttons, inspired by http://blog.ionelmc.ro/2013/10/17/tinymce-formatting-toolbar-buttons/\r\n            // note that the complex array is needede because auto-translate only happens if the string is identical\r\n            [[\"pre\", \"Preformatted\", \"Preformatted\"],\r\n                [\"p\", \"Paragraph\", \"Paragraph\"],\r\n                [\"code\", \"Code\", \"Code\"],\r\n                [\"h1\", \"Heading 1\", \"H1\"],\r\n                [\"h2\", \"Heading 2\", \"H2\"],\r\n                [\"h3\", \"Heading 3\", \"H3\"],\r\n                [\"h4\", \"Heading 4\", \"Heading 4\"],\r\n                [\"h5\", \"Heading 5\", \"Heading 5\"],\r\n                [\"h6\", \"Heading 6\", \"Heading 6\"]].forEach(function (tag) {\r\n                    editor.addButton(tag[0], {\r\n                        tooltip: tag[1],\r\n                        text: tag[2],\r\n                        onclick: function () { editor.execCommand(\"mceToggleFormat\", false, tag[0]); },\r\n                        onPostRender: function () {\r\n                            var self = this,\r\n                                setup = function () {\r\n                                    editor.formatter.formatChanged(tag[0], function (state) {\r\n                                        self.active(state);\r\n                                    });\r\n                                };\r\n                            var x = editor.formatter ? setup() : editor.on(\"init\", setup);\r\n                        }\r\n                    });\r\n                });\r\n\r\n            // group of buttons with an h3 to start and showing h4-6 + p\r\n            editor.addButton(\"hgroup\", angular.extend({}, editor.buttons.h3,\r\n            {\r\n                type: \"splitbutton\",\r\n                menu: [\r\n                    editor.buttons.h4,\r\n                    editor.buttons.h5,\r\n                    editor.buttons.h6,\r\n                    editor.buttons.p\r\n                ]\r\n            }));\r\n            //#endregion\r\n\r\n            // #region inside content\r\n            editor.addButton(\"addcontentblock\", {\r\n                icon: \" eav-icon-content-block\",\r\n                classes: \"btn-addcontentblock\",\r\n                tooltip: \"ContentBlock.Add\",\r\n                onclick: function() {\r\n                    var guid = Math.uuid().toLowerCase(); // requires the uuid-generator to be included\r\n                    \r\n                    vm.editor.insertContent(\"<hr sxc=\\\"sxc-content-block\\\" guid=\\\"\" + guid + \"\\\" />\");\r\n                }\r\n            });\r\n            // #endregion\r\n\r\n            //#region image alignment / size buttons\r\n            editor.addButton(\"alignimgleft\", { icon: \" eav-icon-align-left\", tooltip: \"Align left\", cmd: \"JustifyLeft\", onPostRender: initOnPostRender(\"alignleft\") });\r\n            editor.addButton(\"alignimgcenter\", { icon: \" eav-icon-align-center\", tooltip: \"Align center\", cmd: \"justifycenter\", onPostRender: initOnPostRender(\"aligncenter\") });\r\n            editor.addButton(\"alignimgright\", { icon: \" eav-icon-align-right\", tooltip: \"Align right\", cmd: \"justifyright\", onPostRender: initOnPostRender(\"alignright\") });\r\n\r\n            var imgMenuArray = [];\r\n            function makeImgFormatCall(size) { return function () { editor.formatter.apply(\"imgwidth\" + size); }; }\r\n            for (var is = 0; is < tinyMceConfig.imgSizes.length; is++) {\r\n                var config = {\r\n                    icon: \" eav-icon-resize-horizontal\",\r\n                    tooltip: tinyMceConfig.imgSizes[is] + \"%\",\r\n                    text: tinyMceConfig.imgSizes[is] + \"%\",\r\n                    onclick: makeImgFormatCall(tinyMceConfig.imgSizes[is]),\r\n                    onPostRender: initOnPostRender(\"imgwidth\" + tinyMceConfig.imgSizes[is])\r\n                };\r\n                editor.addButton(\"imgresize\" + tinyMceConfig.imgSizes[is], config);\r\n                imgMenuArray.push(config);\r\n            }\r\n\r\n            editor.addButton(\"resizeimg100\", {\r\n                icon: \" eav-icon-resize-horizontal\", tooltip: \"100%\",\r\n                onclick: function () { editor.formatter.apply(\"imgwidth100\"); },\r\n                onPostRender: initOnPostRender(\"imgwidth100\")\r\n            });\r\n\r\n            // group of buttons to resize an image 100%, 50%, etc.\r\n            editor.addButton(\"imgresponsive\", angular.extend({}, editor.buttons.resizeimg100,\r\n            { type: \"splitbutton\", menu: imgMenuArray }));\r\n            //#endregion\r\n\r\n            //#region my context toolbars for links, images and lists (ul/li)\r\n            function makeTagDetector(tagWeNeedInTheTagPath) {\r\n                return function tagDetector(currentElement) {\r\n                    // check if we are in a tag within a specific tag\r\n                    var selectorMatched = editor.dom.is(currentElement, tagWeNeedInTheTagPath) && editor.getBody().contains(currentElement);\r\n                    return selectorMatched;\r\n                };\r\n            }\r\n\r\n            editor.addContextToolbar(makeTagDetector(\"a\"), \"link unlink\");\r\n            editor.addContextToolbar(makeTagDetector(\"img\"), \"image | alignimgleft alignimgcenter alignimgright imgresponsive | removeformat | remove\");\r\n            editor.addContextToolbar(makeTagDetector(\"li,ol,ul\"), \"bullist numlist | outdent indent\");\r\n            //#endregion\r\n        }\r\n\r\n        return svc;\r\n    }]);\nangular.module(\"SxcEditTemplates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"adam/adam-hint.html\",\"<div class=\\\"small pull-right\\\">\\r\\n    <span style=\\\"opacity: 0.5\\\">drop files here -</span>\\r\\n    <a href=\\\"http://2sxc.org/help?tag=adam\\\" target=\\\"_blank\\\" uib-tooltip=\\\"ADAM is the Automatic Digital Assets Manager - click to discover more\\\">\\r\\n        <i class=\\\"eav-icon-apple\\\"></i>\\r\\n        Adam\\r\\n    </a>\\r\\n    <span style=\\\"opacity: 0.5\\\"> is sponsored with\\r\\n    <i class=\\\"eav-icon-heart\\\"></i> by\\r\\n    <a tabindex=\\\"-1\\\" href=\\\"http://2sic.com/\\\" target=\\\"_blank\\\">\\r\\n        2sic.com\\r\\n    </a>\\r\\n    </span>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"adam/browser.html\",\"<div ng-if=\\\"vm.show\\\" ng-class=\\\"\\'adam-scope-\\' + (vm.adamModeConfig.usePortalRoot ? \\'site\\' : field)\\\">\\r\\n    <!-- info for dropping stuff here -->\\r\\n    <div class=\\\"dz-preview dropzone-adam\\\" ng-disabled=\\\"vm.disabled\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.AdamUploadLabel\\' | translate }}\\\" ng-click=\\\"vm.openUpload()\\\">\\r\\n        <div class=\\\"dz-image adam-browse-background-icon adam-browse-background\\\" xstyle=\\\"background-color: whitesmoke\\\">\\r\\n            <i class=\\\"eav-icon-up-circled2\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">upload to<i ng-class=\\\"vm.adamModeConfig.usePortalRoot ? \\'eav-icon-globe\\' : \\'eav-icon-apple\\'\\\" style=\\\"font-size: larger\\\"></i></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- add folder - not always shown -->\\r\\n    <div ng-show=\\\"vm.allowCreateFolder() || vm.debug.on\\\" class=\\\"dz-preview\\\" ng-disabled=\\\"vm.disabled\\\" ng-click=\\\"vm.addFolder()\\\">\\r\\n        <div class=\\\"dz-image adam-browse-background-icon adam-browse-background\\\">\\r\\n            <div class=\\\"\\\">\\r\\n                <i class=\\\"eav-icon-folder-empty\\\"></i>\\r\\n                <div class=\\\"adam-short-label\\\">new folder</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"adam-background adam-browse-background-icon\\\">\\r\\n            <i class=\\\"eav-icon-plus\\\" style=\\\"font-size: 2em; top: 13px; position: relative;\\\"></i>\\r\\n        </div>\\r\\n        <div class=\\\"dz-details\\\" style=\\\"opacity: 1\\\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- browse up a folder - not always shown -->\\r\\n    <div ng-show=\\\"vm.showFolders || vm.debug.on\\\" class=\\\"dz-preview\\\" ng-disabled=\\\"vm.disabled\\\" ng-if=\\\"vm.folders.length > 0\\\" ng-click=\\\"vm.goUp()\\\">\\r\\n        <div class=\\\"dz-image  adam-browse-background-icon adam-browse-background\\\">\\r\\n            <i class=\\\"eav-icon-folder-empty\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">up</div>\\r\\n        </div>\\r\\n        <div class=\\\"adam-background adam-browse-background-icon\\\">\\r\\n            <i class=\\\"eav-icon-level-up\\\" style=\\\"font-size: 2em; top: 13px; position: relative;\\\"></i>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- folder list - not always shown -->\\r\\n    <div ng-show=\\\"vm.showFolders || vm.debug.on\\\" class=\\\"dz-preview\\\" ng-repeat=\\\"item in vm.items | filter: { IsFolder: true } | filter: { Name: \\'!2sxc\\' } | filter: { Name: \\'!adam\\' } | orderBy:\\'Name\\'\\\"\\r\\n         ng-click=\\\"vm.goIntoFolder(item)\\\">\\r\\n        <div class=\\\"dz-image adam-blur adam-browse-background-icon adam-browse-background\\\">\\r\\n            <i class=\\\"eav-icon-folder-empty\\\"></i>\\r\\n            <div class=\\\"short-label\\\">{{ item.Name }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"dz-details file-type-{{item.Type}}\\\">\\r\\n            <span ng-click=\\\"vm.del(item)\\\" stop-event=\\\"click\\\" class=\\\"adam-delete-button\\\"><i class=\\\"eav-icon-cancel\\\"></i></span>\\r\\n            <span ng-click=\\\"vm.rename(item)\\\" stop-event=\\\"click\\\" class=\\\"adam-rename-button\\\"><i class=\\\"eav-icon-pencil\\\"></i></span>\\r\\n            <div class=\\\"adam-full-name-area\\\">\\r\\n                <div class=\\\"adam-full-name\\\">{{ item.Name }}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <span class=\\\"adam-tag\\\" ng-class=\\\"{\\'metadata-exists\\': item.MetadataId > 0}\\\"\\r\\n              ng-click=\\\"vm.editMetadata(item)\\\"\\r\\n              ng-if=\\\"vm.getMetadataType(item)\\\"\\r\\n              stop-event=\\\"click\\\"\\r\\n              uib-tooltip=\\\"{{vm.getMetadataType(item)}}:{{item.MetadataId}}\\\">\\r\\n            <i class=\\\"eav-icon-tag\\\" style=\\\"font-size: larger\\\"></i>\\r\\n        </span>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- files -->\\r\\n    <div class=\\\"dz-preview\\\" ng-class=\\\"{ \\'dz-success\\': value.Value.toLowerCase() == \\'file:\\' + item.Id }\\\" ng-repeat=\\\"item in (vm.items | filter: vm.fileEndingFilter | filter: { IsFolder: false }) | filter: (vm.showImagesOnly ? {Type: \\'image\\'} : {})  | orderBy:\\'Name\\'\\\" ng-click=\\\"vm.select(item)\\\" ng-disabled=\\\"vm.disabled || !vm.enableSelect\\\">\\r\\n        <div ng-if=\\\"item.Type !== \\'image\\'\\\" class=\\\"dz-image adam-blur  adam-browse-background-icon adam-browse-background\\\">\\r\\n            <i ng-class=\\\"vm.icon(item)\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">{{ item.Name }}</div>\\r\\n        </div>\\r\\n        <div ng-if=\\\"item.Type === \\'image\\'\\\" class=\\\"dz-image\\\">\\r\\n            <img data-dz-thumbnail=\\\"\\\" alt=\\\"{{ item.Id + \\':\\' + item.Name\\r\\n}}\\\" ng-src=\\\"{{ item.fullPath + \\'?w=120&h=120&mode=crop\\' }}\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"dz-details file-type-{{item.Type}}\\\">\\r\\n            <span ng-click=\\\"vm.del(item)\\\" stop-event=\\\"click\\\" class=\\\"adam-delete-button\\\"><i class=\\\"eav-icon-cancel\\\"></i></span>\\r\\n            <span ng-click=\\\"vm.rename(item)\\\" stop-event=\\\"click\\\" class=\\\"adam-rename-button\\\"><i class=\\\"eav-icon-pencil\\\"></i></span>\\r\\n            <div class=\\\"adam-full-name-area\\\">\\r\\n                <div class=\\\"adam-full-name\\\">{{ item.Name }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"dz-filename adam-short-label\\\">\\r\\n                <span>#{{ item.Id }} - {{ (item.Size / 1024).toFixed(0) }} kb</span>\\r\\n            </div>\\r\\n            <a class=\\\"adam-link-button\\\" target=\\\"_blank\\\" ng-href=\\\"{{ item.fullPath }}\\\">\\r\\n                <i class=\\\"eav-icon-link-ext\\\" style=\\\"font-size: larger\\\"></i>\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <span class=\\\"adam-tag\\\" ng-class=\\\"{\\'metadata-exists\\': item.MetadataId > 0}\\\"\\r\\n              ng-click=\\\"vm.editMetadata(item)\\\"\\r\\n              ng-if=\\\"vm.getMetadataType(item)\\\"\\r\\n              stop-event=\\\"click\\\"\\r\\n              uib-tooltip=\\\"{{vm.getMetadataType(item)}}:{{item.MetadataId}}\\\">\\r\\n            <i class=\\\"eav-icon-tag\\\" style=\\\"font-size: larger\\\"></i>\\r\\n        </span>\\r\\n\\r\\n\\r\\n        <div class=\\\"dz-success-mark\\\">\\r\\n            <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\r\\n                <title>Check</title>\\r\\n                <defs></defs>\\r\\n                <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\r\\n                    <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\r\\n                </g>\\r\\n            </svg>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\");\n$templateCache.put(\"adam/dropzone-upload-preview.html\",\"<div ng-show=\\\"uploading\\\">\\r\\n    <div class=\\\"dropzone-previews\\\">\\r\\n    </div>\\r\\n    <span class=\\\"invisible-clickable\\\" data-note=\\\"just a fake, invisible area for dropzone\\\"></span>\\r\\n</div>\");\n$templateCache.put(\"fields/dnn-bridge/hyperlink-default-pagepicker.html\",\"<div>\\r\\n\t<div class=\\\"modal-header\\\">\\r\\n\t\t<h3 class=\\\"modal-title\\\" translate=\\\"Edit.Fields.Hyperlink.PagePicker.Title\\\"></h3>\\r\\n\t</div>\\r\\n\t<div class=\\\"modal-body\\\" style=\\\"height:370px; width:600px\\\">\\r\\n\t\t<iframe style=\\\"width:100%; height: 350px; border: 0;\\\" web-forms-bridge=\\\"bridge\\\" bridge-type=\\\"pagepicker\\\" bridge-sync-height=\\\"false\\\"></iframe>\\r\\n\t</div>\\r\\n\t<div class=\\\"modal-footer\\\"></div>\\r\\n</div>\");\n$templateCache.put(\"fields/hyperlink/hyperlink-default.html\",\"<div class=\\\"dropzone\\\">\\r\\n    <div class=\\\"clearfix\\\">\\r\\n        <div ng-if=\\\"value.Value && vm.isImage()\\\"\\r\\n             class=\\\"thumbnail-before-input\\\"\\r\\n             ng-style=\\\"{ \\'background-image\\': \\'url(\\' + vm.thumbnailUrl(1, true) + \\')\\' }\\\"\\r\\n             ng-mouseover=\\\"vm.showPreview = true\\\"\\r\\n             ng-mouseleave=\\\"vm.showPreview = false\\\">\\r\\n        </div>\\r\\n\\r\\n        <div ng-if=\\\"value.Value && !vm.isImage()\\\"\\r\\n           class=\\\"thumbnail-before-input icon-before-input\\\">\\r\\n            <a href=\\\"{{vm.testLink}}\\\"\\r\\n               target=\\\"_blank\\\" tabindex=\\\"-1\\\"\\r\\n               tooltip-html=\\\"{{vm.tooltipUrl(vm.testLink)}}\\\"\\r\\n               tooltip-placement=\\\"right\\\"\\r\\n               ng-class=\\\"vm.icon()\\\">\\r\\n            </a>            \\r\\n        </div>\\r\\n        <div ng-if=\\\"!value.Value\\\"\\r\\n             class=\\\"thumbnail-before-input empty-placeholder\\\">\\r\\n        </div>\\r\\n        <div class=\\\"after-preview\\\">\\r\\n            <div class=\\\"input-group\\\" uib-dropdown>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control input-lg\\\" ng-model=\\\"value.Value\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.Tooltip1\\' | translate }}\\r\\n{{\\'Edit.Fields.Hyperlink.Default.Tooltip2\\' | translate }}\\r\\nADAM - sponsored with ♥ by 2sic.com\\\">\\r\\n                <span class=\\\"input-group-btn\\\" style=\\\"vertical-align: top;\\\">\\r\\n                    <div style=\\\"width: 6px;\\\"></div>\\r\\n                    <button ng-if=\\\"to.settings[\\'merged\\'].Buttons.indexOf(\\'adam\\') > -1\\\" type=\\\"button\\\" class=\\\"btn btn-default icon-field-button\\\" ng-disabled=\\\"to.disabled\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.AdamUploadLabel\\' | translate }}\\\" ng-click=\\\"vm.toggleAdam()\\\">\\r\\n                        <i class=\\\"eav-icon-apple\\\"></i>\\r\\n                    </button>\\r\\n                    <button ng-if=\\\"to.settings[\\'merged\\'].Buttons.indexOf(\\'page\\') > -1\\\" type=\\\"button\\\" class=\\\"btn btn-default icon-field-button\\\" ng-disabled=\\\"to.disabled\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.PageLabel\\' | translate }}\\\" ng-click=\\\"vm.openPageDialog()\\\">\\r\\n                        <i class=\\\"eav-icon-sitemap\\\"></i>\\r\\n                    </button>\\r\\n                    <button ng-if=\\\"to.settings[\\'merged\\'].Buttons.indexOf(\\'more\\') > -1\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" class=\\\"btn btn-default uib-dropdown-toggle icon-field-button\\\" uib-dropdown-toggle ng-disabled=\\\"to.disabled\\\">\\r\\n                        <i class=\\\"eav-icon-options\\\"></i>\\r\\n                    </button>\\r\\n                </span>\\r\\n                <ul class=\\\"dropdown-menu pull-right\\\" uib-dropdown-menu role=\\\"menu\\\">\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowAdam\\\"><a class=\\\"dropzone-adam\\\" ng-click=\\\"vm.toggleAdam(false)\\\" href=\\\"javascript:void(0);\\\"><i class=\\\"eav-icon-apple\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuAdam\\\"></span></a></li>\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowPagePicker\\\"><a ng-click=\\\"vm.openPageDialog()\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"eav-icon-sitemap\\\" xicon=\\\"home\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuPage\\\"></span></a></li>\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowImageManager\\\"><a ng-click=\\\"vm.toggleAdam(true, true)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"eav-icon-file-image\\\" xicon=\\\"picture\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuImage\\\"></span></a></li>\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowFileManager\\\"><a ng-click=\\\"vm.toggleAdam(true, false)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"eav-icon-file\\\" xicon=\\\"file\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuDocs\\\"></span></a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n            <div ng-if=\\\"vm.showPreview\\\" style=\\\"position: relative\\\">\\r\\n                <div style=\\\"position: absolute; z-index: 100; background: white; top: 10px; text-align: center; left: 0; right: 0;\\\">\\r\\n                    <img ng-src=\\\"{{vm.thumbnailUrl(2)}}\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <adam-hint class=\\\"field-hints\\\"></adam-hint>\\r\\n            <div ng-if=\\\"value.Value\\\" class=\\\"field-hints\\\">\\r\\n                <a href=\\\"{{vm.testLink}}\\\" target=\\\"_blank\\\" tabindex=\\\"-1\\\" tooltip-html=\\\"{{vm.tooltipUrl(vm.testLink)}}\\\">\\r\\n                    <span>&nbsp;... {{vm.testLink.substr(vm.testLink.lastIndexOf(\\\"/\\\"), 100)}}</span>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <!-- The ADAM file browser, requires the uploader wrapped around it -->\\r\\n        <adam-browser content-type-name=\\\"to.header.ContentTypeName\\\"\\r\\n                      entity-guid=\\\"to.header.Guid\\\"\\r\\n                      field-name=\\\"options.key\\\"\\r\\n                      auto-load=\\\"false\\\"\\r\\n                      folder-depth=\\\"0\\\"\\r\\n                      sub-folder=\\\"\\\"\\r\\n                      update-callback=\\\"vm.setValue\\\"\\r\\n                      register-self=\\\"vm.registerAdam\\\"\\r\\n                      adam-mode-config=\\\"vm.adamModeConfig\\\"\\r\\n                      ng-disabled=\\\"to.disabled\\\"\\r\\n                      file-filter=\\\"to.settings[\\'merged\\'].FileFilter\\\"></adam-browser>\\r\\n\\r\\n        <!-- the preview of the uploader -->\\r\\n        <dropzone-upload-preview></dropzone-upload-preview>\\r\\n\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/hyperlink/hyperlink-library.html\",\"<div>\\r\\n    <div class=\\\"dropzone\\\">\\r\\n        <!-- The ADAM file browser, requires the uploader wrapped around it -->\\r\\n        <adam-browser\\r\\n            content-type-name=\\\"to.header.ContentTypeName\\\"\\r\\n            entity-guid=\\\"to.header.Guid\\\"\\r\\n            field-name=\\\"options.key\\\"\\r\\n            auto-load=\\\"true\\\"\\r\\n            sub-folder=\\\"\\\"\\r\\n            folder-depth=\\\"to.settings.merged.FolderDepth\\\"\\r\\n            metadata-content-types=\\\"to.settings.merged.MetadataContentTypes\\\"\\r\\n            allow-assets-in-root=\\\"to.settings.merged.allowAssetsInRoot\\\"\\r\\n            enable-select=\\\"false\\\"\\r\\n            update-callback=\\\"vm.setValue\\\"\\r\\n            register-self=\\\"vm.registerAdam\\\"\\r\\n            adam-mode-config=\\\"vm.adamModeConfig\\\">\\r\\n        </adam-browser>\\r\\n\\r\\n\\r\\n        <!-- the preview of the uploader -->\\r\\n        <dropzone-upload-preview></dropzone-upload-preview>\\r\\n\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/string/string-font-icon-picker.html\",\"<div>\\r\\n    <div uib-dropdown uib-keyboard-nav auto-close=\\\"outsideClick\\\" is-open=\\\"vm.selectorIsOpen\\\">\\r\\n        <div class=\\\"thumbnail-before-input icon-preview\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"\\\" uib-tooltip=\\\"{{value.Value}}\\\" uib-dropdown-toggle>\\r\\n                <i class=\\\"{{vm.previewPrefix}} {{value.Value}}\\\" ng-show=\\\"value.Value\\\"></i>\\r\\n                <span ng-show=\\\"!value.Value\\\">&nbsp;&nbsp;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"input-group\\\" uib-dropdown-toggle>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-lg\\\" ng-model=\\\"value.Value\\\" ng-disabled=\\\"false\\\" >\\r\\n        </div>\\r\\n        <!-- the search ui -->\\r\\n        <ul class=\\\"dropdown-menu icons-menu-columns\\\" role=\\\"menu\\\" uib-dropdown-menu>\\r\\n            <li class=\\\"input-group\\\">\\r\\n                <span class=\\\"input-group-addon btn-default btn\\\" ng-click=\\\"vm.selectorIsOpen = false; value.Value = \\'\\'\\\">\\r\\n                    <i class=\\\"eav-icon-cancel\\\"></i>\\r\\n                </span>\\r\\n                <input type=\\\"search\\\" ng-model=\\\"vm.iconFilter\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"search...\\\" />\\r\\n            </li>\\r\\n\\r\\n            <li ng-repeat=\\\"icn in vm.icons\\\" role=\\\"menuitem\\\"\\r\\n                ng-show=\\\"icn.class.indexOf(vm.iconFilter) !== -1\\\">\\r\\n                <a ng-click=\\\"vm.setIcon(icn.class)\\\" xng-click=\\\"value.Value = icn.class; vm.selectorIsOpen = false;\\\">\\r\\n                    <i class=\\\"{{vm.previewPrefix}} {{icn.class}}\\\"></i> <span uib-tooltip=\\\"{{icn.class}}\\\">...{{icn.class.substring(vm.prefix.length-1,25)}}</span>\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div ng-if=\\\"vm.debug.on\\\">Infos: found {{vm.icons.length}} items for prefix \\\"{{vm.prefix}}\\\" and will use \\\"{{vm.previewPrefix}}\\\" as a preview class. Selected is \\\"{{value.Value}}\\\" and files are: {{vm.files}}</div>\\r\\n</div> \");\n$templateCache.put(\"fields/string/string-template-picker.html\",\"<div>\\r\\n    <div class=\\\"input-group\\\">\\r\\n\\r\\n        <select class=\\\"form-control input-material material\\\"\\r\\n                ng-model=\\\"value.Value\\\"\\r\\n                ng-disabled=\\\"!readyToUse()\\\">\\r\\n            <option value=\\\"\\\">(no file selected)</option>\\r\\n            <option ng-repeat=\\\"item in templates | isValidFile:file.ext\\\"\\r\\n                    ng-selected=\\\"{{item == value.Value}}\\\"\\r\\n                    value=\\\"{{item}}\\\">\\r\\n                {{item}}\\r\\n            </option>\\r\\n        </select>\\r\\n        <span class=\\\"input-group-btn\\\" style=\\\"vertical-align: top;\\\">\\r\\n            <button class=\\\"btn btn-default icon-field-button\\\" type=\\\"button\\\" ng-click=\\\"add()\\\" ng-disabled=\\\"!readyToUse()\\\">\\r\\n                <span class=\\\"eav-icon-plus\\\"></span>\\r\\n            </button>\\r\\n        </span>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/string/string-wysiwyg-adv.html\",\"<div>\\r\\n    this would be an advanced, configurable WYSIWYG. It does not exist yet :). \\r\\n</div>\");\n$templateCache.put(\"fields/string/string-wysiwyg-dnn.html\",\"<iframe style=\\\"width:100%; border: 0;\\\" web-forms-bridge=\\\"vm.bridge\\\" bridge-type=\\\"wysiwyg\\\" bridge-sync-height=\\\"true\\\"></iframe>\");\n$templateCache.put(\"fields/string/string-wysiwyg-tinymce.html\",\"<div>\\r\\n    <div class=\\\"dropzone\\\">\\r\\n        <div> <!-- needed because after a refresh, the editor can\\'t be placed at the same location -->\\r\\n            <div ui-tinymce=\\\"tinymceOptions\\\" ng-model=\\\"value.Value\\\" class=\\\"field-string-wysiwyg-mce-box\\\"></div>\\r\\n        </div>\\r\\n\\r\\n        <!-- the ADAM file browser requires the uploader wrapped around it -->\\r\\n        <adam-browser content-type-name=\\\"to.header.ContentTypeName\\\"\\r\\n                      entity-guid=\\\"to.header.Guid\\\"\\r\\n                      field-name=\\\"options.key\\\"\\r\\n                      auto-load=\\\"false\\\"\\r\\n                      folder-depth=\\\"0\\\"\\r\\n                      sub-folder=\\\"\\\"\\r\\n                      update-callback=\\\"vm.setValue\\\"\\r\\n                      register-self=\\\"vm.registerAdam\\\"\\r\\n                      show-images-only=\\\"vm.adamModeImage\\\"\\r\\n                      ng-disabled=\\\"to.disabled\\\" adam-mode-config=\\\"vm.adamModeConfig\\\"></adam-browser>\\r\\n\\r\\n        <!-- dummy item to set focus on in script-->\\r\\n        <span id=\\\"dummyfocus\\\" tabindex=\\\"-1\\\"></span>\\r\\n\\r\\n        <!-- the preview of the uploader -->\\r\\n        <dropzone-upload-preview></dropzone-upload-preview>\\r\\n        <adam-hint class=\\\"field-hints\\\"></adam-hint>\\r\\n\\r\\n    </div>\\r\\n</div>\");}]);"],"sourceRoot":"/source/"}