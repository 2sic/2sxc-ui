{"version":3,"sources":["sxc-edit.min.js"],"names":["angular","module","directive","restrict","replace","transclude","templateUrl","factory","$http","eavConfig","sxc","svcCreator","appRoot","contentType","entityGuid","field","subfolder","serviceConfig","svc","url","resolveServiceUrl","folders","adamRoot","substr","indexOf","uploadUrl","targetSubfolder","usePortalRoot","addFullPath","value","key","fullPath","Path","extend","implementLiveList","get","params","then","result","forEach","data","addFolder","newfolder","post","newFolder","liveListReload","goIntoFolder","childFolder","push","pathParts","split","subPath","c","length","Subfolder","goUp","pop","item","isFolder","IsFolder","id","Id","reload","BrowserController","$scope","adamSvc","debugState","eavAdminDialogs","fileType","vm","this","debug","initConfig","contentTypeName","fieldName","subFolder","showImagesOnly","folderDepth","showFolders","allowAssetsInRoot","metadataContentTypes","show","disabled","ngDisabled","enableSelect","activate","autoLoad","toggle","registerSelf","adamModeConfig","refresh","items","liveList","newConfig","openUpload","dropzone","select","fileItem","updateCallback","folderName","window","prompt","del","ok","confirm","folder","currentFolderDepth","allowCreateFolder","editMetadata","_itemDefinition","getMetadataType","openEditItems","found","Type","match","metadataType","title","MetadataId","EntityId","Title","ContentTypeName","Metadata","Key","KeyType","TargetType","metadataOfCmsObject","Prefill","EntityTitle","Name","icon","getIconClass","$inject","app","controller","require","link","scope","elem","attrs","dropzoneCtrl","adam","controllerAs","tabId","AppInstanceId","ContentBlockId","dragClass","$timeout","$translate","postLink","element","header","$parent","to","options","Guid","config","urlRoot","maxFilesize","paramName","maxThumbnailFilesize","headers","ModuleId","TabId","dictDefaultMessage","addRemoveLinks","previewsContainer","toLowerCase","clickable","eventHandlers","addedfile","file","$apply","uploading","processing","success","response","Success","afterUpload","alert","Error","error","xhr","instant","queuecomplete","getUploadingFiles","getQueuedFiles","Dropzone","handler","event","on","processDropzone","processQueue","resetDropzone","removeAllFiles","hiddenFileInput","click","$uibModal","promiseToastr","open","type","oldValue","callback","template","connector","valueChanged","dialogType","modalInstance","close","CurrentValue","console","log","resolve","bridge","windowClass","convertPathToId","path","pathWithoutVersion","promise","encodeURIComponent","getUrlOfId","idCode","linkLowered","portalRoot","webFormsBridgeUrl","$2sxc","urlParams","bridgeSyncHeight","Object","keys","map","prop","join","src","w","contentWindow","connectBridge","resize","css","document","body","scrollHeight","$","ready","setTimeout","formlyConfigProvider","setType","name","wrapper","$controller","$filter","appId","eavDefaultValueService","settings","merged","EnableRemove","AllowMultiValue","EnableAddExisting","EnableCreate","EnableEdit","EntityType","enableCollapseField","collapseField","model","Values","Value","fieldWrappersWithPreview","dnnBridgeSvc","ensureDefaultConfig","undefined","ShowAdam","Buttons","testLink","isImage","thumbnailUrl","size","quote","qt","tooltipUrl","str","$watch","newValue","processResultOfDnnBridge","FileId","openDialog","Paths","FileFilter","registerAdam","setValue","toggleAdam","imagesOnly","defaultFieldWrappersNoFloat","CHARS","Math","uuid","len","radix","i","chars","random","r","uuidFast","Array","rnd","uuidCompact","v","toString","$ocLazyLoad","getIconClasses","className","charcount","foundList","duplicateDetector","ssSet","styleSheets","classes","rules","cssRules","x","selectorText","substring","txt","icnClass","rule","class","loadAdditionalResources","files","mapped","fileList","load","iconFilter","prefix","previewPrefix","icons","useTestValues","selectorIsOpen","setIcon","form","$setDirty","controlSettings","Files","CssPrefix","PreviewCss","templateOptions","cs","init","context","inj","$injector","appDialogConfigSvc","getDialogSettings","IsContent","formVm","formFields","SortOrder","defaultFieldWrappers","appAssetsSvc","fieldMask","setFileConfig","typeWatcher","locWatcher","onLocationChange","templates","svcApp","svcGlobal","readyToUse","specs","Token","ext","suggestion","C# Razor","loc","svcCurrent","add","fileName","foundSlash","lastIndexOf","endsWith","create","filter","paths","out","slice","initialValue","initialReadOnly","onChanged","setReadOnly","readOnly","FieldWysiwygTinyMceController","languages","tinyMceHelpers","tinyMceToolbars","tinyMceConfig","tinyMceAdam","tinyMceDnnBridge","tinyMceInitCallback","editor","tinymceOptions","language","addTranslations","addButtons","enableContentBlocksIfPossible","watchDisabled","ngscope","readonly","$broadcast","fields","index","nextField","enableContentBlocks","getDefaultOptions","setup","attachAdam","attach","lang2","currentLanguage","language_url","modeImage","adamModeImage","insertContent","addAdamButtons","e","addButton","onclick","menu","text","tooltip","execCommand","beta","buildModes","modes","standard","menubar","toolbar","contextmenu","advanced","cdnRoot","imgSizes","defaultLanguage","plugins","validateAlso","baseURL","inline","automatic_uploads","autosave_ask_before_unload","paste_as_text","extended_valid_elements","custom_elements","relative_urls","default_link_target","object_resizing","skin","theme","debounce","openDnnDialog","previouslySelected","selection","getContent","initLangResources","primaryLan","mceTranslations","pLen","all","getTranslationTable","translations","k","tinymce","addI18n","addTinyMceToolbarButtons","initOnPostRender","watchChange","formatter","formatChanged","state","self","active","registerTinyMceFormats","imgformats","is","selector","collapsed","styles","width","register","switchModes","mode","panel","remove","renderUI","getElementById","focus","makeImgFormatCall","apply","makeTagDetector","tagWeNeedInTheTagPath","currentElement","selectorMatched","dom","getBody","contains","linkgroup","onPostRender","linkgroupPro","copy","cmd","tag","buttons","h3","h4","h5","h6","p","guid","imgMenuArray","resizeimg100","addContextToolbar","run","$templateCache","put"],"mappings":"CAAC,WAEGA,QAAQC,OAAO,QACX,cACA,mBACA,mBAKR,WAGID,QAAQC,OAAO,WAEVC,UAAU,WAAY,WACnB,OACIC,SAAU,IACVC,SAAS,EACTC,YAAY,EACZC,YAAa,4BAI7BN,QAAQC,OAAO,QAEVM,QAAQ,WAAY,QAAS,YAAa,MAAO,aAAc,UAAW,SAAUC,EAAOC,EAAWC,EAAKC,EAAYC,GAGpH,MAAO,UAAmBC,EAAaC,EAAYC,EAAOC,EAAWC,GACjE,GAAIC,IACAC,IAAKT,EAAIU,kBAAkB,eAAiBP,EAAc,IAAMC,EAAa,IAAMC,GACnFC,UAAWA,EACXK,WACAC,SAAUV,EAAQW,OAAO,EAAGX,EAAQY,QAAQ,SAuEhD,OAnEAN,GAAIO,UAAY,SAASC,GACrB,GAAIP,GAA2B,KAApBO,EACLR,EAAIC,IACJD,EAAIC,IAAM,cAAgBO,CAEhC,OADAP,KAA4B,IAApBA,EAAIK,QAAQ,KAAa,IAAM,KAAO,iBAAmBP,EAAcU,eAKnFT,EAAIU,YAAc,SAAqBC,EAAOC,GAC1CD,EAAME,SAAWb,EAAII,SAAWO,EAAMG,MAG1Cd,EAAMlB,QAAQiC,OAAOf,EAAKP,EAAWuB,kBAAkB,WACnD,MAAO1B,GAAM2B,IAAIjB,EAAIC,IAAM,UAAYiB,QAAUpB,UAAWE,EAAIF,UAAWW,cAAeV,EAAcU,iBACnGU,KAAK,SAAUC,GAEZ,MADAtC,SAAQuC,QAAQD,EAAOE,KAAMtB,EAAIU,aAC1BU,OAKnBpB,EAAIuB,UAAY,SAAaC,GACzB,MAAOlC,GAAMmC,KAAKzB,EAAIC,IAAM,cAAiBiB,QAAUpB,UAAWE,EAAIF,UAAW4B,UAAWF,EAAWf,cAAeV,EAAcU,iBAC/HU,KAAKnB,EAAI2B,iBAGlB3B,EAAI4B,aAAe,SAASC,GACxB7B,EAAIG,QAAQ2B,KAAKD,EAGjB,KAAK,GAFDE,GAAYF,EAAYf,KAAKkB,MAAM,KACnCC,EAAU,GACLC,EAAI,EAAGA,EAAIlC,EAAIG,QAAQgC,OAAQD,IACpCD,EAAUF,EAAUA,EAAUI,OAASD,EAAI,GAAK,IAAMD,CAW1D,OATAA,GAAUA,EAAQ/C,QAAQ,KAAM,KACI,MAAhC+C,EAAQA,EAAQE,OAAS,KACzBF,EAAUA,EAAQ5B,OAAO,EAAG4B,EAAQE,OAAS,IAEjDN,EAAYO,UAAYH,EAGxBjC,EAAIF,UAAYmC,EAChBjC,EAAI2B,iBACGM,GAGXjC,EAAIqC,KAAO,WASP,MARIrC,GAAIG,QAAQgC,OAAS,GACrBnC,EAAIG,QAAQmC,MACZtC,EAAIG,QAAQgC,OAAS,EACrBnC,EAAIF,UAAYE,EAAIG,QAAQH,EAAIG,QAAQgC,OAAS,GAAGC,UAEpDpC,EAAIF,UAAY,GAEpBE,EAAI2B,iBACG3B,EAAIF,WAKfE,EAAAA,UAAa,SAAauC,GACtB,MAAOjD,GAAM2B,IAAIjB,EAAIC,IAAM,WAAaiB,QAAUpB,UAAWE,EAAIF,UAAW0C,SAAUD,EAAKE,SAAUC,GAAIH,EAAKI,GAAIlC,cAAeV,EAAcU,iBAC1IU,KAAKnB,EAAI2B,iBAGlB3B,EAAI4C,OAAS5C,EAAI2B,eAEV3B,MAGnB,WAEI,YASA,SAAS6C,GAAkBC,EAAQC,EAASC,EAAYzD,EAAW0D,EAAiBvD,EAASwD,GACzF,GAAIC,GAAKC,IACTD,GAAGE,MAAQL,CAEX,IAAIM,GAAa,WACbH,EAAGI,gBAAkBT,EAAOS,gBAC5BJ,EAAGvD,WAAakD,EAAOlD,WACvBuD,EAAGK,UAAYV,EAAOU,UACtBL,EAAGM,UAAYX,EAAOW,WAAa,GACnCN,EAAGO,eAAiBZ,EAAOY,eAAiBZ,EAAOY,iBAAkB,EAErEP,EAAGQ,YAA6C,mBAAvBb,GAAOa,aAAsD,OAAvBb,EAAOa,YAChEb,EAAOa,YACP,EACNR,EAAGS,cAAgBT,EAAGQ,YACtBR,EAAGU,kBAAoBf,EAAOe,oBAAqB,EACnDV,EAAGW,qBAAuBhB,EAAOgB,sBAAwB,GAG7DR,KAEAH,EAAGY,MAAO,EACVZ,EAAGzD,QAAUA,EAEbyD,EAAGa,SAAWlB,EAAOmB,WACrBd,EAAGe,aAAgBpB,EAAOoB,gBAAiB,EAE3Cf,EAAGgB,SAAW,WACPrB,EAAOsB,UACNjB,EAAGkB,SACHvB,EAAOwB,cACPxB,EAAOwB,aAAanB,IAK5BA,EAAGnD,IAAM+C,EAAQI,EAAGI,gBAAiBJ,EAAGvD,WAAYuD,EAAGK,UAAWL,EAAGM,UAAWX,EAAOyB,gBAGvFpB,EAAGqB,QAAUrB,EAAGnD,IAAI2B,eAEpBwB,EAAGlC,IAAM,WACLkC,EAAGsB,MAAQtB,EAAGnD,IAAI0E,WAClBvB,EAAGhD,QAAUgD,EAAGnD,IAAIG,QACpBgD,EAAGnD,IAAI2B,kBAGXwB,EAAGkB,OAAS,SAAgBM,GAExBrB,IACIqB,IACAxB,EAAGO,eAAiBiB,EAAUjB,gBAElCP,EAAGY,MAAQZ,EAAGY,KACTZ,EAAGY,OACJjB,EAAOyB,eAAe9D,eAAgB,GAEtCqC,EAAOyB,eAAe9D,gBACtB0C,EAAGS,aAAc,EACjBT,EAAGQ,YAAc,IAGjBR,EAAGY,MACHZ,EAAGlC,OAGXkC,EAAGyB,WAAa,WACZzB,EAAG0B,SAASD,cAGhBzB,EAAG2B,OAAS,SAAUC,IACd5B,EAAGa,UAAab,EAAGe,cAEvBpB,EAAOkC,eAAeD,IAG1B5B,EAAG5B,UAAY,WACX,IAAI4B,EAAGa,SAAP,CAEA,GAAIiB,GAAaC,OAAOC,OAAO,6BAC3BF,IACA9B,EAAGnD,IAAIuB,UAAU0D,GACZ9D,KAAKgC,EAAGqB,WAGrBrB,EAAGiC,IAAM,SAAa7C,GAClB,IAAIY,EAAGa,SAAP,CAEA,GAAIqB,GAAKH,OAAOI,QAAQ,6CACpBD,IACAlC,EAAGnD,IAAHmD,UAAcZ,KAItBY,EAAGvB,aAAe,SAAU2D,GACxB,GAAI9B,GAAYN,EAAGnD,IAAI4B,aAAa2D,EACpCpC,GAAGM,UAAYA,GAGnBN,EAAGd,KAAO,WACNc,EAAGM,UAAYN,EAAGnD,IAAIqC,QAG1Bc,EAAGqC,mBAAqB,WACpB,MAAOrC,GAAGnD,IAAIG,QAAQgC,QAG1BgB,EAAGsC,kBAAoB,WACnB,MAAOtC,GAAGnD,IAAIG,QAAQgC,OAASgB,EAAGQ,aAMtCR,EAAGuC,aAAe,SAASnD,GACvB,GAAIkC,IACAtB,EAAGwC,gBAAgBpD,EAAMY,EAAGyC,gBAAgBrD,IAGhDU,GAAgB4C,cAAcpB,EAAOtB,EAAGqB,UAI5CrB,EAAGyC,gBAAkB,SAASrD,GAC1B,GAAIuD,EAGJ,OAAkB,WAAdvD,EAAKwD,MACLD,EAAQ3C,EAAGW,qBAAqBkC,MAAM,0BAClCF,EACOA,EAAM,GAEN,OAWfA,EAAQ3C,EAAGW,qBAAqBkC,MAAM,sBAClCF,EACOA,EAAM,GAGV,OAIX3C,EAAGwC,gBAAkB,SAAUpD,EAAM0D,GACjC,GAAIC,GAAQ,wBACZ,OAA2B,KAApB3D,EAAK4D,YACJC,SAAU7D,EAAK4D,WAAYE,MAAOH,IAElCI,gBAAiBL,EACjBM,UACIC,KAAoB,WAAdjE,EAAKwD,KAAoB,SAAW,QAAU,IAAMxD,EAAKI,GAC/D8D,QAAS,SACTC,WAAYnH,EAAUoH,qBAE1BN,MAAOH,EACPU,SAAWC,YAAatE,EAAKuE,QAQzC3D,EAAG4D,KAAO,SAAUxE,GAChB,MAAOW,GAAS8D,aAAazE,EAAKuE,OAItC3D,EAAGgB,WAxLPtB,EAAkBoE,SAAW,SAAU,UAAW,aAAc,YAAa,kBAAmB,UAAW,WAC3G,IAAIC,GAAMpI,QAAQC,OAAO,OAGzBmI,GAAIC,WAAW,oBAAqBtE,MAyLxC,WAGI/D,QAAQC,OAAO,QAEVC,UAAU,cAAe,WACtB,OACIC,SAAU,IACVG,YAAa,oBAGbD,YAAY,EACZiI,QAAS,YACTC,KAAM,SAAkBC,EAAOC,EAAMC,EAAOC,GAExCA,EAAaC,KAAOJ,EAAMnE,GAC1BmE,EAAMnE,GAAG0B,SAAW4C,GAIxBH,OAEI/D,gBAAiB,IACjB3D,WAAY,IACZ4D,UAAW,IAGXC,UAAW,IACXE,YAAa,IACbG,qBAAsB,IACtBD,kBAAmB,IACnBH,eAAgB,KAChBa,eAAgB,IAGhBH,SAAU,IACVY,eAAgB,IAChBV,aAAc,IAGdJ,aAAc,IACdD,WAAY,KAEhBkD,WAAY,oBACZQ,aAAc,WAK9B,WAEI7I,QAAQC,OAAO,QAEVC,UAAU,wBAAyB,WAChC,OACIC,SAAU,IACVG,YAAa,oCACbF,SAAS,EACTC,YAAY,QAK5B,WACIL,QAAQC,OAAO,QAEVC,UAAU,YAAa,MAAO,QAAS,gBAAiB,iBAAkB,YAAa,UAAW,WAAY,aAAc,SAAUQ,EAAKoI,EAAOC,EAAeC,EAAgBC,EAAWhF,EAASiF,EAAUC,GAY5M,QAASC,GAASZ,EAAOa,EAASX,EAAOL,GACrC,GAAIiB,GAASd,EAAMe,QAAQC,GAAGF,OAC1BvI,EAAQyH,EAAMe,QAAQE,QAAQ3H,IAC9BhB,EAAawI,EAAOI,KACpBxI,EAAM+C,EAAQqF,EAAO9B,gBAAiB1G,EAAYC,EAAO,GAAIyH,EAAMe,QAAQlF,GAAGoB,gBAC9EtE,EAAMD,EAAIC,IAEVwI,GACAxI,IAAKA,EACLyI,QAASzI,EACT0I,YAAa,IACbC,UAAW,aACXC,qBAAsB,GAEtBC,SACIC,SAAYlB,EACZmB,MAASpB,EACTE,eAAkBA,GAGtBmB,mBAAoB,GACpBC,gBAAgB,EAChBC,kBAAmB,UAAYtJ,EAAMuJ,cAAgB,sBAErDC,UAAW,UAAYxJ,EAAMuJ,cAAgB,yBAI7CE,GACAC,UAAa,SAAUC,GACnBxB,EAAS,WAELV,EAAMmC,OAAO,WACTnC,EAAMoC,WAAY,OAK9BC,WAAc,SAAUH,GACpBpG,KAAKmF,QAAQtI,IAAMD,EAAIO,UAAU4G,EAAWO,KAAKjE,YAGrDmG,QAAW,SAAUJ,EAAMK,GACnBA,EAASC,SACT9J,EAAIU,YAAYmJ,GAChBvC,EAAMe,QAAQ0B,YAAYF,IAE1BG,MAAM,0BAA4BH,EAASI,QAGnDC,MAAS,SAAUV,EAAMU,EAAOC,GAC5BH,MAAM/B,EAAWmC,QAAQ,4BAG7BC,cAAiB,SAAUb,GACiB,IAApCpG,KAAKkH,oBAAoBnI,QAAiD,IAAjCiB,KAAKmH,iBAAiBpI,SAC/DmF,EAAMoC,WAAY,EAClBvC,EAAWO,KAAKlD,YAM5BwD,GAAS,WACL,GAAInD,GAAW,GAAI2F,UAASrC,EAAQ,GAAIM,EAExC3J,SAAQuC,QAAQiI,EAAe,SAASmB,EAASC,GAC7C7F,EAAS8F,GAAGD,EAAOD,KAGvBnD,EAAMsD,gBAAkB,WAAa/F,EAASgG,gBAC9CvD,EAAMwD,cAAgB,WAAajG,EAASkG,kBAC5C5D,EAAWvC,WAAa,WAAaC,EAASmG,gBAAgBC,UAE/D,GAIP,QAAS9D,KACL,GAAIhE,GAAKC,IACTD,GAAGuE,MACC3D,MAAM,EACNN,UAAW,GACXe,QAAS,cA7FjB,OACIvF,SAAU,IACVoI,KAAMa,EAGNf,WAAYA,SAkG5B,WACC,YAIGrI,SAAQC,OAAO,qBACX,SACA,kBACA,eACA,UACA,UACA,mBACA,mBACA,cACA,oBACA,OAEA,mBAMRD,QAAQC,OAAO,qBAEVM,QAAQ,gBAAiB,YAAa,QAAS,gBAAiB,YAAa,MAAO,SAAU6L,EAAW5L,EAAO6L,EAAe5L,EAAWC,GACvI,GAAIQ,KAyDJ,OAxDAA,GAAIoL,KAAO,SAAcC,EAAMC,EAAUpK,EAAQqK,GAC7C,GAAIC,GAAoB,eAATH,EAAwB,aAAe,cAElDI,GACAvK,OAAQA,EACRwK,aAAcH,EACdI,WAAYN,EA2BhB,OAxBAI,GAAUC,aAAe,SAAsB/K,EAAO0K,GAClDI,EAAUG,cAAcC,QACxBN,EAAS5K,EAAO0K,IAGpBI,EAAUvK,OAAO4K,aAAeR,EAEhCS,QAAQC,IAAI,eACZD,QAAQC,IAAId,GACZO,EAAUG,cAAgBV,EAAUE,MAChChM,YAAa,uCAAyCoM,EAAW,QACjES,SACIC,OAAQ,WACJ,MAAOT,KAIftE,YAAa,SAAU,SAAU,SAAUrE,EAAQoJ,GAC/CpJ,EAAOoJ,OAASA,IAEpBC,YAAa,2BAEjBJ,QAAQC,IAAI,cAELP,EAAUG,eAIrB5L,EAAIoM,gBAAkB,SAASC,EAAMhB,GACjC,GAAIiB,GAAqBD,EAAKnN,QAAQ,oBAAqB,IAGvDqN,EAAUjN,EAAM2B,IAAI,4CAA8CuL,mBAAmBF,MAIzF,OAAOnB,GAAcoB,EAAS,uCAAwC,kCAAmC,qCAAsC,EAAG,EAAG,MAIzJvM,EAAIyM,WAAa,SAASC,GACtB,GAAIC,GAAcD,EAAOtD,aACzB,OAAqC,KAAjCuD,EAAYrM,QAAQ,UAAoD,KAAjCqM,EAAYrM,QAAQ,SACpDhB,EAAM2B,IAAI,4CAA8CuL,mBAAmBE,IAC/E,MAGJ1M,KAMf,WACC,YAEAlB,SAAQC,OAAO,qBAIdC,UAAU,kBAAmB,MAAO,aAAc,SAAUQ,EAAKoN,GAC9D,GAAIC,GAAoBD,EAAa,sBAAwBE,MAAMC,UAAU3F,QAAQ,OAAS,2BAA6B5H,EAAIkD,GAAK,uHAEvI,QACCzD,SAAU,IACVqI,OACC+D,KAAM,cACNa,OAAQ,kBACRc,iBAAkB,qBAEnB3F,KAAM,SAAUC,EAAOC,EAAMC,GAEzB,GAAItG,GAAS,EACToG,GAAM4E,OAAOhL,SACbA,EAAS+L,OAAOC,KAAK5F,EAAM4E,OAAOhL,QAAQiM,IAAI,SAAUC,GACpD,MAAkC,QAA9B9F,EAAM4E,OAAOhL,OAAOkM,IAAgD,KAA9B9F,EAAM4E,OAAOhL,OAAOkM,IAEtDA,EAAM9F,EAAM4E,OAAOhL,OAAOkM,IAAOD,IAAIX,oBAAoBa,KAAK,KAFtE,SAGDA,KAAK,MAGZ9F,EAAK,GAAG+F,IAAMT,EAAoB,SAAWvF,EAAM+D,MAAQ/D,EAAM4E,OAAOhL,OAAS,IAAMA,EAAS,IACnGqG,EAAKoD,GAAG,OAAQ,WACZ,GAAI4C,GAAIhG,EAAK,GAAGiG,eAAiBjG,EAAK,EAEtC,KAAKgG,EAAEE,cACH,MAAOzD,OAAM,4LAKpB,IAHAuD,EAAEE,cAAcnG,EAAM4E,QAGS,SAA3B5E,EAAM0F,iBAA6B,CAEtC,GAAIU,GAAS,WACZnG,EAAKoG,IAAI,SAAU,IACnBpG,EAAKoG,IAAI,SAAUJ,EAAEK,SAASC,KAAKC,aAAe,MAInDJ,KACAH,EAAEQ,EAAER,EAAEK,UAAUI,MAAM,WACrBN,MAEDH,EAAEQ,EAAER,EAAEK,UAAUjD,GAAG,sBAAuB,WACtCzF,OAAO+I,WAAWP,EAAQ,gBAUpC,WACI,YAEA5O,SAAQC,OAAO,qBACV0J,QAAQ,uBAAwB,SAASyF,GAEtCA,EAAqBC,SACjBC,KAAM,wBACNhP,YAAa,oCACbiP,SAAU,WAAY,oBAAqB,eAC3ClH,WAAY,4CAInBA,WAAW,wCAAyC,cAAe,SAAU,QAAS,UAAW,aAAc,YAAa,QAAS,kBAAmB,yBAA0B,SAASmH,EAAaxL,EAAQxD,EAAOiP,EAAStG,EAAYiD,EAAWsD,EAAOvL,EAAiBwL,GAC5Q3L,EAAOwF,GAAGoG,SAASC,OAAOC,cAAe,EACzC9L,EAAOwF,GAAGoG,SAASC,OAAOE,iBAAkB,EAC5C/L,EAAOwF,GAAGoG,SAASC,OAAOG,mBAAoB,EAC9ChM,EAAOwF,GAAGoG,SAASC,OAAOI,cAAe,EACzCjM,EAAOwF,GAAGoG,SAASC,OAAOK,YAAa,EACvClM,EAAOwF,GAAGoG,SAASC,OAAOM,WAAa,wBACvCnM,EAAOwF,GAAG4G,qBAAsB,EAChCpM,EAAOwF,GAAG6G,eAAgB,EAI1Bb,EAAY,4BAA8BxL,OAAQA,GAGvCA,GAAOsM,MAAMtM,EAAOyF,QAAQ3H,KAAKyO,OAAO,GAAGC,YAiBlE,WACI,YAEAxQ,SAAQC,OAAO,qBACV0J,QAAQ,uBAAwB,2BAA4B,SAAUyF,EAAsBqB,GAEzFrB,EAAqBC,SACjBC,KAAM,oBACNhP,YAAa,0CACbiP,QAASkB,EACTpI,WAAY,yCAInBA,WAAW,+BAAgC,YAAa,SAAU,QAAS,MAAO,UAAW,aAAc,eAAgB,WAAY,SAAU+D,EAAWpI,EAAQxD,EAAOE,EAAKuD,EAASC,EAAYwM,EAActM,GAuBhN,QAASuM,KACL,GAAId,GAAS7L,EAAOwF,GAAGoG,SAASC,MACRe,UAApBf,EAAOgB,UAA8C,OAApBhB,EAAOgB,WAAmBhB,EAAOgB,UAAW,GAC1DD,SAAnBf,EAAOiB,SAA4C,OAAnBjB,EAAOiB,UAAkBjB,EAAOiB,QAAU,aAxBlF,GAAIzM,GAAKC,IACTD,GAAGE,MAAQL,EACXG,EAAG0M,SAAW,GAEd1M,EAAG2M,QAAU,WAAc,MAAO5M,GAAS4M,QAAQ3M,EAAG0M,WACtD1M,EAAG4M,aAAe,SAAsBC,EAAMC,GAC1C,GAAI7O,GAAS+B,EAAG0M,QACH,KAATG,IACA5O,GAAkB,wBACT,IAAT4O,IACA5O,GAAkB,wBACtB,IAAI8O,GAAKD,EAAQ,IAAO,EACxB,OAAOC,GAAK9O,EAAS8O,GAGzB/M,EAAG4D,KAAO,WAAc,MAAO7D,GAAS8D,aAAa7D,EAAG0M,WACxD1M,EAAGgN,WAAa,SAAUC,GAAO,MAAOA,GAAIlR,QAAQ,MAAO,aAC3DiE,EAAGoB,gBACC9D,eAAe,GASnBgP,IAGA3M,EAAOuN,OAAO,cAAe,SAASC,EAAUhF,GAC5C,GAAKgF,EAAL,CAIA,GAAI/D,GAAUiD,EAAa/C,WAAW6D,EACnC/D,GACCA,EAAQpL,KAAK,SAAUC,GACfA,EAAOE,OACP6B,EAAG0M,SAAWzO,EAAOE,QAG7B6B,EAAG0M,SAAWS,KAMtBnN,EAAGoN,yBAA2B,SAAS5P,EAAO0K,GAC1CvI,EAAO2G,OAAO,WACL9I,IAGQ,SAAT0K,IACAvI,EAAOnC,MAAM2O,MAAQ,QAAU3O,EAAM+B,IAE5B,SAAT2I,GAA4B,UAATA,GACnBmE,EAAapD,gBAAgBzL,EAAO0K,GAC/BlK,KAAK,SAAUC,GACZ0B,EAAOnC,MAAM2O,MAASlO,EAAW,KAC3B,QAAUA,EAAOE,KAAKkP,OACtB7P,QAO1BwC,EAAGsN,WAAa,SAAUpF,GACtBmE,EAAapE,KACTC,EACAvI,EAAOnC,MAAM2O,OAEToB,MAAO5N,EAAOwF,GAAGoG,SAASC,OAAS7L,EAAOwF,GAAGoG,SAASC,OAAO+B,MAAQ,GACrEC,WAAY7N,EAAOwF,GAAGoG,SAASC,OAAS7L,EAAOwF,GAAGoG,SAASC,OAAOgC,WAAa,IAEnFxN,EAAGoN,2BAIXpN,EAAGyN,aAAe,SAASlJ,GACvBvE,EAAGuE,KAAOA,GAEdvE,EAAG0N,SAAW,SAAS9L,GACnBjC,EAAOnC,MAAM2O,MAAQ,QAAUvK,EAASpC,IAG5CG,EAAOiH,YAAc5G,EAAG0N,SAExB1N,EAAG2N,WAAa,SAAgBrQ,EAAesQ,GAC3C5N,EAAGoB,eAAe9D,gBAAkBA,EACpC0C,EAAGuE,KAAKrD,QAAQX,eAAgBqN,WAWhD,WACI,YAEAjS,SAAQC,OAAO,qBACV0J,QAAQ,uBAAwB,8BAA+B,SAAUyF,EAAsB8C,GAE5F9C,EAAqBC,SACjBC,KAAM,oBACNhP,YAAa,0CAEbiP,QAAS2C,EACT7J,WAAY,mCAKnBA,WAAW,yBAA0B,YAAa,SAAU,QAAS,MAAO,UAAW,aAAc,SAAU+D,EAAWpI,EAAQxD,EAAOE,EAAKuD,EAASC,GAEpJ,GAAIG,GAAKC,IACTD,GAAGE,MAAQL,EACXG,EAAGyI,cAAgB,KACnBzI,EAAG0M,SAAW,GAGd1M,EAAGyN,aAAe,SAASlJ,GACvBvE,EAAGuE,KAAOA,GAKd5E,EAAOiH,YAAc,SAAShF,KAE9B5B,EAAG2N,WAAa,WACZ3N,EAAGuE,KAAKrD,gBA2CxB,WAEI,GAAI4M,GAAQ,iEAAiEjP,MAAM,GAEnFkP,MAAKC,KAAO,SAAUC,EAAKC,GACvB,GAA8BC,GAA1BC,EAAQN,EAAOE,IAGnB,IAFAE,EAAQA,GAASE,EAAMpP,OAEnBiP,EAEA,IAAKE,EAAI,EAAOF,EAAJE,EAASA,IAAKH,EAAKG,GAAKC,EAAM,EAAIL,KAAKM,SAAWH,OAC3D,CAEH,GAAII,EAQJ,KALAN,EAAK,GAAKA,EAAK,IAAMA,EAAK,IAAMA,EAAK,IAAM,IAC3CA,EAAK,IAAM,IAING,EAAI,EAAO,GAAJA,EAAQA,IACXH,EAAKG,KACNG,EAAI,EAAoB,GAAhBP,KAAKM,SACbL,EAAKG,GAAKC,EAAY,IAALD,EAAgB,EAAJG,EAAW,EAAMA,IAK1D,MAAON,GAAK9D,KAAK,KAKrB6D,KAAKQ,SAAW,WAEZ,IAAK,GAD6CD,GAA9CF,EAAQN,EAAOE,EAAO,GAAIQ,OAAM,IAAKC,EAAM,EACtCN,EAAI,EAAO,GAAJA,EAAQA,IACX,GAALA,GAAe,IAALA,GAAgB,IAALA,GAAgB,IAALA,EAChCH,EAAKG,GAAK,IACE,IAALA,EACPH,EAAKG,GAAK,KAEC,GAAPM,IAAaA,EAAM,SAA6B,SAAhBV,KAAKM,SAAwB,GACjEC,EAAU,GAANG,EACJA,IAAa,EACbT,EAAKG,GAAKC,EAAY,IAALD,EAAgB,EAAJG,EAAW,EAAMA,GAGtD,OAAON,GAAK9D,KAAK,KAIrB6D,KAAKW,YAAc,WACf,MAAO,uCAAuC3S,QAAQ,QAAS,SAAUgD,GACrE,GAAIuP,GAAoB,GAAhBP,KAAKM,SAAgB,EAAGM,EAAS,KAAL5P,EAAWuP,EAAS,EAAJA,EAAU,CAC9D,OAAOK,GAAEC,SAAS,UAQ9BjT,QAAQC,OAAO,qBACV0J,QAAQ,uBAAwB,2BAA4B,SAAUyF,EAAsBqB,GAEzFrB,EAAqBC,SACjBC,KAAM,0BACNhP,YAAa,6CACbiP,QAASkB,EACTpI,WAAY,mDAKnBA,WAAW,yCAA0C,SAAU,aAAc,cAAe,UAAW,SAAUrE,EAAQE,EAAYgP,EAAatS,GAY/I,QAASuS,GAAeC,GACpB,GAAIC,GAAYD,EAAU/P,OAAQiQ,KAAgBC,IAClD,KAAKH,EAAW,MAAOE,EACvB,KAAK,GAAIE,GAAQ,EAAGA,EAAQ1E,SAAS2E,YAAYpQ,OAAQmQ,IAAS,CAC9D,GAAIE,GAAU5E,SAAS2E,YAAYD,GAAOG,OAAS7E,SAAS2E,YAAYD,GAAOI,QAC/E,IAAGF,EACC,IAAK,GAAIG,GAAI,EAAGA,EAAIH,EAAQrQ,OAAQwQ,IAChC,GAAIH,EAAQG,GAAGC,cAAgBJ,EAAQG,GAAGC,aAAaC,UAAU,EAAGV,KAAeD,EAAW,CAE1F,GAAIY,GAAMN,EAAQG,GAAGC,aACjBG,EAAWD,EAAID,UAAU,EAAGC,EAAIxS,QAAQ,MAAMpB,QAAQ,IAAK,GAC1DmT,GAAkBU,KACnBX,EAAUtQ,MAAOkR,KAAMR,EAAQG,GAAIM,QAASF,IAC5CV,EAAkBU,IAAY,IAIlD,MAAOX,GAMX,QAASc,GAAwBC,GAC7BA,EAAQA,GAAS,EACjB,IAAIC,GAASD,EAAMjU,QAAQ,aAAcQ,GACpCR,QAAQ,oBACT,SACAmU,EAAWD,EAASA,EAAOpR,MAAM,QACrC,OAAOgQ,GAAYsB,KAAKD,GAxC5B,GAAIlQ,GAAKrE,QAAQiC,OAAOqC,MACpBmQ,WAAY,GACZC,OAAQ,GACRC,cAAe,GACfC,SACAC,eAAe,EACfC,gBAAgB,GAsCpBzQ,GAAG0Q,QAAU,SAASvD,GAClBxN,EAAOnC,MAAM2O,MAAQgB,EACrBnN,EAAGyQ,gBAAiB,EAEpB9Q,EAAOgR,KAAKC,aAGhB5Q,EAAGgB,SAAW,WAEV,GAAI6P,GAAkBlR,EAAOwF,GAAGoG,SAAS,0BACzCvL,GAAGgQ,MAAQ,EAAoBa,EAAgBC,OAAS,GAAK,GAC7D9Q,EAAGqQ,OAAS,EAAoBQ,EAAgBE,WAAa,GAAK,GAClE/Q,EAAGsQ,cAAgB,EAAoBO,EAAgBG,YAAc,GAAK,GAEtEhR,EAAGwQ,eACH7U,QAAQiC,OAAOoC,GACXoQ,WAAY,GACZC,OAAQ,cACRC,cAAe,cAIvBP,EAAwB/P,EAAGgQ,OAAOhS,KAAK,WAEnCgC,EAAGuQ,MAAQzB,EAAe9O,EAAGqQ,UAIjCrQ,EAAGE,MAAQL,EACPA,EAAW2H,IAAIoB,QAAQC,IAAIlJ,EAAOyF,QAAQ6L,kBAGlDjR,EAAGgB,cAYX,WACI,GAAIkQ,IACAC,KAAM,SAASC,GACXF,EAAGE,QAAUA,CAGb,IAAIC,GAAMD,EAAQE,UAEdC,EAAqBF,EAAIvT,IAAI,qBAEjCyT,GAAmBC,oBAAoBxT,KAAK,SAASC,GACjD,GAAIqH,GAASrH,EAAOE,IAEhBmH,GAAOmM,YAEPL,EAAQM,OAAOC,WAAWP,EAAQ1U,MAAMkV,WAAWX,gBAAgBpQ,UAAW,EAE9EuQ,EAAQM,OAAOC,WAAW,IAAIV,gBAAgBpQ,UAAW,MAOzEkB,QAAO,qDAAuDmP,KAMlEvV,QAAQC,OAAO,qBACV0J,QAAQ,uBAAwB,uBAAwB,SAASyF,EAAsB8G,GAEpF9G,EAAqBC,SACjBC,KAAM,yBACNhP,YAAa,4CACbiP,QAAS2G,EACT7N,WAAY,2CAKnBA,WAAW,uCAAwC,SAAU,eAAgB,QAAS,YAAa,SAAUrE,EAAQmS,EAAczG,EAAO0G,GAEvI,QAAS/Q,KAEArB,EAAOwF,GAAGoG,SAASC,SACpB7L,EAAOwF,GAAGoG,SAASC,WAEvB7L,EAAOqS,cAAc,SAGjBrS,EAAOyF,SAAWzF,EAAOyF,QAAQ5H,SACjC7B,QAAQuC,QAAQyB,EAAOyF,QAAQ5H,QAAQ0O,OAAQ,SAASyC,EAAGR,GACvDQ,EAAExC,MAAQwC,EAAExC,MAAMpQ,QAAQ,KAAM,OAKxC4D,EAAOsS,YAAcF,EAAU,SAAUpS,EAAQA,EAAOqS,eACxDrS,EAAOuS,WAAaH,EAAU,aAAcpS,EAAQA,EAAOwS,kBAG3DxS,EAAOyS,aAEPzS,EAAO0S,OAASP,EAAazG,GAAO,GACpC1L,EAAO2S,UAAYR,EAAazG,GAAO,GAEvC1L,EAAOwS,mBAIXxS,EAAO4S,WAAa,WAChB,MAAO5S,GAAOsS,YAAYzU,OAASmC,EAAOuS,WAAW1U,OAGzDmC,EAAOqS,cAAgB,SAAU9J,GAC7B,GAAIsK,IACAC,OAAWC,IAAK,QAASrC,OAAQ,GAAIsC,WAAY,gBAAiBjI,KAAM,+IACxEkI,YAAcF,IAAK,UAAWrC,OAAQ,IAAKsC,WAAY,mBAAoBjI,KAAM,+IAErF/K,GAAO0G,KAAOmM,EAAMtK,IAKxBvI,EAAOwS,iBAAmB,SAASU,GAC/BlT,EAAOmT,WAAsB,qBAARD,EACflT,EAAO2S,UACP3S,EAAO0S,OAEb1S,EAAOyS,UAAYzS,EAAOmT,WAAWvR,YAIzC5B,EAAOoT,IAAM,WACT,GAAIC,GAAWhR,OAAO,sBAAuBrC,EAAO0G,KAAKsM,WAEzD,IAAKK,EAAL,CAIA,GAAI9J,GAAO,EACX8J,GAAWA,EAASjX,QAAQ,KAAM,IAClC,IAAIkX,GAAaD,EAASE,YAAY,IAClCD,GAAa,KACb/J,EAAO8J,EAAStD,UAAU,EAAGuD,EAAa,GAC1CD,EAAWA,EAAStD,UAAUuD,EAAa,IAI1CD,EAASG,SAASxT,EAAO0G,KAAKqM,OAC/BM,GAAYrT,EAAO0G,KAAKqM,KAGD,KAAvB/S,EAAO0G,KAAKgK,QAAiB2C,EAAS,KAAOrT,EAAO0G,KAAKgK,SACzD2C,EAAWrT,EAAO0G,KAAKgK,OAAS2C,EAEpC,IAAItV,GAAWwL,EAAO8J,CACtBpK,SAAQC,IAAInL,GAGZiC,EAAOmT,WAAWM,OAAO1V,EAAUiC,EAAO0G,KAAKqE,MAC1C1M,KAAK,WACF2B,EAAOnC,MAAM2O,MAAQzO,MAIjCsD,OAKHqS,OAAO,cAAe,WAInB,MAAO,UAASC,EAAOZ,GACnB,GAAIa,KAKJ,OAJA5X,SAAQuC,QAAQoV,EAAO,SAASpK,GACxBA,EAAKsK,MAAMtK,EAAKlK,OAAS0T,EAAI1T,UAAY0T,GACzCa,EAAI5U,KAAKuK,KAEVqK,KAKnB,WACC,YAIG5X,SAAQC,OAAO,qBACV0J,QAAQ,uBAAwB,SAASyF,GAGtCA,EAAqBC,SACjBC,KAAM,qBACNhP,YAAa,wCAEbiP,SAAU,WAAY,oBAAqB,kBAAmB,uBAQ9E,WACC,YAIAvP,SAAQC,OAAO,qBAEX0J,QAAQ,uBAAwB,SAAUyF,GAG7CA,EAAqBC,SACpBC,KAAM,qBACNhP,YAAa,wCAEbiP,SAAU,WAAY,oBAAqB,kBAAmB,eAC9DlH,WAAY,uCAQbA,WAAW,6BAA8B,SAAU,SAAUrE,GAE7D,GAAIK,GAAKC,IAGTD,GAAG+I,QACC0K,aAAc,GACRC,iBAAiB,EACvBC,UAAW,SAAUxG,GACvBxN,EAAO2G,OAAO,WACb3G,EAAOnC,MAAM2O,MAAQgB,KAGvBO,SAAU,SAAUlQ,GAASwC,EAAG+I,OAAO0K,aAAejW,GACtDoW,YAAa,SAASC,GAAY7T,EAAG+I,OAAO2K,gBAAkBG,IAG/DlU,EAAOuN,OAAO,cAAe,SAAUC,EAAUhF,GAC5CgF,IAAahF,GAChBnI,EAAG+I,OAAO2E,SAASP,KAGrBxN,EAAOuN,OAAO,cAAe,SAAUC,EAAUhF,GAC5CgF,IAAahF,GAChBnI,EAAG+I,OAAO6K,YAAYzG,WAQ1B,WACC,YAiBG,SAAS2G,GAA8BnU,EAAQoU,EAAWC,EAAgBC,EAAiBC,EAAeC,EAAaC,GAwCnH,QAASC,GAAoBC,GACzBtU,EAAGsU,OAASA,EACR3U,EAAO4U,eAAeC,UACtBR,EAAeS,gBAAgBH,EAAQ3U,EAAO4U,eAAeC,UAEjEP,EAAgBS,WAAW1U,GAC3BmU,EAAYO,WAAW1U,GAEvB2U,EAA8BL,GAGlC,QAASM,GAAcC,GAEnBA,EAAQ3H,OAAO,cAAe,SAASC,EAAUhF,GACzCgF,IAAahF,GAA0B,OAAdnI,EAAGsU,SAC5BO,EAAQN,eAAeO,SAAW3H,EAClC0H,EAAQE,WAAW,uBAK/B,QAASJ,GAA8BpJ,GAEnC,GAAI5L,EAAOqV,OAAOhW,SAAWW,EAAOsV,MAAQ,EAA5C,CAGA,GAAIC,GAAYvV,EAAOqV,OAAOrV,EAAOsV,MAAQ,EACtB,2BAAnBC,EAAUhN,OACVqD,EAAS4J,qBAAsB,IAnEvC,GAAInV,GAAKC,IACTD,GAAGmV,qBAAsB,CAEzB,IAAI5J,IACA4J,qBAAsB,EAG1BnV,GAAGoB,gBACC9D,eAAe,GAGnB0C,EAAGgB,SAAW,WAEV2T,EAA8BpJ,GAG9B5L,EAAO4U,eAAiB5Y,QAAQiC,OAAOsW,EAAckB,kBAAkB7J,IACnE8J,MAAOhB,IAIXF,EAAYmB,WAAWtV,EAAIL,GAG3ByU,EAAiBmB,OAAOvV,EAAIL,EAG5B,IAAI6V,GAAmBzB,EAAU0B,gBAAgBvY,OAAO,EAAG,EACvDgX,GAAcH,UAAU5W,QAAQqY,IAAU,GAC1C7Z,QAAQiC,OAAO+B,EAAO4U,gBAClBC,SAAUgB,EACVE,aAAc,uBAAyBF,EAAQ,QAGvDZ,EAAcjV,IAElBK,EAAGgB,WAnDP8S,EAA8BhQ,SAAW,SAAU,YAAa,iBAAkB,kBAAmB,gBAAiB,cAAe,oBACrInI,QAAQC,OAAO,qBACV0J,QAAQ,uBAAwB,uBAAwB,SAAUyF,EAAsB8G,GACrF9G,EAAqBC,SACjBC,KAAM,yBACNhP,YAAa,4CACbiP,QAAS2G,EACT7N,WAAY,iCAInBA,WAAW,sBAAuB8P,MAiF3CnY,QAAQC,OAAO,qBAEVM,QAAQ,cAAe,WAMpB,QAASoZ,GAAWtV,EAAIL,GACpBK,EAAGyN,aAAe,SAAUlJ,GACxBvE,EAAGuE,KAAOA,GAGdvE,EAAG0N,SAAW,SAAU9L,EAAU+T,GACZpJ,SAAdoJ,IACAA,EAAY3V,EAAG4V,eACnB5V,EAAGsU,OAAOuB,cAAcF,EAClB,aAAgB/T,EAASlE,SAAW,KACpC,YAAekE,EAASlE,SAAW,KAAQkE,EAAS+B,KAAKzG,OAAO,EAAG0E,EAAS+B,KAAKuP,YAAY,MAAQ,SAI/GvT,EAAOiH,YAAc,SAAUhF,GAC3B5B,EAAG0N,SAAS9L,EAA4B,UAAlBA,EAASgB,OAGnC5C,EAAG2N,WAAa,SAAgBC,EAAYtQ,GACxC0C,EAAG4V,cAAgBhI,EACnB5N,EAAGoB,eAAe9D,gBAAkBA,EACpC0C,EAAGuE,KAAKrD,QAASX,eAAgBqN,IACjCjO,EAAO2G,UAIf,QAASwP,GAAe9V,GACpB,GAAI+V,GAAI/V,EAAGsU,MAEXyB,GAAEC,UAAU,aACR9N,KAAM,cACNtE,KAAM,qBACNb,MAAO,wBACPkT,QAAS,WACLjW,EAAG2N,YAAW,IAElBuI,OAEQC,KAAM,gBACNC,QAAS,wBACTxS,KAAM,qBACNqS,QAAS,WACLjW,EAAG2N,YAAW,GAAO,MAGzBwI,KAAM,eACNC,QAAS,uBACTxS,KAAM,iBACNqS,QAAS,WACLjW,EAAG2N,YAAW,GAAO,QAQrCoI,EAAEC,UAAU,UACR9N,KAAM,cACNiO,KAAM,GACNvS,KAAM,QACNqS,QAAS,WACLjW,EAAG2N,YAAW,IAElBuI,OAEQC,KAAM,kBACNC,QAAS,0BACTxS,KAAM,QACNqS,QAAS,WAAcjW,EAAG2N,YAAW,MAErCwI,KAAM,iBACNC,QAAS,yBACTxS,KAAM,QACNqS,QAAS,WAAcjW,EAAG2N,YAAW,GAAM,MAE3CwI,KAAM,oBACNvS,KAAM,QACNqS,QAAS,WAAcF,EAAEM,YAAY,eAIvCzS,KAAM,YAAawS,QAAS,aAAcH,QAAS,WAAcF,EAAEM,YAAY,kBAC/EzS,KAAM,cAAewS,QAAS,eAAgBH,QAAS,WAAcF,EAAEM,YAAY,oBACnFzS,KAAM,aAAcwS,QAAS,cAAeH,QAAS,WAAcF,EAAEM,YAAY,qBAzF/F,OACIf,WAAYA,EACZZ,WAAYoB,KA6FxBna,QAAQC,OAAO,qBAEVM,QAAQ,iBAAkB,OAAQ,SAAUoa,GAuCzC,QAASC,GAAWhL,GAyBhB,MAvBAiL,QACIC,UACIC,SAAS,EACTC,QAAS,kGAKKpL,EAAS4J,oBAAsB,oBAAsB,IAAK,gBACxEyB,YAAa,cAAgBrL,EAAS4J,oBAAsB,mBAAqB,KAErF0B,UACIH,SAAS,EACTC,QAAS,2JAOTC,YAAa,sCAGdJ,MA/DX,GAAI3Z,IAEAia,QAAS,sBAETC,UAAW,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGpDC,gBAAiB,KAGjBjD,UAAW,oBAAoBlV,MAAM,KAGrCoY,SACI,OACA,cACA,WACA,WACA,QACA,OAEA,QACA,SACA,UACA,KACA,QACA,cACA,gBACA,QACA,QACA,eAGJC,aAAc,0BAqElB,OApCAra,GAAIuY,kBAAoB,SAAU7J,GAC9B,GAAIiL,GAAQD,EAAWhL,EACvB,QACI4L,QAASta,EAAIia,QACbM,QAAQ,EACRC,mBAAmB,EACnBb,MAAOA,EACPE,QAASF,EAAMC,SAASC,QACxBC,QAASH,EAAMC,SAASE,QACxBM,QAASpa,EAAIoa,QAAQ/M,KAAK,KAC1B0M,YAAaJ,EAAMC,SAASG,YAC5BU,4BAA4B,EAC5BC,eAAe,EACfC,wBAAyB3a,EAAIqa,aAI7BO,gBAAiB,KAIjBC,eAAe,EACfC,oBAAqB,SACrBC,iBAAiB,EAGjBC,KAAM,YACNC,MAAO,SAGPtD,SAAU3X,EAAIma,gBAEde,UAAU,IAIXlb,KAEflB,QAAQC,OAAO,qBAEVM,QAAQ,oBAAqB,eAAgB,SAAUmQ,GAKpD,QAASkJ,GAAOvV,EAAIL,GAEhBK,EAAGgY,cAAgB,SAAU9P,GACzBmE,EAAapE,KAAKC,EAAM,IAAMqF,MAAO,KAAMC,WAAY,MAAQxN,EAAGoN,2BAItEpN,EAAGoN,yBAA2B,SAAU5P,EAAO0K,GAC3CvI,EAAO2G,OAAO,WACV,GAAK9I,EAAL,CAEA,GAAIya,GAAqBjY,EAAGsU,OAAO4D,UAAUC,YAG7C,IAAa,SAATjQ,EAAiB,CACjB,GAAIkB,GAAUiD,EAAa/C,WAAWpB,EAAO,KAAO1K,EAAM+B,IAAM/B,EAAM6P,QACtE,OAAOjE,GAAQpL,KAAK,SAAUC,GAC1B+B,EAAGsU,OAAOuB,cAAc,YAAe5X,EAAOE,KAAO,MAAS8Z,GAAsBza,EAAMyN,MAAQ,UAK1G,GAAa,SAAT/C,EAAiB,CACjB,GAAI8K,GAAWxV,EAAMN,OAAOM,EAAM0V,YAAY,KAAO,EACrDF,GAAWA,EAAS9V,OAAO,EAAG8V,EAASE,YAAY,MACnDlT,EAAGsU,OAAOuB,cAAc,YAAerY,EAAQ,MAASya,GAAsBjF,GAAY,YAC1E,UAAT9K,GACPlI,EAAGsU,OAAOuB,cAAc,aAAgBrY,EAAQ,UA/BhE,OACI+X,OAAQA,MAuCpB5Z,QAAQC,OAAO,qBAEVM,QAAQ,kBAAmB,aAAc,gBAAiB,SAAU4I,EAAYoP,GAM7E,QAASkE,GAAkB9D,EAAQE,GAC/B,GAAI6D,GAAanE,EAAc8C,gBAC3BjN,KAAWuO,KAAsBjI,EAAS,qBAAsBkI,EAAOlI,EAAOrR,OAG9EwZ,EAAM1T,EAAW2T,oBAAoBJ,EAEzC,KAAK,GAAI5a,KAAO+a,GACgB,IAAxB/a,EAAIN,QAAQkT,IACZtG,EAAKpL,KAAKlB,EAIlB,KAAK,GAFDib,GAAe5T,EAAWmC,QAAQ8C,GAE7B4O,EAAI,EAAGA,EAAI5O,EAAK/K,OAAQ2Z,IAC7BL,EAAgBvO,EAAK4O,GAAGjJ,UAAU6I,IAASG,EAAa3O,EAAK4O,GACjEC,SAAQC,QAAQrE,EAAU8D,GApB9B,GAAIzb,IACA4X,gBAAiB2D,EAqBrB,OAAOvb,MAEflB,QAAQC,OAAO,qBAEVM,QAAQ,mBAAoB,gBAAiB,SAAUgY,GAKpD,QAAS4E,GAAyB9Y,GAK9B,QAAS+Y,GAAiB9N,GACtB,MAAO,YAGH,QAAS+N,KACL1E,EAAO2E,UAAUC,cAAcjO,EAAM,SAAUkO,GAC3CC,EAAKC,OAAOF,KAJpB,GAAIC,GAAOnZ,IAQPqU,GAAO2E,UACPD,IAEA1E,EAAO9M,GAAG,OAAQwR,MAS9B,QAASM,GAAuBhF,EAAQtU,GAEpC,IAAK,GADDuZ,MACKC,EAAK,EAAGA,EAAKtF,EAAc6C,SAAS/X,OAAQwa,IACjDD,EAAW,WAAarF,EAAc6C,SAASyC,MAAUC,SAAU,MAAOC,WAAW,EAAOC,QAAUC,MAAS1F,EAAc6C,SAASyC,GAAM,MAChJlF,GAAO2E,UAAUY,SAASN,GAkI9B,QAASO,GAAYC,GACjBzF,EAAO/I,SAASoL,QAAUrC,EAAO/I,SAASiL,MAAMuD,GAAMpD,QACtDrC,EAAO/I,SAASmL,QAAUpC,EAAO/I,SAASiL,MAAMuD,GAAMrD,QAGtDpC,EAAOwD,MAAMkC,MAAMC,SACnB3F,EAAOwD,MAAMoC,SAAS5F,GACtBA,EAAO+B,YAAY,YAGnB5L,SAAS0P,eAAe,cAAcC,QAGtCtP,WAAW,WACPwJ,EAAO8F,SACR,KA2EP,QAASC,GAAkBxN,GAAQ,MAAO,YAAcyH,EAAO2E,UAAUqB,MAAM,WAAazN,IAyB5F,QAAS0N,GAAgBC,GACrB,MAAO,UAAqBC,GAExB,GAAIC,GAAkBpG,EAAOqG,IAAInB,GAAGiB,EAAgBD,IAA0BlG,EAAOsG,UAAUC,SAASJ,EACxG,OAAOC,IAvRf,GAAIpG,GAAStU,EAAGsU,MAkChBA,GAAO9M,GAAG,OAAQ,WACd8R,EAAuBhF,EAAQtU,IAiCnC,IAAI8a,IACA5S,KAAM,cACNtE,KAAM,OACNb,MAAO,OACPgY,aAAchC,EAAiB,QAC/B9C,QAAS,WACL3B,EAAO+B,YAAY,YAGvBH,OACEtS,KAAM,OAAQuS,KAAM,OAAQF,QAAS,WAAc3B,EAAO+B,YAAY,cAEpEF,KAAM,YACNC,QAAS,oBACTxS,KAAM,oBACNqS,QAAS,WACLjW,EAAGgY,cAAc,kBAKzBgD,EAAerf,QAAQsf,KAAKH,EAChCE,GAAa9E,KAAKvX,MAAOiF,KAAM,mBAAoBuS,KAAM,SAAUC,QAAS,sBAAuBH,QAAS,WAAc3B,EAAO+B,YAAY,gBAC7I/B,EAAO0B,UAAU,YAAa8E,GAC9BxG,EAAO0B,UAAU,eAAgBgF,GAIjC1G,EAAO0B,UAAU,UACb9N,KAAM,cACNiO,KAAM,GACNvS,KAAM,QACNqS,QAAS,WACLjW,EAAG2N,YAAW,IAElBuI,OAEQC,KAAM,kBACNC,QAAS,0BACTxS,KAAM,QACNqS,QAAS,WAAcjW,EAAG2N,YAAW,MAErCwI,KAAM,iBACNC,QAAS,yBACTxS,KAAM,QACNqS,QAAS,WAAcjW,EAAG2N,YAAW,GAAM,MAE3CwI,KAAM,oBACNvS,KAAM,QACNqS,QAAS,WAAc3B,EAAO+B,YAAY,eAI5CzS,KAAM,YAAawS,QAAS,aAAcH,QAAS,WAAc3B,EAAO+B,YAAY,kBACpFzS,KAAM,cAAewS,QAAS,eAAgBH,QAAS,WAAc3B,EAAO+B,YAAY,oBACxFzS,KAAM,aAAcwS,QAAS,cAAeH,QAAS,WAAc3B,EAAO+B,YAAY,qBAKhG/B,EAAO0B,UAAU,eACb9N,KAAM,cACNkO,QAAS,SACTD,KAAM,GACNvS,KAAM,SACNsX,IAAK,SACLH,aAAchC,EAAiB,UAC/B7C,OACMtS,KAAM,gBAAiBuS,KAAM,gBAAiBF,QAAS,WAAc3B,EAAO+B,YAAY,oBACxFzS,KAAM,cAAeuS,KAAM,cAAeF,QAAS,WAAc3B,EAAO+B,YAAY,kBACpFzS,KAAM,YAAauS,KAAM,YAAaF,QAAS,WAAc3B,EAAO+B,YAAY,kBAM1F/B,EAAO0B,UAAU,aACb9N,KAAM,cACNkO,QAAS,gBACTD,KAAM,GACNvS,KAAM,UACNsX,IAAK,oBACLH,aAAchC,EAAiB,WAC/B7C,OACMtS,KAAM,UAAWuS,KAAM,cAAe4E,aAAchC,EAAiB,WAAY9C,QAAS,WAAc3B,EAAO+B,YAAY,0BAC3HzS,KAAM,UAAWuS,KAAM,UAAWF,QAAS,WAAc3B,EAAO+B,YAAY,cAC5EzS,KAAM,SAAUuS,KAAM,SAAUF,QAAS,WAAc3B,EAAO+B,YAAY,eAwBpF/B,EAAO0B,UAAU,gBACbpS,KAAM,mBACNwS,QAAS,sBACTH,QAAS,WAAc6D,EAAY,eAGvCxF,EAAO0B,UAAU,gBACbpS,KAAM,gBACNwS,QAAS,iBACTH,QAAS,WAAc6D,EAAY,iBAMrC,MAAO,eAAgB,iBACpB,IAAK,YAAa,cAClB,OAAQ,OAAQ,SAChB,KAAM,YAAa,OACnB,KAAM,YAAa,OACnB,KAAM,YAAa,OACnB,KAAM,YAAa,cACnB,KAAM,YAAa,cACnB,KAAM,YAAa,cAAc5b,QAAQ,SAAUid,GAChD7G,EAAO0B,UAAUmF,EAAI,IACjB/E,QAAS+E,EAAI,GACbhF,KAAMgF,EAAI,GACVlF,QAAS,WAAc3B,EAAO+B,YAAY,mBAAmB,EAAO8E,EAAI,KACxEJ,aAAc,WACV,GAAI3B,GAAOnZ,KACPoV,EAAQ,WACJf,EAAO2E,UAAUC,cAAciC,EAAI,GAAI,SAAUhC,GAC7CC,EAAKC,OAAOF,KAGhB7E,GAAO2E,UAAY5D,IAAUf,EAAO9M,GAAG,OAAQ6N,QAMvEf,EAAO0B,UAAU,SAAUra,QAAQiC,UAAW0W,EAAO8G,QAAQC,IAEzDnT,KAAM,cACNgO,MACI5B,EAAO8G,QAAQE,GACfhH,EAAO8G,QAAQG,GACfjH,EAAO8G,QAAQI,GACflH,EAAO8G,QAAQK,MAMvBnH,EAAO0B,UAAU,mBACbpS,KAAM,0BACNyL,QAAS,sBACT+G,QAAS,mBACTH,QAAS,WACL,GAAIyF,GAAO3N,KAAKC,OAAO/H,aAEvBjG,GAAGsU,OAAOuB,cAAc,qCAA0C6F,EAAO,WAMjFpH,EAAO0B,UAAU,gBAAkBpS,KAAM,uBAAwBwS,QAAS,aAAc8E,IAAK,cAAeH,aAAchC,EAAiB,eAC3IzE,EAAO0B,UAAU,kBAAoBpS,KAAM,yBAA0BwS,QAAS,eAAgB8E,IAAK,gBAAiBH,aAAchC,EAAiB,iBACnJzE,EAAO0B,UAAU,iBAAmBpS,KAAM,wBAAyBwS,QAAS,cAAe8E,IAAK,eAAgBH,aAAchC,EAAiB,eAI/I,KAAK,GAFD4C,MAEKnC,EAAK,EAAGA,EAAKtF,EAAc6C,SAAS/X,OAAQwa,IAAM,CACvD,GAAIlU,IACA1B,KAAM,8BACNwS,QAASlC,EAAc6C,SAASyC,GAAM,IACtCrD,KAAMjC,EAAc6C,SAASyC,GAAM,IACnCvD,QAASoE,EAAkBnG,EAAc6C,SAASyC,IAClDuB,aAAchC,EAAiB,WAAa7E,EAAc6C,SAASyC,IAEvElF,GAAO0B,UAAU,YAAc9B,EAAc6C,SAASyC,GAAKlU,GAC3DqW,EAAahd,KAAK2G,GAGtBgP,EAAO0B,UAAU,gBACbpS,KAAM,8BAA+BwS,QAAS,OAC9CH,QAAS,WAAc3B,EAAO2E,UAAUqB,MAAM,gBAC9CS,aAAchC,EAAiB,iBAInCzE,EAAO0B,UAAU,gBAAiBra,QAAQiC,UAAW0W,EAAO8G,QAAQQ,cAClE1T,KAAM,cAAegO,KAAMyF,KAY7BrH,EAAOuH,kBAAkBtB,EAAgB,KAAM,eAC/CjG,EAAOuH,kBAAkBtB,EAAgB,OAAQ,2FACjDjG,EAAOuH,kBAAkBtB,EAAgB,YAAa,oCAlS1D,GAAI1d,IACA6X,WAAYoE,EAqShB,OAAOjc,MAEflB,QAAQC,OAAO,uBAAwBkgB,KAAK,iBAAkB,SAASC,GAAiBA,EAAeC,IAAI,sBAAsB,mhBACjID,EAAeC,IAAI,oBAAoB;AACvCD,EAAeC,IAAI,oCAAoC,kMACvDD,EAAeC,IAAI,uDAAuD,kgBAC1ED,EAAeC,IAAI,sDAAsD,qZACzED,EAAeC,IAAI,0CAA0C,gtKAC7DD,EAAeC,IAAI,0CAA0C,y2BAC7DD,EAAeC,IAAI,6CAA6C,m2DAChED,EAAeC,IAAI,4CAA4C,+zBAC/DD,EAAeC,IAAI,wCAAwC,sGAC3DD,EAAeC,IAAI,wCAAwC,iIAC3DD,EAAeC,IAAI,4CAA4C","file":"sxc-edit.min.js","sourcesContent":["(function() { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    angular.module(\"Adam\", [\r\n        \"SxcServices\",\r\n        \"EavConfiguration\", // config\r\n        \"EavServices\", // multi-language stuff\r\n        ])\r\n        ;\r\n\r\n} ());\n(function() {\r\n    /* jshint laxbreak:true*/\r\n\r\n    angular.module(\"Adam\", [])\r\n        /*@ngInject*/\r\n        .directive(\"adamHint\", function () {\r\n            return {\r\n                restrict: \"E\",\r\n                replace: false,\r\n                transclude: false,\r\n                templateUrl: \"adam/adam-hint.html\"\r\n            };\r\n        });\r\n})();\nangular.module(\"Adam\")\r\n    /*@ngInject*/\r\n    .factory(\"adamSvc\", [\"$http\", \"eavConfig\", \"sxc\", \"svcCreator\", \"appRoot\", function ($http, eavConfig, sxc, svcCreator, appRoot) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(contentType, entityGuid, field, subfolder, serviceConfig) {\r\n            var svc = {\r\n                url: sxc.resolveServiceUrl(\"app-content/\" + contentType + \"/\" + entityGuid + \"/\" + field),\r\n                subfolder: subfolder,\r\n                folders: [],\r\n                adamRoot: appRoot.substr(0, appRoot.indexOf(\"2sxc\"))\r\n            };\r\n\r\n            // get the correct url for uploading as it is needed by external services (dropzone)\r\n            svc.uploadUrl = function(targetSubfolder) {\r\n                var url = (targetSubfolder === \"\")\r\n                    ? svc.url\r\n                    : svc.url + \"?subfolder=\" + targetSubfolder;\r\n                url += (url.indexOf(\"?\") == -1 ? \"?\" : \"&\") + \"usePortalRoot=\" + serviceConfig.usePortalRoot;\r\n                return url;\r\n            };\r\n\r\n            // extend a json-response with a path (based on the adam-root) to also have a fullPath\r\n            svc.addFullPath = function addFullPath(value, key) {\r\n                value.fullPath = svc.adamRoot + value.Path;\r\n            };\r\n\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(svc.url + \"/items\", { params: { subfolder: svc.subfolder, usePortalRoot: serviceConfig.usePortalRoot } })\r\n                    .then(function (result) {\r\n                        angular.forEach(result.data, svc.addFullPath);\r\n                        return result;\r\n                    });\r\n            }));\r\n\r\n            // create folder\r\n            svc.addFolder = function add(newfolder) {\r\n                return $http.post(svc.url + \"/folder\", {}, { params: { subfolder: svc.subfolder, newFolder: newfolder, usePortalRoot: serviceConfig.usePortalRoot } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            svc.goIntoFolder = function(childFolder) {\r\n                svc.folders.push(childFolder);\r\n                var pathParts = childFolder.Path.split(\"/\");\r\n                var subPath = \"\";\r\n                for (var c = 0; c < svc.folders.length; c++)\r\n                    subPath = pathParts[pathParts.length - c - 2] + \"/\" + subPath;\r\n\r\n                subPath = subPath.replace(\"//\", \"/\");\r\n                if (subPath[subPath.length - 1] === \"/\")\r\n                    subPath = subPath.substr(0, subPath.length - 1);\r\n\r\n                childFolder.Subfolder = subPath;\r\n\r\n                // now assemble the correct subfolder based on the folders-array\r\n                svc.subfolder = subPath;\r\n                svc.liveListReload();\r\n                return subPath;\r\n            };\r\n\r\n            svc.goUp = function() {\r\n                if (svc.folders.length > 0)\r\n                    svc.folders.pop();\r\n                if (svc.folders.length > 0) {\r\n                    svc.subfolder = svc.folders[svc.folders.length - 1].Subfolder;\r\n                } else {\r\n                    svc.subfolder = \"\";\r\n                }\r\n                svc.liveListReload();\r\n                return svc.subfolder;\r\n            };\r\n\r\n            // delete, then reload\r\n            // IF verb DELETE fails, so I'm using get for now\r\n            svc.delete = function del(item) {\r\n                return $http.get(svc.url + \"/delete\", { params: { subfolder: svc.subfolder, isFolder: item.IsFolder, id: item.Id, usePortalRoot: serviceConfig.usePortalRoot  } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n            \r\n            svc.reload = svc.liveListReload;\r\n\r\n            return svc;\r\n        };\r\n    }]);\n(function () {\r\n    /* jshint laxbreak:true */\r\n    \"use strict\";\r\n\r\n    BrowserController.$inject = [\"$scope\", \"adamSvc\", \"debugState\", \"eavConfig\", \"eavAdminDialogs\", \"appRoot\", \"fileType\"];\r\n    var app = angular.module(\"Adam\"); \r\n\r\n    // The controller for the main form directive\r\n    app.controller(\"BrowserController\", BrowserController);\r\n    \r\n    /*@ngInject*/\r\n    function BrowserController($scope, adamSvc, debugState, eavConfig, eavAdminDialogs, appRoot, fileType) {\r\n        var vm = this;\r\n        vm.debug = debugState;\r\n\r\n        var initConfig = function initConfig() {\r\n            vm.contentTypeName = $scope.contentTypeName;\r\n            vm.entityGuid = $scope.entityGuid;\r\n            vm.fieldName = $scope.fieldName;\r\n            vm.subFolder = $scope.subFolder || \"\";\r\n            vm.showImagesOnly = $scope.showImagesOnly = $scope.showImagesOnly || false;\r\n\r\n            vm.folderDepth = (typeof $scope.folderDepth !== 'undefined' && $scope.folderDepth !== null)\r\n                ? $scope.folderDepth\r\n                : 2;\r\n            vm.showFolders = !!vm.folderDepth;\r\n            vm.allowAssetsInRoot = $scope.allowAssetsInRoot || true;\r\n            vm.metadataContentTypes = $scope.metadataContentTypes || \"\";\r\n        };\r\n\r\n        initConfig();\r\n        \r\n        vm.show = false;\r\n        vm.appRoot = appRoot;        \r\n\r\n        vm.disabled = $scope.ngDisabled;\r\n        vm.enableSelect = ($scope.enableSelect === false) ? false : true; // must do it like this, $scope.enableSelect || true will not work\r\n\r\n        vm.activate = function () {\r\n            if($scope.autoLoad)\r\n                vm.toggle();\r\n            if ($scope.registerSelf)\r\n                $scope.registerSelf(vm);\r\n        };\r\n\r\n\r\n        // load svc...\r\n        vm.svc = adamSvc(vm.contentTypeName, vm.entityGuid, vm.fieldName, vm.subFolder, $scope.adamModeConfig);\r\n\r\n        // refresh - also used by callback after an upload completed\r\n        vm.refresh = vm.svc.liveListReload;\r\n\r\n        vm.get = function () {\r\n            vm.items = vm.svc.liveList();\r\n            vm.folders = vm.svc.folders;\r\n            vm.svc.liveListReload();\r\n        };\r\n\r\n        vm.toggle = function toggle(newConfig) {\r\n            // Reload configuration\r\n            initConfig();\r\n            if (newConfig) {\r\n                vm.showImagesOnly = newConfig.showImagesOnly;\r\n            }\r\n            vm.show = !vm.show;\r\n            if (!vm.show)\r\n                $scope.adamModeConfig.usePortalRoot = false;\r\n            \r\n            if ($scope.adamModeConfig.usePortalRoot) {\r\n                vm.showFolders = true;\r\n                vm.folderDepth = 99;\r\n            }\r\n\r\n            if (vm.show)\r\n                vm.get();\r\n        };\r\n\r\n        vm.openUpload = function() {\r\n            vm.dropzone.openUpload();\r\n        };\r\n\r\n        vm.select = function (fileItem) {\r\n            if (vm.disabled || !vm.enableSelect)\r\n                return;\r\n            $scope.updateCallback(fileItem);\r\n        };\r\n\r\n        vm.addFolder = function () {\r\n            if (vm.disabled)\r\n                return;\r\n            var folderName = window.prompt(\"Please enter a folder name\"); // todo i18n\r\n            if (folderName)\r\n                vm.svc.addFolder(folderName)\r\n                    .then(vm.refresh);\r\n        };\r\n\r\n        vm.del = function del(item) {\r\n            if (vm.disabled)\r\n                return;\r\n            var ok = window.confirm(\"Are you sure you want to delete this item?\"); // todo i18n\r\n            if (ok)\r\n                vm.svc.delete(item);\r\n        };\r\n\r\n        //#region Folder Navigation\r\n        vm.goIntoFolder = function (folder) {\r\n            var subFolder = vm.svc.goIntoFolder(folder);\r\n            vm.subFolder = subFolder;\r\n        };\r\n\r\n        vm.goUp = function () {\r\n            vm.subFolder = vm.svc.goUp();\r\n        };\r\n\r\n        vm.currentFolderDepth = function() {\r\n            return vm.svc.folders.length;\r\n        };\r\n\r\n        vm.allowCreateFolder = function() {\r\n            return vm.svc.folders.length < vm.folderDepth;\r\n        };\r\n\r\n        //#endregion\r\n\r\n        //#region Metadata\r\n        vm.editMetadata = function(item) {\r\n            var items = [\r\n                vm._itemDefinition(item, vm.getMetadataType(item))\r\n            ];\r\n\r\n            eavAdminDialogs.openEditItems(items, vm.refresh);\r\n\r\n        };\r\n\r\n        vm.getMetadataType = function(item) {\r\n            var found;\r\n\r\n            // check if it's a folder and if this has a special registration\r\n            if (item.Type === \"folder\") {\r\n                found = vm.metadataContentTypes.match(/^(folder)(:)([^\\n]*)/im);\r\n                if (found)\r\n                    return found[3];\r\n                else \r\n                    return null;\r\n            }\r\n\r\n            // check if the extension has a special registration\r\n            // -- not implemented yet\r\n\r\n            // check if the type \"image\" or \"document\" has a special registration\r\n            // -- not implemneted yet\r\n\r\n\r\n            // nothing found so far, go for the default with nothing as the prefix \r\n            found = vm.metadataContentTypes.match(/^([^:\\n]*)(\\n|$)/im);\r\n            if (found)\r\n                return found[1];\r\n\r\n            // this is if we don't find anything\r\n            return null;\r\n        };\r\n\r\n        // todo: move to service, shouldn't be part of the application\r\n        vm._itemDefinition = function (item, metadataType) {\r\n            var title = \"EditFormTitle.Metadata\"; // todo: i18n\r\n            return item.MetadataId !== 0\r\n                ? { EntityId: item.MetadataId, Title: title } // if defined, return the entity-number to edit\r\n                : {\r\n                    ContentTypeName: metadataType, // otherwise the content type for new-assegnment\r\n                    Metadata: {\r\n                        Key: (item.Type === \"folder\" ? \"folder\" : \"file\") + \":\" + item.Id,\r\n                        KeyType: \"string\",\r\n                        TargetType: eavConfig.metadataOfCmsObject\r\n                    },\r\n                    Title: title,\r\n                    Prefill: { EntityTitle: item.Name } // possibly prefill the entity title \r\n                };\r\n\r\n        };\r\n\r\n        //#endregion\r\n\r\n        //#region icons\r\n        vm.icon = function (item) {\r\n            return fileType.getIconClass(item.Name);\r\n        };\r\n        //#endregion\r\n\r\n        vm.activate();\r\n    }\r\n\r\n})();\r\n\n(function () {\r\n    /* jshint laxbreak:true*/\r\n\r\n    angular.module(\"Adam\")\r\n        /*@ngInject*/\r\n        .directive(\"adamBrowser\", function () {\r\n            return {\r\n                restrict: \"E\",\r\n                templateUrl: \"adam/browser.html\",\r\n\r\n                //replace: true,\r\n                transclude: false,\r\n                require: \"^dropzone\",\r\n                link: function postLink(scope, elem, attrs, dropzoneCtrl) {\r\n                    // connect this adam to the dropzone\r\n                    dropzoneCtrl.adam = scope.vm;       // so the dropzone controller knows what path etc.\r\n                    scope.vm.dropzone = dropzoneCtrl;   // so we can require an \"open file browse\" dialog\r\n                },\r\n\r\n                // todo: change \"scope\" to bindToController whenever I have time - http://blog.thoughtram.io/angularjs/2015/01/02/exploring-angular-1.3-bindToController.html\r\n                scope: {\r\n                    // Identity fields\r\n                    contentTypeName: \"=\",\r\n                    entityGuid: \"=\",\r\n                    fieldName: \"=\",\r\n\r\n                    // configuration general\r\n                    subFolder: \"=\",\r\n                    folderDepth: \"=\", \r\n                    metadataContentTypes: \"=\",\r\n                    allowAssetsInRoot: \"=\",\r\n                    showImagesOnly: \"=?\",\r\n                    adamModeConfig: \"=\",\r\n\r\n                    // binding and cross-component communication\r\n                    autoLoad: \"=\",\r\n                    updateCallback: \"=\",\r\n                    registerSelf: \"=\",\r\n\r\n                    // basic functionality\r\n                    enableSelect: \"=\",\r\n                    ngDisabled: \"=\"\r\n                },\r\n                controller: \"BrowserController\",\r\n                controllerAs: \"vm\"\r\n\r\n            };\r\n        });\r\n})();\n(function() {\r\n    /* jshint laxbreak:true*/\r\n    angular.module(\"Adam\")\r\n        /*@ngInject*/\r\n        .directive(\"dropzoneUploadPreview\", function () {\r\n            return {\r\n                restrict: \"E\",\r\n                templateUrl: \"adam/dropzone-upload-preview.html\",\r\n                replace: true,\r\n                transclude: false\r\n            };\r\n        });\r\n})();\n/* js/fileAppDirectives */\r\n(function() {\r\n    angular.module(\"Adam\")\r\n        /*@ngInject*/\r\n        .directive(\"dropzone\", [\"sxc\", \"tabId\", \"AppInstanceId\", \"ContentBlockId\", \"dragClass\", \"adamSvc\", \"$timeout\", \"$translate\", function (sxc, tabId, AppInstanceId, ContentBlockId, dragClass, adamSvc, $timeout, $translate) {\r\n\r\n            return {\r\n                restrict: \"C\",\r\n                link: postLink,\r\n\r\n                // This controller is needed, because it needs an API which can talk to other directives\r\n                controller: controller\r\n            };\r\n\r\n\r\n            // this is the method called after linking the directive, which initializes Dropzone\r\n            function postLink(scope, element, attrs, controller) {\r\n                var header = scope.$parent.to.header;\r\n                var field = scope.$parent.options.key;\r\n                var entityGuid = header.Guid;\r\n                var svc = adamSvc(header.ContentTypeName, entityGuid, field, \"\", scope.$parent.vm.adamModeConfig);\r\n                var url = svc.url;\r\n\r\n                var config = {\r\n                    url: url,\r\n                    urlRoot: url,\r\n                    maxFilesize: 10000, // 10'000 MB = 10 GB, note that it will also be stopped on the server if it's larger than the really allowed sized\r\n                    paramName: \"uploadfile\",\r\n                    maxThumbnailFilesize: 10,\r\n\r\n                    headers: {\r\n                        \"ModuleId\": AppInstanceId,\r\n                        \"TabId\": tabId,\r\n                        \"ContentBlockId\": ContentBlockId\r\n                    },\r\n\r\n                    dictDefaultMessage: \"\",\r\n                    addRemoveLinks: false,\r\n                    previewsContainer: \".field-\" + field.toLowerCase() + \" .dropzone-previews\",\r\n                    // we need a clickable, because otherwise the entire area is clickable. so i'm just making the preview clickable, as it's not important\r\n                    clickable: \".field-\" + field.toLowerCase() + \" .invisible-clickable\" // \" .dropzone-adam\"\r\n                };\r\n\r\n\r\n                var eventHandlers = {\r\n                    'addedfile': function (file) {\r\n                        $timeout(function () {\r\n                            // anything you want can go here and will safely be run on the next digest.\r\n                            scope.$apply(function () { // this must run in a timeout\r\n                                scope.uploading = true;\r\n                            });\r\n                        });\r\n                    },\r\n\r\n                    \"processing\": function (file) {\r\n                        this.options.url = svc.uploadUrl(controller.adam.subFolder);\r\n                    },\r\n\r\n                    'success': function (file, response) {\r\n                        if (response.Success) {\r\n                            svc.addFullPath(response); // calculate additional infos\r\n                            scope.$parent.afterUpload(response);\r\n                        } else {\r\n                            alert(\"Upload failed because: \" + response.Error);\r\n                        }\r\n                    },\r\n                    'error': function (file, error, xhr) {\r\n                        alert($translate.instant(\"Errors.AdamUploadError\"));\r\n                    },\r\n\r\n                    \"queuecomplete\": function (file) {\r\n                        if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {\r\n                            scope.uploading = false;\r\n                            controller.adam.refresh();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // delay building the dropszone till the DOM is ready\r\n                $timeout(function () {\r\n                    var dropzone = new Dropzone(element[0], config);\r\n\r\n                    angular.forEach(eventHandlers, function(handler, event) {\r\n                        dropzone.on(event, handler);\r\n                    });\r\n\r\n                    scope.processDropzone = function() { dropzone.processQueue(); };\r\n                    scope.resetDropzone = function() { dropzone.removeAllFiles(); };\r\n                    controller.openUpload = function() { dropzone.hiddenFileInput.click(); };\r\n\r\n                }, 0);\r\n            }\r\n\r\n            /*@ngInject*/\r\n            function controller() {\r\n                var vm = this;\r\n                vm.adam = {\r\n                    show: false,\r\n                    subFolder: \"\",\r\n                    refresh: function () { }\r\n                };\r\n\r\n            }\r\n\r\n        }]);\r\n\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\t/* This app registers all field templates for 2sxc in the angularjs sxcFieldTemplates app */\r\n\r\n    angular.module(\"sxcFieldTemplates\", [\r\n        \"formly\",\r\n        \"formlyBootstrap\",\r\n        \"ui.bootstrap\",\r\n        \"ui.tree\",\r\n        \"2sxc4ng\",\r\n        \"SxcEditTemplates\",     // temp - was because of bad template-converter, remove once I update grunt\r\n        \"EavConfiguration\",\r\n        \"SxcServices\",\r\n        \"eavFieldTemplates\",\r\n        \"Adam\",\r\n        //\"ui.tinymce\",   // connector to tiny-mce for angular\r\n        \"oc.lazyLoad\"   // needed to lazy-load the MCE editor from the cloud\r\n    ]);\r\n\r\n})();\n// This is the service which allows opening dnn-bridge dialogs and processes the results\r\n\r\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"dnnBridgeSvc\", [\"$uibModal\", \"$http\", \"promiseToastr\", \"eavConfig\", \"sxc\", function ($uibModal, $http, promiseToastr, eavConfig, sxc) {\r\n        var svc = {};\r\n        svc.open = function open(type, oldValue, params, callback) {\r\n            var template = type === \"pagepicker\" ? \"pagepicker\" : \"filemanager\";\r\n\r\n            var connector = {\r\n                params: params,\r\n                valueChanged: callback,\r\n                dialogType: type\r\n            };\r\n\r\n            connector.valueChanged = function valueChanged(value, type) {\r\n                connector.modalInstance.close();\r\n                callback(value, type);\r\n            };\r\n\r\n            connector.params.CurrentValue = oldValue;\r\n\r\n            console.log(\"before open\");\r\n            console.log($uibModal);\r\n            connector.modalInstance = $uibModal.open({\r\n                templateUrl: \"fields/dnn-bridge/hyperlink-default-\" + template + \".html\",\r\n                resolve: {\r\n                    bridge: function () {\r\n                        return connector;\r\n                    }\r\n                },\r\n                /*@ngInject*/\r\n                controller: [\"$scope\", \"bridge\", function ($scope, bridge) {\r\n                    $scope.bridge = bridge;\r\n                }],\r\n                windowClass: \"sxc-dialog-filemanager\"\r\n            });\r\n            console.log(\"after open\");\r\n\r\n            return connector.modalInstance;\r\n        };\r\n\r\n        // convert the url to a Id-code\r\n        svc.convertPathToId = function(path, type) {\r\n            var pathWithoutVersion = path.replace(/\\?ver=[0-9\\-]*$/gi, \"\");\r\n            // todo: working on https://github.com/2sic/2sxc/issues/656 but can't reproduce error\r\n            // this is why I tried ignoreErrors and promisetoaster, but atm there is nothing to work on...\r\n            var promise = $http.get(\"dnn/Hyperlink/GetFileByPath?relativePath=\" + encodeURIComponent(pathWithoutVersion),\r\n            {\r\n                //ignoreErrors: true\r\n            });\r\n            return promiseToastr(promise, \"Edit.Field.Hyperlink.Message.Loading\", \"Edit.Field.Hyperlink.Message.Ok\", \"Edit.Field.Hyperlink.Message.Error\", 0, 0, 1000);\r\n        };\r\n\r\n        // handle short-ID links like file:17\r\n        svc.getUrlOfId = function(idCode) {\r\n            var linkLowered = idCode.toLowerCase();\r\n            if (linkLowered.indexOf(\"file:\") !== -1 || linkLowered.indexOf(\"page:\") !== -1)\r\n                return $http.get(\"dnn/Hyperlink/ResolveHyperlink?hyperlink=\" + encodeURIComponent(idCode));\r\n            return null;\r\n        };\r\n\r\n        return svc;\r\n\r\n    }]);\n\r\n// this is in charge of the iframe which shows the dnn-bridge components\r\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\tangular.module(\"sxcFieldTemplates\")\r\n\r\n\r\n    /*@ngInject*/\r\n\t.directive(\"webFormsBridge\", [\"sxc\", \"portalRoot\", function (sxc, portalRoot) {\r\n\t    var webFormsBridgeUrl = portalRoot + \"Default.aspx?tabid=\" + $2sxc.urlParams.require(\"tid\") + \"&ctl=webformsbridge&mid=\" + sxc.id + \"&dnnprintmode=true&SkinSrc=%5bG%5dSkins%2f_default%2fNo+Skin&ContainerSrc=%5bG%5dContainers%2f_default%2fNo+Container\"; //\"&popUp=true\";\r\n\r\n\t\treturn {\r\n\t\t\trestrict: \"A\",\r\n\t\t\tscope: {\r\n\t\t\t\ttype: \"@bridgeType\",\r\n\t\t\t\tbridge: \"=webFormsBridge\",\r\n\t\t\t\tbridgeSyncHeight: \"@bridgeSyncHeight\"\r\n\t\t\t},\r\n\t\t\tlink: function (scope, elem, attrs) {\r\n\r\n\t\t\t    var params = \"\";\r\n\t\t\t    if (scope.bridge.params) {\r\n\t\t\t        params = Object.keys(scope.bridge.params).map(function (prop) {\r\n\t\t\t            if (scope.bridge.params[prop] === null || scope.bridge.params[prop] === '')\r\n\t\t\t                return;\r\n\t\t\t            return [prop, scope.bridge.params[prop]].map(encodeURIComponent).join(\"=\");\r\n\t\t\t        }).join(\"&\");\r\n\t\t\t    }\r\n\r\n\t\t\t    elem[0].src = webFormsBridgeUrl + \"&type=\" + scope.type + (scope.bridge.params ? \"&\" + params : \"\");\r\n\t\t\t\telem.on(\"load\", function () {\t\t\t\t\t\r\n\t\t\t\t    var w = elem[0].contentWindow || elem[0];\r\n                    // test if the connectBridge works, if not, it's usually a telerik-not-installed issue\r\n\t\t\t\t    if (!w.connectBridge)\r\n\t\t\t\t        return alert(\"can't connect to the dialog - you are probably running a new DNN (v.8+) and didn't activate the old Telerik components. Please install these in the host > extensions to get this to work\");\r\n\t\t\t\t    \r\n\t\t\t\t\tw.connectBridge(scope.bridge);\r\n\r\n\t\t\t\t\t// Sync height\r\n\t\t\t\t\tif (scope.bridgeSyncHeight === \"true\") {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar resize = function () {\r\n\t\t\t\t\t\t\telem.css(\"height\", \"\");\r\n\t\t\t\t\t\t\telem.css(\"height\", w.document.body.scrollHeight + \"px\");\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t//w.$(w).resize(resize); // Performance issues when uncommenting this line...\r\n\t\t\t\t\t\tresize();\r\n\t\t\t\t\t\tw.$(w.document).ready(function() {\r\n\t\t\t\t\t\t\tresize();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tw.$(w.document).on('triggerbridgeresize', function () {\r\n\t\t\t\t\t\t    window.setTimeout(resize, 0);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t}]);\r\n\r\n})();\n(function() {\r\n    \"use strict\";\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function(formlyConfigProvider) {\r\n\r\n            formlyConfigProvider.setType({\r\n                name: \"entity-content-blocks\",\r\n                templateUrl: \"fields/entity/entity-default.html\",\r\n                wrapper: [\"eavLabel\", \"bootstrapHasError\", \"collapsible\"],\r\n                controller: \"FieldTemplate-EntityContentBlockCtrl\"\r\n            });\r\n        }])\r\n        /*@ngInject*/\r\n        .controller(\"FieldTemplate-EntityContentBlockCtrl\", [\"$controller\", \"$scope\", \"$http\", \"$filter\", \"$translate\", \"$uibModal\", \"appId\", \"eavAdminDialogs\", \"eavDefaultValueService\", function($controller, $scope, $http, $filter, $translate, $uibModal, appId, eavAdminDialogs, eavDefaultValueService) {\r\n            $scope.to.settings.merged.EnableRemove = true;\r\n            $scope.to.settings.merged.AllowMultiValue = true; // for correct UI showing \"remove\"\r\n            $scope.to.settings.merged.EnableAddExisting = false; // disable manual select existing\r\n            $scope.to.settings.merged.EnableCreate = false;         // disable manual create\r\n            $scope.to.settings.merged.EnableEdit = false;\r\n            $scope.to.settings.merged.EntityType = \"ContentGroupReference\";\r\n            $scope.to.enableCollapseField = true;   // ui option to allow collapsing\r\n            $scope.to.collapseField = true;   // ui option to allow collapsing\r\n\r\n\r\n            // use \"inherited\" controller just like described in http://stackoverflow.com/questions/18461263/can-an-angularjs-controller-inherit-from-another-controller-in-the-same-module\r\n            $controller(\"FieldTemplate-EntityCtrl\", { $scope: $scope });\r\n\r\n            // do something with the values...\r\n            var vals = $scope.model[$scope.options.key].Values[0].Value;\r\n\r\n            //addCSSRule(\"div\", \"background-color: pink\");\r\n        }]);\r\n\r\n    function addCSSRule(selector, rules, index) {\r\n        var sheet = document.styleSheets[0];\r\n        if (\"insertRule\" in sheet) {\r\n            sheet.insertRule(selector + \"{\" + rules + \"}\", index);\r\n        }\r\n        else if (\"addRule\" in sheet) {\r\n            sheet.addRule(selector, rules, index);\r\n        }\r\n    }\r\n\r\n})();\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", \"fieldWrappersWithPreview\", function (formlyConfigProvider, fieldWrappersWithPreview) {\r\n\r\n            formlyConfigProvider.setType({\r\n                name: \"hyperlink-default\",\r\n                templateUrl: \"fields/hyperlink/hyperlink-default.html\",\r\n                wrapper: fieldWrappersWithPreview,\r\n                controller: \"FieldTemplate-HyperlinkCtrl as vm\"\r\n            });\r\n        }])\r\n        /*@ngInject*/\r\n        .controller(\"FieldTemplate-HyperlinkCtrl\", [\"$uibModal\", \"$scope\", \"$http\", \"sxc\", \"adamSvc\", \"debugState\", \"dnnBridgeSvc\", \"fileType\", function ($uibModal, $scope, $http, sxc, adamSvc, debugState, dnnBridgeSvc, fileType) {\r\n\r\n            var vm = this;\r\n            vm.debug = debugState;\r\n            vm.testLink = \"\";\r\n\r\n            vm.isImage = function () { return fileType.isImage(vm.testLink); };\r\n            vm.thumbnailUrl = function thumbnailUrl(size, quote) {\r\n                var result = vm.testLink;\r\n                if (size === 1)\r\n                    result = result + \"?w=64&h=64&mode=crop\";\r\n                if (size === 2)\r\n                    result = result + \"?w=500&h=400&mode=max\";\r\n                var qt = quote ? \"\\\"\" : \"\";\r\n                return qt + result + qt;\r\n            };\r\n\r\n            vm.icon = function () { return fileType.getIconClass(vm.testLink); };\r\n            vm.tooltipUrl = function (str) { return str.replace(/\\//g, \"/&#8203;\"); };\r\n            vm.adamModeConfig = {\r\n                usePortalRoot: false\r\n            };\r\n\r\n            function ensureDefaultConfig() {\r\n                var merged = $scope.to.settings.merged;\r\n                if (merged.ShowAdam === undefined || merged.ShowAdam === null) merged.ShowAdam = true;\r\n                if (merged.Buttons === undefined || merged.Buttons === null) merged.Buttons = \"adam,more\";\r\n            }\r\n\r\n            ensureDefaultConfig();\r\n\r\n            // Update test-link if necessary - both when typing or if link was set by dialogs\r\n            $scope.$watch(\"value.Value\", function(newValue, oldValue) {\r\n                if (!newValue)\r\n                    return;\r\n\r\n                // handle short-ID links like file:17\r\n                var promise = dnnBridgeSvc.getUrlOfId(newValue);\r\n                if(promise)\r\n                    promise.then(function (result) {\r\n                        if (result.data) \r\n                            vm.testLink = result.data;\r\n                    });\r\n                else \r\n                    vm.testLink = newValue;\r\n            });\r\n\r\n            //#region dnn-bridge dialogs\r\n\r\n            // the callback when something was selected\r\n            vm.processResultOfDnnBridge = function(value, type) {\r\n                $scope.$apply(function() {\r\n                    if (!value) return;\r\n                    \r\n                    // Convert file path to file ID if type file is specified\r\n                    if (type === \"page\") {\r\n                        $scope.value.Value = \"page:\" + value.id;\r\n                    }\r\n                    if (type === \"file\" || type === \"image\") {\r\n                        dnnBridgeSvc.convertPathToId(value, type)\r\n                            .then(function (result) {\r\n                                $scope.value.Value = (result.data)\r\n                                    ? \"file:\" + result.data.FileId // default case, found number for this\r\n                                    : value; // this happens when it couldn't be resolved, for example on a secure file ticket\r\n                            });\r\n                    }\r\n                });\r\n            };\r\n\r\n            // open the dialog\r\n            vm.openDialog = function (type) {\r\n                dnnBridgeSvc.open(\r\n                    type,\r\n                    $scope.value.Value,\r\n                    {\r\n                        Paths: $scope.to.settings.merged ? $scope.to.settings.merged.Paths : \"\",\r\n                        FileFilter: $scope.to.settings.merged ? $scope.to.settings.merged.FileFilter : \"\"\r\n                    },\r\n                    vm.processResultOfDnnBridge);\r\n            };\r\n\r\n            //#region new adam: callbacks only\r\n            vm.registerAdam = function(adam) {\r\n                vm.adam = adam;\r\n            };\r\n            vm.setValue = function(fileItem) {\r\n                $scope.value.Value = \"File:\" + fileItem.Id;\r\n            };\r\n\r\n            $scope.afterUpload = vm.setValue;   // binding for dropzone\r\n\r\n            vm.toggleAdam = function toggle(usePortalRoot, imagesOnly) {\r\n                vm.adamModeConfig.usePortalRoot = !!usePortalRoot;\r\n                vm.adam.toggle({showImagesOnly: imagesOnly});\r\n            };\r\n\r\n            //#endregion\r\n\r\n\r\n        }]);\r\n\r\n\r\n})();\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", \"defaultFieldWrappersNoFloat\", function (formlyConfigProvider, defaultFieldWrappersNoFloat) {\r\n\r\n            formlyConfigProvider.setType({\r\n                name: \"hyperlink-library\",\r\n                templateUrl: \"fields/hyperlink/hyperlink-library.html\",\r\n                // todo: check if we could use the defaultFieldWrappers instead\r\n                wrapper: defaultFieldWrappersNoFloat,// [\"eavLabel\", \"bootstrapHasError\", \"eavLocalization\", \"collapsible\"],\r\n                controller: \"FieldTemplate-Library as vm\"\r\n            });\r\n\r\n        }])\r\n        /*@ngInject*/\r\n        .controller(\"FieldTemplate-Library\", [\"$uibModal\", \"$scope\", \"$http\", \"sxc\", \"adamSvc\", \"debugState\", function ($uibModal, $scope, $http, sxc, adamSvc, debugState) {\r\n\r\n            var vm = this;\r\n            vm.debug = debugState;\r\n            vm.modalInstance = null;\r\n            vm.testLink = \"\";\r\n\r\n            //#region new adam: callbacks only\r\n            vm.registerAdam = function(adam) {\r\n                vm.adam = adam;\r\n            };\r\n            //vm.setValue = function(url) {\r\n            //    $scope.value.Value = url;\r\n            //};\r\n            $scope.afterUpload = function(fileItem) {};\r\n\r\n            vm.toggleAdam = function toggle() {\r\n                vm.adam.toggle();\r\n            };\r\n\r\n            //#endregion\r\n\r\n\r\n        }]);\r\n\r\n\r\n})();\n/*!\r\nMath.uuid.js (v1.4)\r\nhttp://www.broofa.com\r\nmailto:robert@broofa.com\r\n\r\nCopyright (c) 2010 Robert Kieffer\r\nDual licensed under the MIT and GPL licenses.\r\n*/\r\n\r\n/*\r\n * Generate a random uuid.\r\n *\r\n * USAGE: Math.uuid(length, radix)\r\n *   length - the desired number of characters\r\n *   radix  - the number of allowable values for each character.\r\n *\r\n * EXAMPLES:\r\n *   // No arguments  - returns RFC4122, version 4 ID\r\n *   >>> Math.uuid()\r\n *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\r\n *\r\n *   // One argument - returns ID of the specified length\r\n *   >>> Math.uuid(15)     // 15 character ID (default base=62)\r\n *   \"VcydxgltxrVZSTV\"\r\n *\r\n *   // Two arguments - returns ID of the specified length, and radix. (Radix must be <= 62)\r\n *   >>> Math.uuid(8, 2)  // 8 character ID (base=2)\r\n *   \"01001010\"\r\n *   >>> Math.uuid(8, 10) // 8 character ID (base=10)\r\n *   \"47473046\"\r\n *   >>> Math.uuid(8, 16) // 8 character ID (base=16)\r\n *   \"098F4D35\"\r\n */\r\n(function () {\r\n    // Private array of chars to use\r\n    var CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\r\n\r\n    Math.uuid = function (len, radix) {\r\n        var chars = CHARS, uuid = [], i;\r\n        radix = radix || chars.length;\r\n\r\n        if (len) {\r\n            // Compact form\r\n            for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix];\r\n        } else {\r\n            // rfc4122, version 4 form\r\n            var r;\r\n\r\n            // rfc4122 requires these characters\r\n            uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\r\n            uuid[14] = '4';\r\n\r\n            // Fill in random data.  At i==19 set the high bits of clock sequence as\r\n            // per rfc4122, sec. 4.1.5\r\n            for (i = 0; i < 36; i++) {\r\n                if (!uuid[i]) {\r\n                    r = 0 | Math.random() * 16;\r\n                    uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n                }\r\n            }\r\n        }\r\n\r\n        return uuid.join('');\r\n    };\r\n\r\n    // A more performant, but slightly bulkier, RFC4122v4 solution.  We boost performance\r\n    // by minimizing calls to random()\r\n    Math.uuidFast = function () {\r\n        var chars = CHARS, uuid = new Array(36), rnd = 0, r;\r\n        for (var i = 0; i < 36; i++) {\r\n            if (i == 8 || i == 13 || i == 18 || i == 23) {\r\n                uuid[i] = '-';\r\n            } else if (i == 14) {\r\n                uuid[i] = '4';\r\n            } else {\r\n                if (rnd <= 0x02) rnd = 0x2000000 + (Math.random() * 0x1000000) | 0;\r\n                r = rnd & 0xf;\r\n                rnd = rnd >> 4;\r\n                uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n            }\r\n        }\r\n        return uuid.join('');\r\n    };\r\n\r\n    // A more compact, but less performant, RFC4122v4 solution:\r\n    Math.uuidCompact = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n})();\n/* \r\n * Field: String - font-icon picker\r\n */\r\n\r\nangular.module(\"sxcFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"fieldWrappersWithPreview\", function (formlyConfigProvider, fieldWrappersWithPreview) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"string-font-icon-picker\",\r\n            templateUrl: \"fields/string/string-font-icon-picker.html\",\r\n            wrapper: fieldWrappersWithPreview,\r\n            controller: \"FieldTemplate-String-Font-Icon-Picker as vm\"\r\n        });\r\n\r\n    }])\r\n    /*@ngInject*/\r\n    .controller(\"FieldTemplate-String-Font-Icon-Picker\", [\"$scope\", \"debugState\", \"$ocLazyLoad\", \"appRoot\", function ($scope, debugState, $ocLazyLoad, appRoot) {\r\n        var vm = angular.extend(this, {\r\n            iconFilter: \"\", // used for in-line search\r\n            prefix: \"\", // used to find the right css-classes\r\n            previewPrefix: \"\", // used to preview the icon, in addition to the built-in class\r\n            icons: [], // list of icons, to be filled\r\n            useTestValues: false, // to prefill with test-values, in case needed\r\n            selectorIsOpen: false\r\n    });\r\n\r\n\r\n        //#region icon css-class-methods\r\n        function getIconClasses(className) {\r\n            var charcount = className.length, foundList = [], duplicateDetector = {};\r\n            if (!className) return foundList;\r\n            for (var ssSet = 0; ssSet < document.styleSheets.length; ssSet++) {\r\n                var classes = document.styleSheets[ssSet].rules || document.styleSheets[ssSet].cssRules;\r\n                if(classes)\r\n                    for (var x = 0; x < classes.length; x++)\r\n                        if (classes[x].selectorText && classes[x].selectorText.substring(0, charcount) === className) {\r\n                            // prevent duplicate-add...\r\n                            var txt = classes[x].selectorText,\r\n                                icnClass = txt.substring(0, txt.indexOf(\":\")).replace(\".\", \"\");\r\n                            if (!duplicateDetector[icnClass]) {\r\n                                foundList.push({ rule: classes[x], 'class': icnClass });\r\n                                duplicateDetector[icnClass] = true;\r\n                            }\r\n                        }\r\n            }\r\n            return foundList;\r\n        }\r\n\r\n//#endregion\r\n\r\n        //#region load additional resources\r\n        function loadAdditionalResources(files) {\r\n            files = files || \"\";\r\n            var mapped = files.replace(\"[App:Path]\", appRoot)\r\n                .replace(/([\\w])\\/\\/([\\w])/g,   // match any double // but not if part of https or just \"//\" at the beginning\r\n                \"$1/$2\");\r\n            var fileList = mapped ? mapped.split(\"\\n\") : [];\r\n            return $ocLazyLoad.load(fileList);\r\n        }\r\n        //#endregion\r\n\r\n        vm.setIcon = function(newValue) {\r\n            $scope.value.Value = newValue;\r\n            vm.selectorIsOpen = false;\r\n            //$scope.status.isopen = false;\r\n            $scope.form.$setDirty();\r\n        };\r\n\r\n        vm.activate = function() {\r\n            // get configured\r\n            var controlSettings = $scope.to.settings[\"string-font-icon-picker\"];\r\n            vm.files = (controlSettings) ? controlSettings.Files || \"\" : \"\";\r\n            vm.prefix = (controlSettings) ? controlSettings.CssPrefix || \"\" : \"\";\r\n            vm.previewPrefix = (controlSettings) ? controlSettings.PreviewCss || \"\" : \"\";\r\n\r\n            if (vm.useTestValues)\r\n                angular.extend(vm, {\r\n                    iconFilter: \"\",\r\n                    prefix: \".glyphicon-\",\r\n                    previewPrefix: \"glyphicon\",\r\n                });\r\n\r\n            // load all additional css, THEN load the icons\r\n            loadAdditionalResources(vm.files).then(function() {\r\n                // load the icons\r\n                vm.icons = getIconClasses(vm.prefix);\r\n\r\n            });\r\n\r\n            vm.debug = debugState;\r\n            if (debugState.on) console.log($scope.options.templateOptions);\r\n        };\r\n\r\n        vm.activate();\r\n    }]);\n// This isn't fully nice, but it's the code used by the template picker elements\r\n// it's outsourced here, to ensure that code revisions are clear and api consistent\r\n// because the previous version had the code inside the field-config\r\n// and was highly dependent on the angular/formly API, which changes a bit from time to time\r\n// this makes it easier to keep it in sync\r\n\r\n// I'll have to think of a better way to provide/inject this in the future...\r\n\r\n// must find out if we're in App or Content before we do more...\r\n\r\n(function () {\r\n    var cs = {\r\n        init: function(context) {\r\n            cs.context = context;\r\n\r\n            // get angular injector to get a service\r\n            var inj = context.$injector;\r\n\r\n            var appDialogConfigSvc = inj.get(\"appDialogConfigSvc\");\r\n\r\n            appDialogConfigSvc.getDialogSettings().then(function(result) {\r\n                var config = result.data;\r\n                // if this is a content-app, disable two fields\r\n                if (config.IsContent) {\r\n                    //disable current field\r\n                    context.formVm.formFields[context.field.SortOrder].templateOptions.disabled = true;\r\n                    // do the same for the data-field (field 20)\r\n                    context.formVm.formFields[20].templateOptions.disabled = true;\r\n                }\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    window[\"2sxc-template-picker-custom-script-for-name-field\"] = cs;\r\n})();\n/* \r\n * Field: String - Dropdown\r\n */\r\n\r\nangular.module(\"sxcFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function(formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"string-template-picker\",\r\n            templateUrl: \"fields/string/string-template-picker.html\",\r\n            wrapper: defaultFieldWrappers,\r\n            controller: \"FieldTemplate-String-TemplatePicker\"\r\n        });\r\n\r\n    }])\r\n    /*@ngInject*/\r\n    .controller(\"FieldTemplate-String-TemplatePicker\", [\"$scope\", \"appAssetsSvc\", \"appId\", \"fieldMask\", function ($scope, appAssetsSvc, appId, fieldMask) {\r\n\r\n        function activate() {\r\n            // ensure settings are merged\r\n            if (!$scope.to.settings.merged)\r\n                $scope.to.settings.merged = {};\r\n\r\n            $scope.setFileConfig(\"Token\"); // use token setting as default, till the UI tells us otherwise\r\n\r\n            // clean up existing paths, because some used \"/\" and some \"\\\" for paths, so it wouldn't match in the drop-down\r\n            if ($scope.options && $scope.options.value())\r\n                angular.forEach($scope.options.value().Values, function(v, i) {\r\n                    v.Value = v.Value.replace(\"\\\\\", \"/\");\r\n                });\r\n            \r\n\r\n            // set change-watchers to the other values\r\n            $scope.typeWatcher = fieldMask(\"[Type]\", $scope, $scope.setFileConfig);\r\n            $scope.locWatcher = fieldMask(\"[Location]\", $scope, $scope.onLocationChange);\r\n\r\n            // create initial list for binding\r\n            $scope.templates = [];\r\n\r\n            $scope.svcApp = appAssetsSvc(appId, false);\r\n            $scope.svcGlobal = appAssetsSvc(appId, true);\r\n\r\n            $scope.onLocationChange(); // set initial file list\r\n            //$scope.templates = $scope.svcApp.liveList();\r\n        }\r\n\r\n        $scope.readyToUse = function() {\r\n            return $scope.typeWatcher.value && $scope.locWatcher.value; // check if these have real values inside\r\n        };\r\n\r\n        $scope.setFileConfig = function (type) {\r\n            var specs = {\r\n                \"Token\": { ext: \".html\", prefix: \"\", suggestion: \"yourfile.html\", body: \"<p>You successfully created your own template. Start editing it by hovering the \\\"Manage\\\" button and opening the \\\"Edit Template\\\" dialog.</p>\" },\r\n                \"C# Razor\": { ext: \".cshtml\", prefix: \"_\", suggestion: \"_yourfile.cshtml\", body: \"<p>You successfully created your own template. Start editing it by hovering the \\\"Manage\\\" button and opening the \\\"Edit Template\\\" dialog.</p>\" }\r\n            };\r\n            $scope.file = specs[type];\r\n\r\n        };\r\n\r\n        // when the watcher says the location changed, reset stuff\r\n        $scope.onLocationChange = function(loc) {\r\n            $scope.svcCurrent = (loc === \"Host File System\") \r\n                ? $scope.svcGlobal\r\n                : $scope.svcApp;\r\n\r\n            $scope.templates = $scope.svcCurrent.liveList();\r\n        };\r\n\r\n        // ask for a new file name and \r\n        $scope.add = function() {\r\n            var fileName = prompt(\"enter new file name\", $scope.file.suggestion); // todo: i18n\r\n\r\n            if (!fileName)\r\n                return;\r\n\r\n            // 1. check for folders\r\n            var path = \"\";\r\n            fileName = fileName.replace(\"\\\\\", \"/\");\r\n            var foundSlash = fileName.lastIndexOf(\"/\");\r\n            if (foundSlash > -1) {\r\n                path = fileName.substring(0, foundSlash + 1); // path with slash\r\n                fileName = fileName.substring(foundSlash + 1);\r\n            }\r\n\r\n            // 2. check if extension already provided, otherwise or if not perfect, just attach default\r\n            if (!fileName.endsWith($scope.file.ext))// fileName.indexOf($scope.fileExt) !== fileName.length - $scope.fileExt.length)\r\n                fileName += $scope.file.ext;\r\n\r\n            // 3. check if cshtmls have a \"_\" in the file name (not folder, must be the file name part)\r\n            if ($scope.file.prefix !== \"\" && fileName[0] !== $scope.file.prefix)\r\n                fileName = $scope.file.prefix + fileName;\r\n\r\n            var fullPath = path + fileName;\r\n            console.log(fullPath);\r\n\r\n            // 4. tell service to create it\r\n            $scope.svcCurrent.create(fullPath, $scope.file.body)\r\n                .then(function() {\r\n                    $scope.value.Value = fullPath; // set the dropdown to the new file\r\n                });\r\n        };\r\n\r\n        activate();\r\n\r\n    }])\r\n\r\n    // filter to only show files which are applicable to this\r\n    .filter(\"isValidFile\", function() {\r\n\r\n        // Create the return function\r\n        // set the required parameter name to **number**\r\n        return function(paths, ext) {\r\n            var out = [];\r\n            angular.forEach(paths, function(path) {\r\n                if (path.slice(path.length - ext.length) === ext)\r\n                    out.push(path);\r\n            });\r\n            return out;\r\n        };\r\n    });\r\n\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\t/* This app registers all field templates for 2sxc in the angularjs sxcFieldTemplates app */\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function(formlyConfigProvider) {\r\n\r\n            // for now identical with -adv, but later will change\r\n            formlyConfigProvider.setType({\r\n                name: \"string-wysiwyg-adv\",\r\n                templateUrl: \"fields/string/string-wysiwyg-adv.html\",\r\n                // todo: check if we could use the defaultFieldWrappers instead\r\n                wrapper: [\"eavLabel\", \"bootstrapHasError\", \"eavLocalization\", \"collapsible\"]\r\n            });\r\n\r\n\r\n        }]);\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\t/* This app registers all field templates for 2sxc in the angularjs sxcFieldTemplates app */\r\n\r\n\tangular.module(\"sxcFieldTemplates\")\r\n\r\n    .config([\"formlyConfigProvider\", function (formlyConfigProvider) {\r\n\r\n        // for now identical with -adv, but later will change\r\n\t\tformlyConfigProvider.setType({\r\n\t\t\tname: \"string-wysiwyg-dnn\",\r\n\t\t\ttemplateUrl: \"fields/string/string-wysiwyg-dnn.html\",\r\n\t\t    // todo: check if we could use the defaultFieldWrappers instead\r\n\t\t\twrapper: [\"eavLabel\", \"bootstrapHasError\", \"eavLocalization\", \"collapsible\"],\r\n\t\t\tcontroller: \"FieldTemplate-WysiwygCtrl as vm\"\r\n\t\t});\r\n\r\n        \r\n\t}])\r\n\r\n\r\n    /*@ngInject*/\r\n\t.controller(\"FieldTemplate-WysiwygCtrl\", [\"$scope\", function ($scope) {\r\n\r\n\t\tvar vm = this;\r\n\r\n\t\t// Everything the WebForms bridge (iFrame) should have access to\r\n\t\tvm.bridge = {\r\n\t\t    initialValue: \"\",\r\n            initialReadOnly: false,\r\n\t\t    onChanged: function (newValue) {\r\n\t\t\t\t$scope.$apply(function () {\r\n\t\t\t\t\t$scope.value.Value = newValue;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tsetValue: function (value) { vm.bridge.initialValue = value; },\r\n\t\t\tsetReadOnly: function(readOnly) { vm.bridge.initialReadOnly = readOnly; }\r\n\t\t};\r\n\r\n\t\t$scope.$watch(\"value.Value\", function (newValue, oldValue) {\r\n\t\t\tif (newValue !== oldValue)\r\n\t\t\t\tvm.bridge.setValue(newValue);\r\n\t\t});\r\n\r\n\t\t$scope.$watch(\"to.disabled\", function (newValue, oldValue) {\r\n\t\t\tif (newValue !== oldValue)\r\n\t\t\t\tvm.bridge.setReadOnly(newValue);\r\n\t\t});\r\n\r\n\t}]);\r\n\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n    // Register in Angular Formly\r\n    FieldWysiwygTinyMceController.$inject = [\"$scope\", \"languages\", \"tinyMceHelpers\", \"tinyMceToolbars\", \"tinyMceConfig\", \"tinyMceAdam\", \"tinyMceDnnBridge\"];\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n            formlyConfigProvider.setType({\r\n                name: \"string-wysiwyg-tinymce\",\r\n                templateUrl: \"fields/string/string-wysiwyg-tinymce.html\",\r\n                wrapper: defaultFieldWrappers, \r\n                controller: \"FieldWysiwygTinyMce as vm\"\r\n            });\r\n        }])\r\n\r\n        .controller(\"FieldWysiwygTinyMce\", FieldWysiwygTinyMceController);\r\n\r\n    /*@ngInject*/\r\n    function FieldWysiwygTinyMceController($scope, languages, tinyMceHelpers, tinyMceToolbars, tinyMceConfig, tinyMceAdam, tinyMceDnnBridge) {\r\n        var vm = this;\r\n        vm.enableContentBlocks = true;\r\n\r\n        var settings = {\r\n            enableContentBlocks : false\r\n        };\r\n\r\n        vm.adamModeConfig = {\r\n            usePortalRoot: false\r\n        };\r\n\r\n        vm.activate = function () {\r\n\r\n            enableContentBlocksIfPossible(settings);\r\n\r\n            // initialize options and wire-up init-callback\r\n            $scope.tinymceOptions = angular.extend(tinyMceConfig.getDefaultOptions(settings), {\r\n                setup: tinyMceInitCallback\r\n            });\r\n\r\n            // add ADAM definition, so that the callback will be able to link up to this\r\n            tinyMceAdam.attachAdam(vm, $scope);\r\n\r\n            // add DNN Bridge, needed for webforms dnn-dialogs\r\n            tinyMceDnnBridge.attach(vm, $scope);\r\n\r\n            // check if it's an additionally translated language and load the translations\r\n            var lang2 = /* \"de\" */ languages.currentLanguage.substr(0, 2);\r\n            if (tinyMceConfig.languages.indexOf(lang2) >= 0)\r\n                angular.extend($scope.tinymceOptions, {\r\n                    language: lang2,\r\n                    language_url: \"../i18n/lib/tinymce/\" + lang2 + \".js\"\r\n                });\r\n\r\n            watchDisabled($scope);\r\n        };\r\n        vm.activate();\r\n\r\n        // callback event which tinyMce will execute when it's built the editor\r\n        function tinyMceInitCallback(editor) {\r\n            vm.editor = editor;\r\n            if ($scope.tinymceOptions.language)\r\n                tinyMceHelpers.addTranslations(editor, $scope.tinymceOptions.language);\r\n\r\n            tinyMceToolbars.addButtons(vm);\r\n            tinyMceAdam.addButtons(vm);\r\n\r\n            enableContentBlocksIfPossible(editor);\r\n        }\r\n\r\n        function watchDisabled(ngscope) {\r\n            // Monitor for changes on Disabled\r\n            ngscope.$watch(\"to.disabled\", function(newValue, oldValue) {\r\n                if (newValue !== oldValue && vm.editor !== null) {\r\n                    ngscope.tinymceOptions.readonly = newValue;\r\n                    ngscope.$broadcast(\"$tinymce:refresh\"); // Refresh tinymce instance to pick-up new readonly value\r\n                }\r\n            });\r\n        }\r\n\r\n        function enableContentBlocksIfPossible(settings) {\r\n            // quit if there are no following fields\r\n            if ($scope.fields.length === $scope.index + 1)\r\n                return;\r\n\r\n            var nextField = $scope.fields[$scope.index + 1];\r\n            if (nextField.type === \"entity-content-blocks\")\r\n                settings.enableContentBlocks = true;\r\n        }\r\n    }\r\n\r\n\r\n\r\n})();\r\n\r\n\r\n\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceAdam\", function () {\r\n        return {\r\n            attachAdam: attachAdam,\r\n            addButtons: addAdamButtons\r\n        };\r\n\r\n        function attachAdam(vm, $scope) {\r\n            vm.registerAdam = function (adam) {\r\n                vm.adam = adam;\r\n            };\r\n\r\n            vm.setValue = function (fileItem, modeImage) {\r\n                if (modeImage === undefined)        // if not supplied, use the setting in the adam\r\n                    modeImage = vm.adamModeImage;\r\n                vm.editor.insertContent(modeImage\r\n                    ? \"<img src=\\\"\" + fileItem.fullPath + \"\\\">\"\r\n                    : \"<a href=\\\"\" + fileItem.fullPath + \"\\\">\" + fileItem.Name.substr(0, fileItem.Name.lastIndexOf(\".\")) + \"</a>\");\r\n            };\r\n\r\n            // this is the event called by dropzone as something is dropped\r\n            $scope.afterUpload = function (fileItem) {\r\n                vm.setValue(fileItem, fileItem.Type === \"image\");\r\n            };\r\n\r\n            vm.toggleAdam = function toggle(imagesOnly, usePortalRoot) {\r\n                vm.adamModeImage = imagesOnly;\r\n                vm.adamModeConfig.usePortalRoot = !!usePortalRoot;\r\n                vm.adam.toggle({ showImagesOnly: imagesOnly });\r\n                $scope.$apply();\r\n            };\r\n        }\r\n\r\n        function addAdamButtons(vm) {\r\n            var e = vm.editor;\r\n            // group with adam-link, dnn-link\r\n            e.addButton(\"linkfiles\", {\r\n                type: \"splitbutton\",\r\n                icon: \" eav-icon-file-pdf\",\r\n                title: \"Link.AdamFile.Tooltip\",\r\n                onclick: function () {\r\n                    vm.toggleAdam(false);\r\n                },\r\n                menu: [\r\n                    {\r\n                        text: \"Link.AdamFile\",\r\n                        tooltip: \"Link.AdamFile.Tooltip\",\r\n                        icon: \" eav-icon-file-pdf\",\r\n                        onclick: function () {\r\n                            vm.toggleAdam(false, false);\r\n                        }\r\n                    }, {\r\n                        text: \"Link.DnnFile\",\r\n                        tooltip: \"Link.DnnFile.Tooltip\",\r\n                        icon: \" eav-icon-file\",\r\n                        onclick: function () {\r\n                            vm.toggleAdam(false, true);\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n\r\n            // group with images (adam) - only in PRO mode\r\n            e.addButton(\"images\", {\r\n                type: \"splitbutton\",\r\n                text: \"\",\r\n                icon: \"image\",\r\n                onclick: function () {\r\n                    vm.toggleAdam(true);\r\n                },\r\n                menu: [\r\n                    {\r\n                        text: \"Image.AdamImage\",\r\n                        tooltip: \"Image.AdamImage.Tooltip\",\r\n                        icon: \"image\",\r\n                        onclick: function () { vm.toggleAdam(true); }\r\n                    }, {\r\n                        text: \"Image.DnnImage\",\r\n                        tooltip: \"Image.DnnImage.Tooltip\",\r\n                        icon: \"image\",\r\n                        onclick: function () { vm.toggleAdam(true, true); }\r\n                    }, {\r\n                        text: \"Insert\\/edit image\", // i18n tinyMce standard\r\n                        icon: \"image\",\r\n                        onclick: function () { e.execCommand(\"mceImage\"); }\r\n\r\n                    },\r\n                    // note: all these use i18n from tinyMce standard\r\n                    { icon: \"alignleft\", tooltip: \"Align left\", onclick: function () { e.execCommand(\"JustifyLeft\"); } },\r\n                    { icon: \"aligncenter\", tooltip: \"Align center\", onclick: function () { e.execCommand(\"JustifyCenter\"); } },\r\n                    { icon: \"alignright\", tooltip: \"Align right\", onclick: function () { e.execCommand(\"JustifyRight\"); } }\r\n                ]\r\n            });\r\n\r\n        }\r\n    });\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceConfig\", [\"beta\", function (beta) {\r\n        var svc = {\r\n            // cdn root\r\n            cdnRoot: \"//cdn.tinymce.com/4\",\r\n            // these are the sizes we can auto-resize to\r\n            imgSizes: [100, 75, 70, 66, 60, 50, 40, 33, 30, 25, 10],\r\n\r\n            // the default language, in which we have all labels/translations\r\n            defaultLanguage: \"en\",\r\n\r\n            // all other languages\r\n            languages: \"de,es,fr,it,uk,nl\".split(\",\"),\r\n\r\n            // tinyMCE plugins we're using\r\n            plugins: [\r\n                \"code\", // allow view / edit source\r\n                \"contextmenu\", // right-click menu for things like insert, etc.\r\n                \"autolink\", // automatically convert www.xxx links to real links\r\n                \"tabfocus\", // get in an out of the editor with tab\r\n                \"image\", // image button and image-settings\r\n                \"link\", // link button + ctrl+k to add link\r\n                // \"autosave\",     // temp-backups the content in case the browser crashes, allows restore\r\n                \"paste\", // enables paste as text from word etc. https://www.tinymce.com/docs/plugins/paste/\r\n                \"anchor\", // allows users to set an anchor inside the text\r\n                \"charmap\", // character map https://www.tinymce.com/docs/plugins/visualchars/\r\n                \"hr\", // hr\r\n                \"media\", // video embed\r\n                \"nonbreaking\", // add button to insert &nbsp; https://www.tinymce.com/docs/plugins/nonbreaking/\r\n                \"searchreplace\", // search/replace https://www.tinymce.com/docs/plugins/searchreplace/\r\n                \"table\", // https://www.tinymce.com/docs/plugins/searchreplace/\r\n                \"lists\", // should fix bug with fonts in list-items (https://github.com/tinymce/tinymce/issues/2330),\r\n                \"textpattern\" // enable typing like \"1. text\" to create lists etc.\r\n            ],\r\n            \r\n            validateAlso: '@[class]' // allow classes on all elements, \r\n                    + ',i' // allow i elements (allows icon-font tags like <i class=\"fa fa-...\">)\r\n                    + \",hr[sxc|guid]\" // experimental: allow inline content-blocks\r\n        };\r\n\r\n        function buildModes(settings) {\r\n            // the WYSIWYG-modes we offer, standard with simple toolbar and advanced with much more\r\n            modes = {\r\n                standard: {\r\n                    menubar: false,\r\n                    toolbar: \" undo redo removeformat \"\r\n                        + \"| bold formatgroup \"\r\n                        + \"| h1 h2 hgroup \"\r\n                        + \"| listgroup \"\r\n                        + \"| linkfiles linkgroup \"\r\n                        + \"| \" + (settings.enableContentBlocks ? \" addcontentblock \" : \"\")+ \"modeadvanced \",\r\n                    contextmenu: \"charmap hr\" + (settings.enableContentBlocks ? \" addcontentblock\" : \"\")\r\n                },\r\n                advanced: {\r\n                    menubar: true,\r\n                    toolbar: \" undo redo removeformat \"\r\n                        + \"| styleselect \"\r\n                        + \"| bold italic \"\r\n                        + \"| h1 h2 hgroup \"\r\n                        + \"| bullist numlist outdent indent \"\r\n                        + \"| images linkfiles linkgrouppro \"\r\n                        + \"| code modestandard \",\r\n                    contextmenu: \"link image | charmap hr adamimage\"\r\n                }\r\n            };\r\n            return modes;\r\n        }\r\n\r\n        svc.getDefaultOptions = function (settings) {\r\n            var modes = buildModes(settings);\r\n            return {\r\n                baseURL: svc.cdnRoot,\r\n                inline: true, // use the div, not an iframe\r\n                automatic_uploads: false, // we're using our own upload mechanism\r\n                modes: modes, // for later switch to another mode\r\n                menubar: modes.standard.menubar, // basic menu (none)\r\n                toolbar: modes.standard.toolbar, // basic toolbar\r\n                plugins: svc.plugins.join(\" \"),\r\n                contextmenu: modes.standard.contextmenu, //\"link image | charmap hr adamimage\",\r\n                autosave_ask_before_unload: false,\r\n                paste_as_text: true,\r\n                extended_valid_elements: svc.validateAlso,\r\n                //'@[class]' // allow classes on all elements, \r\n                //+ ',i' // allow i elements (allows icon-font tags like <i class=\"fa fa-...\">)\r\n                //+ \",hr[sxc|guid]\", // experimental: allow inline content-blocks\r\n                custom_elements: \"hr\",\r\n\r\n                // Url Rewriting in images and pages\r\n                //convert_urls: false,  // don't use this, would keep the domain which is often a test-domain\r\n                relative_urls: false, // keep urls with full path so starting with a \"/\" - otherwise it would rewrite them to a \"../../..\" syntax\r\n                default_link_target: \"_blank\", // auto-use blank as default link-target\r\n                object_resizing: false, // don't allow manual scaling of images\r\n\r\n                // General looks\r\n                skin: \"lightgray\",\r\n                theme: \"modern\",\r\n                // statusbar: true,    // doesn't work in inline :(\r\n\r\n                language: svc.defaultLanguage,\r\n\r\n                debounce: false // DONT slow-down model updates - otherwise we sometimes miss the last changes\r\n            };\r\n        };\r\n\r\n        return svc;\r\n    }]);\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceDnnBridge\", [\"dnnBridgeSvc\", function (dnnBridgeSvc) {\r\n        return {\r\n            attach: attach\r\n        };\r\n\r\n        function attach(vm, $scope) {\r\n            // open the dialog - note: strong dependency on the buttons, not perfect here\r\n            vm.openDnnDialog = function (type) {\r\n                dnnBridgeSvc.open(type, \"\", { Paths: null, FileFilter: null }, vm.processResultOfDnnBridge);\r\n            };\r\n\r\n            // the callback when something was selected\r\n            vm.processResultOfDnnBridge = function (value, type) {\r\n                $scope.$apply(function () {\r\n                    if (!value) return;\r\n\r\n                    var previouslySelected = vm.editor.selection.getContent();\r\n\r\n                    // case page - must first convert id to real path\r\n                    if (type === \"page\") {\r\n                        var promise = dnnBridgeSvc.getUrlOfId(type + \":\" + (value.id || value.FileId)); // id on page, FileId on file\r\n                        return promise.then(function (result) {\r\n                            vm.editor.insertContent(\"<a href=\\\"\" + result.data + \"\\\">\" + (previouslySelected || value.name) + \"</a>\");\r\n                        });\r\n                    }\r\n\r\n                    // not page - then I have a real path, use that\r\n                    if (type === \"file\") {\r\n                        var fileName = value.substr(value.lastIndexOf(\"/\") + 1);\r\n                        fileName = fileName.substr(0, fileName.lastIndexOf(\".\"));\r\n                        vm.editor.insertContent(\"<a href=\\\"\" + value + \"\\\">\" + (previouslySelected || fileName) + \"</a>\");\r\n                    } else if (type === \"image\") {\r\n                        vm.editor.insertContent(\"<img src=\\\"\" + value + \"\\\">\");\r\n                    }\r\n\r\n                });\r\n            };\r\n\r\n        }\r\n\r\n    }]);\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceHelpers\", [\"$translate\", \"tinyMceConfig\", function ($translate, tinyMceConfig) {\r\n        var svc = {\r\n            addTranslations: initLangResources\r\n        };\r\n\r\n        // Initialize the tinymce resources which we translate ourselves\r\n        function initLangResources(editor, language) {\r\n            var primaryLan = tinyMceConfig.defaultLanguage;\r\n            var keys = [], mceTranslations = {}, prefix = \"Extension.TinyMce.\", pLen = prefix.length;\r\n\r\n            // find all relevant keys by querying the primary language\r\n            var all = $translate.getTranslationTable(primaryLan);\r\n            // ReSharper disable once MissingHasOwnPropertyInForeach\r\n            for (var key in all)\r\n                if (key.indexOf(prefix) === 0)\r\n                    keys.push(key);\r\n\r\n            var translations = $translate.instant(keys);\r\n\r\n            for (var k = 0; k < keys.length; k++)\r\n                mceTranslations[keys[k].substring(pLen)] = translations[keys[k]];\r\n            tinymce.addI18n(language, mceTranslations);\r\n        }\r\n        return svc;\r\n    }]);\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceToolbars\", [\"tinyMceConfig\", function (tinyMceConfig) {\r\n        var svc = {\r\n            addButtons: addTinyMceToolbarButtons\r\n        };\r\n\r\n        function addTinyMceToolbarButtons(vm) {\r\n            var editor = vm.editor;\r\n            //#region helpers like initOnPostRender(name)\r\n\r\n            // helper function to add activate/deactivate to buttons like alignleft, alignright etc.\r\n            function initOnPostRender(name) { // copied/modified from https://github.com/tinymce/tinymce/blob/ddfa0366fc700334f67b2c57f8c6e290abf0b222/js/tinymce/classes/ui/FormatControls.js#L232-L249\r\n                return function () {\r\n                    var self = this; // keep ref to the current button?\r\n\r\n                    function watchChange() {\r\n                        editor.formatter.formatChanged(name, function (state) {\r\n                            self.active(state);\r\n                        });\r\n                    }\r\n\r\n                    if (editor.formatter)\r\n                        watchChange();\r\n                    else\r\n                        editor.on(\"init\", watchChange());\r\n                };\r\n            }\r\n\r\n            //#endregion\r\n\r\n            //#region register formats\r\n\r\n            // the method that will register all formats - like img-sizes\r\n            function registerTinyMceFormats(editor, vm) {\r\n                var imgformats = {};\r\n                for (var is = 0; is < tinyMceConfig.imgSizes.length; is++)\r\n                    imgformats[\"imgwidth\" + tinyMceConfig.imgSizes[is]] = [{ selector: \"img\", collapsed: false, styles: { 'width': tinyMceConfig.imgSizes[is] + \"%\" } }];\r\n                editor.formatter.register(imgformats);\r\n            }\r\n\r\n            // call register once the editor-object is ready\r\n            editor.on('init', function () {\r\n                registerTinyMceFormats(editor, vm);\r\n            });\r\n\r\n            //#endregion\r\n\r\n            //// group with adam-link, dnn-link\r\n            //editor.addButton(\"linkfiles\", {\r\n            //    type: \"splitbutton\",\r\n            //    icon: \" eav-icon-file-pdf\",\r\n            //    title: \"Link.AdamFile.Tooltip\",\r\n            //    onclick: function () {\r\n            //        vm.toggleAdam(false);\r\n            //    },\r\n            //    menu: [\r\n            //        {\r\n            //            text: \"Link.AdamFile\",\r\n            //            tooltip: \"Link.AdamFile.Tooltip\",\r\n            //            icon: \" eav-icon-file-pdf\",\r\n            //            onclick: function () {\r\n            //                vm.toggleAdam(false);\r\n            //            }\r\n            //        }, {\r\n            //            text: \"Link.DnnFile\",\r\n            //            tooltip: \"Link.DnnFile.Tooltip\",\r\n            //            icon: \" eav-icon-file\",\r\n            //            onclick: function () {\r\n            //                vm.openDnnDialog(\"documentmanager\");\r\n            //            }\r\n            //        }\r\n            //    ]\r\n            //});\r\n\r\n            //#region link group with web-link, page-link, unlink, anchor\r\n            var linkgroup = {\r\n                type: \"splitbutton\",\r\n                icon: \"link\",\r\n                title: \"Link\",\r\n                onPostRender: initOnPostRender(\"link\"),\r\n                onclick: function () {\r\n                    editor.execCommand(\"mceLink\");\r\n                },\r\n\r\n                menu: [\r\n                { icon: \"link\", text: \"Link\", onclick: function () { editor.execCommand(\"mceLink\"); } },\r\n                {\r\n                    text: \"Link.Page\",\r\n                    tooltip: \"Link.Page.Tooltip\",\r\n                    icon: \" eav-icon-sitemap\",\r\n                    onclick: function () {\r\n                        vm.openDnnDialog(\"pagepicker\");\r\n                    }\r\n                }\r\n                ]\r\n            };\r\n            var linkgroupPro = angular.copy(linkgroup);\r\n            linkgroupPro.menu.push({ icon: \" eav-icon-anchor\", text: \"Anchor\", tooltip: \"Link.Anchor.Tooltip\", onclick: function () { editor.execCommand(\"mceAnchor\"); } });\r\n            editor.addButton(\"linkgroup\", linkgroup);\r\n            editor.addButton(\"linkgrouppro\", linkgroupPro);\r\n            //#endregion\r\n\r\n            // group with images (adam) - only in PRO mode\r\n            editor.addButton(\"images\", {\r\n                type: \"splitbutton\",\r\n                text: \"\",\r\n                icon: \"image\",\r\n                onclick: function () {\r\n                    vm.toggleAdam(true);\r\n                },\r\n                menu: [\r\n                    {\r\n                        text: \"Image.AdamImage\",\r\n                        tooltip: \"Image.AdamImage.Tooltip\",\r\n                        icon: \"image\",\r\n                        onclick: function () { vm.toggleAdam(true); }\r\n                    }, {\r\n                        text: \"Image.DnnImage\",\r\n                        tooltip: \"Image.DnnImage.Tooltip\",\r\n                        icon: \"image\",\r\n                        onclick: function () { vm.toggleAdam(true, true); }\r\n                    }, {\r\n                        text: \"Insert\\/edit image\", // i18n tinyMce standard\r\n                        icon: \"image\",\r\n                        onclick: function () { editor.execCommand(\"mceImage\"); }\r\n\r\n                    },\r\n                    // note: all these use i18n from tinyMce standard\r\n                    { icon: \"alignleft\", tooltip: \"Align left\", onclick: function () { editor.execCommand(\"JustifyLeft\"); } },\r\n                    { icon: \"aligncenter\", tooltip: \"Align center\", onclick: function () { editor.execCommand(\"JustifyCenter\"); } },\r\n                    { icon: \"alignright\", tooltip: \"Align right\", onclick: function () { editor.execCommand(\"JustifyRight\"); } }\r\n                ]\r\n            });\r\n\r\n            // drop-down with italic, strikethrough, ...\r\n            editor.addButton(\"formatgroup\", {\r\n                type: \"splitbutton\",\r\n                tooltip: \"Italic\",  // will be autotranslated\r\n                text: \"\",\r\n                icon: \"italic\",\r\n                cmd: \"italic\",\r\n                onPostRender: initOnPostRender(\"italic\"),\r\n                menu: [\r\n                    { icon: \"strikethrough\", text: \"Strikethrough\", onclick: function () { editor.execCommand(\"strikethrough\"); } },\r\n                    { icon: \"superscript\", text: \"Superscript\", onclick: function () { editor.execCommand(\"superscript\"); } },\r\n                    { icon: \"subscript\", text: \"Subscript\", onclick: function () { editor.execCommand(\"subscript\"); } }\r\n                ]\r\n\r\n            });\r\n\r\n            // drop-down with italic, strikethrough, ...\r\n            editor.addButton(\"listgroup\", {\r\n                type: \"splitbutton\",\r\n                tooltip: \"Numbered list\",  // official tinymce key\r\n                text: \"\",\r\n                icon: \"numlist\",\r\n                cmd: \"InsertOrderedList\",\r\n                onPostRender: initOnPostRender(\"numlist\"),  // for unknown reasons, this just doesn't activate correctly :( - neither does the bullist\r\n                menu: [\r\n                    { icon: \"bullist\", text: \"Bullet list\", onPostRender: initOnPostRender(\"bullist\"), onclick: function () { editor.execCommand(\"InsertUnorderedList\"); } },\r\n                    { icon: \"outdent\", text: \"Outdent\", onclick: function () { editor.execCommand(\"Outdent\"); } },\r\n                    { icon: \"indent\", text: \"Indent\", onclick: function () { editor.execCommand(\"Indent\"); } }\r\n                ]\r\n\r\n            });\r\n\r\n            //#region mode switching and the buttons for it\r\n            function switchModes(mode) {\r\n                editor.settings.toolbar = editor.settings.modes[mode].toolbar;\r\n                editor.settings.menubar = editor.settings.modes[mode].menubar;\r\n                // editor.settings.contextmenu = editor.settings.modes[mode].contextmenu; - doesn't work at the moment\r\n\r\n                editor.theme.panel.remove();    // kill current toolbar\r\n                editor.theme.renderUI(editor);\r\n                editor.execCommand(\"mceFocus\");\r\n\r\n                // focus away...\r\n                document.getElementById(\"dummyfocus\").focus();\r\n\r\n                // ...and focus back a bit later\r\n                setTimeout(function () {\r\n                    editor.focus();\r\n                }, 100);\r\n            }\r\n\r\n            editor.addButton(\"modestandard\", {\r\n                icon: \" eav-icon-cancel\",\r\n                tooltip: \"SwitchMode.Standard\",\r\n                onclick: function () { switchModes(\"standard\"); }\r\n            });\r\n\r\n            editor.addButton(\"modeadvanced\", {\r\n                icon: \" eav-icon-pro\",\r\n                tooltip: \"SwitchMode.Pro\",\r\n                onclick: function () { switchModes(\"advanced\"); }\r\n            });\r\n            //#endregion\r\n\r\n            //#region h1, h2, etc. buttons, inspired by http://blog.ionelmc.ro/2013/10/17/tinymce-formatting-toolbar-buttons/\r\n            // note that the complex array is needede because auto-translate only happens if the string is identical\r\n            [[\"pre\", \"Preformatted\", \"Preformatted\"],\r\n                [\"p\", \"Paragraph\", \"Paragraph\"],\r\n                [\"code\", \"Code\", \"Code\"],\r\n                [\"h1\", \"Heading 1\", \"H1\"],\r\n                [\"h2\", \"Heading 2\", \"H2\"],\r\n                [\"h3\", \"Heading 3\", \"H3\"],\r\n                [\"h4\", \"Heading 4\", \"Heading 4\"],\r\n                [\"h5\", \"Heading 5\", \"Heading 5\"],\r\n                [\"h6\", \"Heading 6\", \"Heading 6\"]].forEach(function (tag) {\r\n                    editor.addButton(tag[0], {\r\n                        tooltip: tag[1],\r\n                        text: tag[2],\r\n                        onclick: function () { editor.execCommand(\"mceToggleFormat\", false, tag[0]); },\r\n                        onPostRender: function () {\r\n                            var self = this,\r\n                                setup = function () {\r\n                                    editor.formatter.formatChanged(tag[0], function (state) {\r\n                                        self.active(state);\r\n                                    });\r\n                                };\r\n                            var x = editor.formatter ? setup() : editor.on(\"init\", setup);\r\n                        }\r\n                    });\r\n                });\r\n\r\n            // group of buttons with an h3 to start and showing h4-6 + p\r\n            editor.addButton(\"hgroup\", angular.extend({}, editor.buttons.h3,\r\n            {\r\n                type: \"splitbutton\",\r\n                menu: [\r\n                    editor.buttons.h4,\r\n                    editor.buttons.h5,\r\n                    editor.buttons.h6,\r\n                    editor.buttons.p\r\n                ]\r\n            }));\r\n            //#endregion\r\n\r\n            // #region inside content\r\n            editor.addButton(\"addcontentblock\", {\r\n                icon: \" eav-icon-content-block\",\r\n                classes: \"btn-addcontentblock\",\r\n                tooltip: \"ContentBlock.Add\",\r\n                onclick: function() {\r\n                    var guid = Math.uuid().toLowerCase(); // requires the uuid-generator to be included\r\n                    \r\n                    vm.editor.insertContent(\"<hr sxc=\\\"sxc-content-block\\\" guid=\\\"\" + guid + \"\\\" />\");\r\n                }\r\n            });\r\n            // #endregion\r\n\r\n            //#region image alignment / size buttons\r\n            editor.addButton(\"alignimgleft\", { icon: \" eav-icon-align-left\", tooltip: \"Align left\", cmd: \"JustifyLeft\", onPostRender: initOnPostRender(\"alignleft\") });\r\n            editor.addButton(\"alignimgcenter\", { icon: \" eav-icon-align-center\", tooltip: \"Align center\", cmd: \"justifycenter\", onPostRender: initOnPostRender(\"aligncenter\") });\r\n            editor.addButton(\"alignimgright\", { icon: \" eav-icon-align-right\", tooltip: \"Align right\", cmd: \"justifyright\", onPostRender: initOnPostRender(\"alignright\") });\r\n\r\n            var imgMenuArray = [];\r\n            function makeImgFormatCall(size) { return function () { editor.formatter.apply(\"imgwidth\" + size); }; }\r\n            for (var is = 0; is < tinyMceConfig.imgSizes.length; is++) {\r\n                var config = {\r\n                    icon: \" eav-icon-resize-horizontal\",\r\n                    tooltip: tinyMceConfig.imgSizes[is] + \"%\",\r\n                    text: tinyMceConfig.imgSizes[is] + \"%\",\r\n                    onclick: makeImgFormatCall(tinyMceConfig.imgSizes[is]),\r\n                    onPostRender: initOnPostRender(\"imgwidth\" + tinyMceConfig.imgSizes[is])\r\n                };\r\n                editor.addButton(\"imgresize\" + tinyMceConfig.imgSizes[is], config);\r\n                imgMenuArray.push(config);\r\n            }\r\n\r\n            editor.addButton(\"resizeimg100\", {\r\n                icon: \" eav-icon-resize-horizontal\", tooltip: \"100%\",\r\n                onclick: function () { editor.formatter.apply(\"imgwidth100\"); },\r\n                onPostRender: initOnPostRender(\"imgwidth100\")\r\n            });\r\n\r\n            // group of buttons to resize an image 100%, 50%, etc.\r\n            editor.addButton(\"imgresponsive\", angular.extend({}, editor.buttons.resizeimg100,\r\n            { type: \"splitbutton\", menu: imgMenuArray }));\r\n            //#endregion\r\n\r\n            //#region my context toolbars for links, images and lists (ul/li)\r\n            function makeTagDetector(tagWeNeedInTheTagPath) {\r\n                return function tagDetector(currentElement) {\r\n                    // check if we are in a tag within a specific tag\r\n                    var selectorMatched = editor.dom.is(currentElement, tagWeNeedInTheTagPath) && editor.getBody().contains(currentElement);\r\n                    return selectorMatched;\r\n                };\r\n            }\r\n\r\n            editor.addContextToolbar(makeTagDetector(\"a\"), \"link unlink\");\r\n            editor.addContextToolbar(makeTagDetector(\"img\"), \"image | alignimgleft alignimgcenter alignimgright imgresponsive | removeformat | remove\");\r\n            editor.addContextToolbar(makeTagDetector(\"li,ol,ul\"), \"bullist numlist | outdent indent\");\r\n            //#endregion\r\n        }\r\n\r\n        return svc;\r\n    }]);\nangular.module(\"SxcEditTemplates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"adam/adam-hint.html\",\"<div class=\\\"small pull-right\\\">\\r\\n    <span style=\\\"opacity: 0.5\\\">drop files here -</span>\\r\\n    <a href=\\\"http://2sxc.org/help?tag=adam\\\" target=\\\"_blank\\\" uib-tooltip=\\\"ADAM is the Automatic Digital Assets Manager - click to discover more\\\">\\r\\n        <i class=\\\"eav-icon-apple\\\"></i>\\r\\n        Adam\\r\\n    </a>\\r\\n    <span style=\\\"opacity: 0.5\\\"> is sponsored with\\r\\n    <i class=\\\"eav-icon-heart\\\"></i> by\\r\\n    <a tabindex=\\\"-1\\\" href=\\\"http://2sic.com/\\\" target=\\\"_blank\\\">\\r\\n        2sic.com\\r\\n    </a>\\r\\n    </span>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"adam/browser.html\",\"<div ng-if=\\\"vm.show\\\" class=\\\"\\\">\\r\\n    <!-- info for dropping stuff here -->\\r\\n    <div class=\\\"dz-preview dropzone-adam\\\" ng-disabled=\\\"vm.disabled\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.AdamUploadLabel\\' | translate }}\\\" ng-click=\\\"vm.openUpload()\\\">\\r\\n        <div class=\\\"dz-image adam-browse-background-icon adam-browse-background\\\" xstyle=\\\"background-color: whitesmoke\\\">\\r\\n            <i class=\\\"eav-icon-up-circled2\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">drop files</div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- add folder - not always shown -->\\r\\n    <div ng-show=\\\"vm.allowCreateFolder() || vm.debug.on\\\" class=\\\"dz-preview\\\" ng-disabled=\\\"vm.disabled\\\" ng-click=\\\"vm.addFolder()\\\">\\r\\n        <div class=\\\"dz-image adam-browse-background-icon adam-browse-background\\\">\\r\\n            <div class=\\\"\\\">\\r\\n                <i class=\\\"eav-icon-folder-empty\\\"></i>\\r\\n                <div class=\\\"adam-short-label\\\">new folder</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"adam-background adam-browse-background-icon\\\">\\r\\n            <i class=\\\"eav-icon-plus\\\" style=\\\"font-size: 2em; top: 13px; position: relative;\\\"></i>\\r\\n        </div>\\r\\n        <div class=\\\"dz-details\\\" style=\\\"opacity: 1\\\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- browse up a folder - not always shown -->\\r\\n    <div ng-show=\\\"vm.showFolders || vm.debug.on\\\" class=\\\"dz-preview\\\" ng-disabled=\\\"vm.disabled\\\" ng-if=\\\"vm.folders.length > 0\\\" ng-click=\\\"vm.goUp()\\\">\\r\\n        <div class=\\\"dz-image  adam-browse-background-icon adam-browse-background\\\">\\r\\n            <i class=\\\"eav-icon-folder-empty\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">up</div>\\r\\n        </div>\\r\\n        <div class=\\\"adam-background adam-browse-background-icon\\\">\\r\\n            <i class=\\\"eav-icon-level-up\\\" style=\\\"font-size: 2em; top: 13px; position: relative;\\\"></i>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- folder list - not always shown -->\\r\\n    <div ng-show=\\\"vm.showFolders || vm.debug.on\\\" class=\\\"dz-preview\\\" ng-repeat=\\\"item in vm.items | filter: { IsFolder: true } | filter: { Name: \\'!2sxc\\' } | filter: { Name: \\'!adam\\' } | orderBy:\\'Name\\'\\\"\\r\\n         ng-click=\\\"vm.goIntoFolder(item)\\\">\\r\\n        <div class=\\\"dz-image adam-blur adam-browse-background-icon adam-browse-background\\\">\\r\\n            <i class=\\\"eav-icon-folder-empty\\\"></i>\\r\\n            <div class=\\\"short-label\\\">{{ item.Name }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"dz-details file-type-{{item.Type}}\\\">\\r\\n            <span ng-click=\\\"vm.del(item)\\\" stop-event=\\\"click\\\" class=\\\"adam-delete-button\\\"><i class=\\\"eav-icon-cancel\\\"></i></span>\\r\\n            <div class=\\\"adam-full-name-area\\\">\\r\\n                <div class=\\\"adam-full-name\\\">{{ item.Name }}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <span class=\\\"adam-tag\\\" ng-class=\\\"{\\'metadata-exists\\': item.MetadataId > 0}\\\"\\r\\n              ng-click=\\\"vm.editMetadata(item)\\\"\\r\\n              ng-if=\\\"vm.getMetadataType(item)\\\"\\r\\n              stop-event=\\\"click\\\"\\r\\n              uib-tooltip=\\\"{{vm.getMetadataType(item)}}:{{item.MetadataId}}\\\">\\r\\n            <i class=\\\"eav-icon-tag\\\" style=\\\"font-size: larger\\\"></i>\\r\\n        </span>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- files -->\\r\\n    <div class=\\\"dz-preview\\\" ng-class=\\\"{ \\'dz-success\\': value.Value.toLowerCase() == \\'file:\\' + item.Id }\\\" ng-repeat=\\\"item in (vm.items | filter: { IsFolder: false }) | filter: (vm.showImagesOnly ? {Type: \\'image\\'} : {})  | orderBy:\\'Name\\'\\\" ng-click=\\\"vm.select(item)\\\" ng-disabled=\\\"vm.disabled || !vm.enableSelect\\\">\\r\\n        <div ng-if=\\\"item.Type !== \\'image\\'\\\" class=\\\"dz-image adam-blur  adam-browse-background-icon adam-browse-background\\\">\\r\\n            <i ng-class=\\\"vm.icon(item)\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">{{ item.Name }}</div>\\r\\n        </div>\\r\\n        <div ng-if=\\\"item.Type === \\'image\\'\\\" class=\\\"dz-image\\\">\\r\\n            <img data-dz-thumbnail=\\\"\\\" alt=\\\"{{ item.Id + \\':\\' + item.Name\\r\\n}}\\\" ng-src=\\\"{{ item.fullPath + \\'?w=120&h=120&mode=crop\\' }}\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"dz-details file-type-{{item.Type}}\\\">\\r\\n            <span ng-click=\\\"vm.del(item)\\\" stop-event=\\\"click\\\" class=\\\"adam-delete-button\\\"><i class=\\\"eav-icon-cancel\\\"></i></span>\\r\\n            <div class=\\\"adam-full-name-area\\\">\\r\\n                <div class=\\\"adam-full-name\\\">{{ item.Name }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"dz-filename adam-short-label\\\">\\r\\n                <span>#{{ item.Id }} - {{ (item.Size / 1024).toFixed(0) }} kb</span>\\r\\n            </div>\\r\\n            <a class=\\\"adam-link-button\\\" target=\\\"_blank\\\" ng-href=\\\"{{ item.fullPath }}\\\">\\r\\n                <i class=\\\"eav-icon-link-ext\\\" style=\\\"font-size: larger\\\"></i>\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <span class=\\\"adam-tag\\\" ng-class=\\\"{\\'metadata-exists\\': item.MetadataId > 0}\\\"\\r\\n              ng-click=\\\"vm.editMetadata(item)\\\"\\r\\n              ng-if=\\\"vm.getMetadataType(item)\\\"\\r\\n              stop-event=\\\"click\\\"\\r\\n              uib-tooltip=\\\"{{vm.getMetadataType(item)}}:{{item.MetadataId}}\\\">\\r\\n            <i class=\\\"eav-icon-tag\\\" style=\\\"font-size: larger\\\"></i>\\r\\n        </span>\\r\\n\\r\\n\\r\\n        <div class=\\\"dz-success-mark\\\">\\r\\n            <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\r\\n                <title>Check</title>\\r\\n                <defs></defs>\\r\\n                <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\r\\n                    <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\r\\n                </g>\\r\\n            </svg>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\");\n$templateCache.put(\"adam/dropzone-upload-preview.html\",\"<div ng-show=\\\"uploading\\\">\\r\\n    <div class=\\\"dropzone-previews\\\">\\r\\n    </div>\\r\\n    <span class=\\\"invisible-clickable\\\" data-note=\\\"just a fake, invisible area for dropzone\\\"></span>\\r\\n</div>\");\n$templateCache.put(\"fields/dnn-bridge/hyperlink-default-filemanager.html\",\"<div>\\r\\n\t<iframe class=\\\"sxc-dialog-filemanager-iframe\\\" style=\\\"width:100%; height:100%; overflow:hidden; border: 0;\\\" scrolling=\\\"no\\\" web-forms-bridge=\\\"bridge\\\" bridge-type=\\\"filemanager\\\" bridge-sync-height=\\\"false\\\"></iframe>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n\t.sxc-dialog-filemanager .modal-dialog { width: 100%;height: 100%;margin: 0; }\\r\\n\t.sxc-dialog-filemanager .modal-content { background: none;height: 100%; }\\r\\n\t.sxc-dialog-filemanager-iframe { position: absolute;top: 0;left: 0;right: 0;bottom: 0; }\\r\\n</style>\");\n$templateCache.put(\"fields/dnn-bridge/hyperlink-default-pagepicker.html\",\"<div>\\r\\n\t<div class=\\\"modal-header\\\">\\r\\n\t\t<h3 class=\\\"modal-title\\\" translate=\\\"Edit.Fields.Hyperlink.PagePicker.Title\\\"></h3>\\r\\n\t</div>\\r\\n\t<div class=\\\"modal-body\\\" style=\\\"height:370px; width:600px\\\">\\r\\n\t\t<iframe style=\\\"width:100%; height: 350px; border: 0;\\\" web-forms-bridge=\\\"bridge\\\" bridge-type=\\\"pagepicker\\\" bridge-sync-height=\\\"false\\\"></iframe>\\r\\n\t</div>\\r\\n\t<div class=\\\"modal-footer\\\"></div>\\r\\n</div>\");\n$templateCache.put(\"fields/hyperlink/hyperlink-default.html\",\"<div class=\\\"dropzone\\\">\\r\\n    {{vm.adamModeConfig | json}}\\r\\n    <div class=\\\"clearfix\\\">\\r\\n        <div ng-if=\\\"value.Value && vm.isImage()\\\"\\r\\n             class=\\\"thumbnail-before-input\\\"\\r\\n             ng-style=\\\"{ \\'background-image\\': \\'url(\\' + vm.thumbnailUrl(1, true) + \\')\\' }\\\"\\r\\n             ng-mouseover=\\\"vm.showPreview = true\\\"\\r\\n             ng-mouseleave=\\\"vm.showPreview = false\\\">\\r\\n        </div>\\r\\n\\r\\n        <div ng-if=\\\"value.Value && !vm.isImage()\\\"\\r\\n           class=\\\"thumbnail-before-input icon-before-input\\\">\\r\\n            <a href=\\\"{{vm.testLink}}\\\"\\r\\n               target=\\\"_blank\\\" tabindex=\\\"-1\\\"\\r\\n               tooltip-html=\\\"{{vm.tooltipUrl(vm.testLink)}}\\\"\\r\\n               tooltip-placement=\\\"right\\\"\\r\\n               ng-class=\\\"vm.icon()\\\">\\r\\n            </a>            \\r\\n        </div>\\r\\n        <div ng-if=\\\"!value.Value\\\"\\r\\n             class=\\\"thumbnail-before-input empty-placeholder\\\">\\r\\n        </div>\\r\\n        <div class=\\\"after-preview\\\">\\r\\n            <div class=\\\"input-group\\\" uib-dropdown>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control input-lg\\\" ng-model=\\\"value.Value\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.Tooltip1\\' | translate }}\\r\\n{{\\'Edit.Fields.Hyperlink.Default.Tooltip2\\' | translate }}\\r\\nADAM - sponsored with ♥ by 2sic.com\\\">\\r\\n                <span class=\\\"input-group-btn\\\" style=\\\"vertical-align: top;\\\">\\r\\n                    <div style=\\\"width: 6px;\\\"></div>\\r\\n                    <button ng-if=\\\"to.settings[\\'merged\\'].Buttons.indexOf(\\'adam\\') > -1\\\" type=\\\"button\\\" class=\\\"btn btn-default icon-field-button\\\" ng-disabled=\\\"to.disabled\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.AdamUploadLabel\\' | translate }}\\\" ng-click=\\\"vm.toggleAdam()\\\">\\r\\n                        <i class=\\\"eav-icon-apple\\\"></i>\\r\\n                    </button>\\r\\n                    <button ng-if=\\\"to.settings[\\'merged\\'].Buttons.indexOf(\\'page\\') > -1\\\" type=\\\"button\\\" class=\\\"btn btn-default icon-field-button\\\" ng-disabled=\\\"to.disabled\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.PageLabel\\' | translate }}\\\" ng-click=\\\"vm.openDialog(\\'pagepicker\\')\\\">\\r\\n                        <i class=\\\"eav-icon-sitemap\\\"></i>\\r\\n                    </button>\\r\\n                    <button ng-if=\\\"to.settings[\\'merged\\'].Buttons.indexOf(\\'more\\') > -1\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" class=\\\"btn btn-default uib-dropdown-toggle icon-field-button\\\" uib-dropdown-toggle ng-disabled=\\\"to.disabled\\\">\\r\\n                        <i class=\\\"eav-icon-options\\\"></i>\\r\\n                    </button>\\r\\n                </span>\\r\\n                <ul class=\\\"dropdown-menu pull-right\\\" uib-dropdown-menu role=\\\"menu\\\">\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowAdam\\\"><a class=\\\"dropzone-adam\\\" ng-click=\\\"vm.toggleAdam(false)\\\" href=\\\"javascript:void(0);\\\"><i class=\\\"eav-icon-apple\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuAdam\\\"></span></a></li>\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowPagePicker\\\"><a ng-click=\\\"vm.openDialog(\\'pagepicker\\')\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"eav-icon-sitemap\\\" xicon=\\\"home\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuPage\\\"></span></a></li>\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowImageManager\\\"><a ng-click=\\\"vm.toggleAdam(true, true)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"eav-icon-file-image\\\" xicon=\\\"picture\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuImage\\\"></span></a></li>\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowFileManager\\\"><a ng-click=\\\"vm.toggleAdam(true, false)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"eav-icon-file\\\" xicon=\\\"file\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuDocs\\\"></span></a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n            <div ng-if=\\\"vm.showPreview\\\" style=\\\"position: relative\\\">\\r\\n                <div style=\\\"position: absolute; z-index: 100; background: white; top: 10px; text-align: center; left: 0; right: 0;\\\">\\r\\n                    <img ng-src=\\\"{{vm.thumbnailUrl(2)}}\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <adam-hint class=\\\"field-hints\\\"></adam-hint>\\r\\n            <div ng-if=\\\"value.Value\\\" class=\\\"field-hints\\\">\\r\\n                <a href=\\\"{{vm.testLink}}\\\" target=\\\"_blank\\\" tabindex=\\\"-1\\\" tooltip-html=\\\"{{vm.tooltipUrl(vm.testLink)}}\\\">\\r\\n                    <span>&nbsp;... {{vm.testLink.substr(vm.testLink.lastIndexOf(\\\"/\\\"), 100)}}</span>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <!-- The ADAM file browser, requires the uploader wrapped around it -->\\r\\n        <adam-browser content-type-name=\\\"to.header.ContentTypeName\\\"\\r\\n                      entity-guid=\\\"to.header.Guid\\\"\\r\\n                      field-name=\\\"options.key\\\"\\r\\n                      auto-load=\\\"false\\\"\\r\\n                      folder-depth=\\\"0\\\"\\r\\n                      sub-folder=\\\"\\\"\\r\\n                      update-callback=\\\"vm.setValue\\\"\\r\\n                      register-self=\\\"vm.registerAdam\\\"\\r\\n                      adam-mode-config=\\\"vm.adamModeConfig\\\"\\r\\n                      ng-disabled=\\\"to.disabled\\\"></adam-browser>\\r\\n\\r\\n        <!-- the preview of the uploader -->\\r\\n        <dropzone-upload-preview></dropzone-upload-preview>\\r\\n\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/hyperlink/hyperlink-library.html\",\"<div>\\r\\n    <div class=\\\"dropzone\\\">\\r\\n        <!-- The ADAM file browser, requires the uploader wrapped around it -->\\r\\n        <adam-browser\\r\\n            content-type-name=\\\"to.header.ContentTypeName\\\"\\r\\n            entity-guid=\\\"to.header.Guid\\\"\\r\\n            field-name=\\\"options.key\\\"\\r\\n            auto-load=\\\"true\\\"\\r\\n            sub-folder=\\\"\\\"\\r\\n            folder-depth=\\\"to.settings.merged.FolderDepth\\\"\\r\\n            metadata-content-types=\\\"to.settings.merged.MetadataContentTypes\\\"\\r\\n            allow-assets-in-root=\\\"to.settings.merged.allowAssetsInRoot\\\"\\r\\n            enable-select=\\\"false\\\"\\r\\n            update-callback=\\\"vm.setValue\\\"\\r\\n            register-self=\\\"vm.registerAdam\\\">\\r\\n        </adam-browser>\\r\\n\\r\\n\\r\\n        <!-- the preview of the uploader -->\\r\\n        <dropzone-upload-preview></dropzone-upload-preview>\\r\\n\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/string/string-font-icon-picker.html\",\"<div>\\r\\n    <div uib-dropdown uib-keyboard-nav auto-close=\\\"outsideClick\\\" is-open=\\\"vm.selectorIsOpen\\\">\\r\\n        <div class=\\\"thumbnail-before-input icon-preview\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"\\\" uib-tooltip=\\\"{{value.Value}}\\\" uib-dropdown-toggle>\\r\\n                <i class=\\\"{{vm.previewPrefix}} {{value.Value}}\\\" ng-show=\\\"value.Value\\\"></i>\\r\\n                <span ng-show=\\\"!value.Value\\\">&nbsp;&nbsp;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"input-group\\\" uib-dropdown-toggle>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-lg\\\" ng-model=\\\"value.Value\\\" ng-disabled=\\\"false\\\" >\\r\\n        </div>\\r\\n        <!-- the search ui -->\\r\\n        <ul class=\\\"dropdown-menu icons-menu-columns\\\" role=\\\"menu\\\" uib-dropdown-menu>\\r\\n            <li class=\\\"input-group\\\">\\r\\n                <span class=\\\"input-group-addon btn-default btn\\\" ng-click=\\\"vm.selectorIsOpen = false; value.Value = \\'\\'\\\">\\r\\n                    <i class=\\\"eav-icon-cancel\\\"></i>\\r\\n                </span>\\r\\n                <input type=\\\"search\\\" ng-model=\\\"vm.iconFilter\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"search...\\\" />\\r\\n            </li>\\r\\n\\r\\n            <li ng-repeat=\\\"icn in vm.icons\\\" role=\\\"menuitem\\\"\\r\\n                ng-show=\\\"icn.class.indexOf(vm.iconFilter) !== -1\\\">\\r\\n                <a ng-click=\\\"vm.setIcon(icn.class)\\\" xng-click=\\\"value.Value = icn.class; vm.selectorIsOpen = false;\\\">\\r\\n                    <i class=\\\"{{vm.previewPrefix}} {{icn.class}}\\\"></i> <span uib-tooltip=\\\"{{icn.class}}\\\">...{{icn.class.substring(vm.prefix.length-1,25)}}</span>\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div ng-if=\\\"vm.debug.on\\\">Infos: found {{vm.icons.length}} items for prefix \\\"{{vm.prefix}}\\\" and will use \\\"{{vm.previewPrefix}}\\\" as a preview class. Selected is \\\"{{value.Value}}\\\" and files are: {{vm.files}}</div>\\r\\n</div> \");\n$templateCache.put(\"fields/string/string-template-picker.html\",\"<div>\\r\\n    <div class=\\\"input-group\\\">\\r\\n\\r\\n        <select class=\\\"form-control input-material material\\\"\\r\\n                ng-model=\\\"value.Value\\\"\\r\\n                ng-disabled=\\\"!readyToUse()\\\">\\r\\n            <option value=\\\"\\\">(no file selected)</option>\\r\\n            <option ng-repeat=\\\"item in templates | isValidFile:file.ext\\\"\\r\\n                    ng-selected=\\\"{{item == value.Value}}\\\"\\r\\n                    value=\\\"{{item}}\\\">\\r\\n                {{item}}\\r\\n            </option>\\r\\n        </select>\\r\\n        <span class=\\\"input-group-btn\\\" style=\\\"vertical-align: top;\\\">\\r\\n            <button class=\\\"btn btn-default icon-field-button\\\" type=\\\"button\\\" ng-click=\\\"add()\\\" ng-disabled=\\\"!readyToUse()\\\">\\r\\n                <span class=\\\"eav-icon-plus\\\"></span>\\r\\n            </button>\\r\\n        </span>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/string/string-wysiwyg-adv.html\",\"<div>\\r\\n    this would be an advanced, configurable WYSIWYG. It does not exist yet :). \\r\\n</div>\");\n$templateCache.put(\"fields/string/string-wysiwyg-dnn.html\",\"<iframe style=\\\"width:100%; border: 0;\\\" web-forms-bridge=\\\"vm.bridge\\\" bridge-type=\\\"wysiwyg\\\" bridge-sync-height=\\\"true\\\"></iframe>\");\n$templateCache.put(\"fields/string/string-wysiwyg-tinymce.html\",\"<div>\\r\\n    <div class=\\\"dropzone\\\">\\r\\n        <div> <!-- needed because after a refresh, the editor can\\'t be placed at the same location -->\\r\\n            <div ui-tinymce=\\\"tinymceOptions\\\" ng-model=\\\"value.Value\\\" class=\\\"field-string-wysiwyg-mce-box\\\"></div>\\r\\n        </div>\\r\\n\\r\\n        <!-- the ADAM file browser requires the uploader wrapped around it -->\\r\\n        <adam-browser content-type-name=\\\"to.header.ContentTypeName\\\"\\r\\n                      entity-guid=\\\"to.header.Guid\\\"\\r\\n                      field-name=\\\"options.key\\\"\\r\\n                      auto-load=\\\"false\\\"\\r\\n                      folder-depth=\\\"0\\\"\\r\\n                      sub-folder=\\\"\\\"\\r\\n                      update-callback=\\\"vm.setValue\\\"\\r\\n                      register-self=\\\"vm.registerAdam\\\"\\r\\n                      show-images-only=\\\"vm.adamModeImage\\\"\\r\\n                      ng-disabled=\\\"to.disabled\\\" adam-mode-config=\\\"vm.adamModeConfig\\\"></adam-browser>\\r\\n\\r\\n        <!-- dummy item to set focus on in script-->\\r\\n        <span id=\\\"dummyfocus\\\" tabindex=\\\"-1\\\"></span>\\r\\n\\r\\n        <!-- the preview of the uploader -->\\r\\n        <dropzone-upload-preview></dropzone-upload-preview>\\r\\n        <adam-hint class=\\\"field-hints\\\"></adam-hint>\\r\\n\\r\\n    </div>\\r\\n</div>\");}]);"],"sourceRoot":"/source/"}