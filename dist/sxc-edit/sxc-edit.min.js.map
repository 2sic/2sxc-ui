{"version":3,"sources":["sxc-edit.min.js"],"names":["angular","module","directive","restrict","replace","transclude","templateUrl","factory","$http","eavConfig","sxc","svcCreator","appRoot","contentType","entityGuid","field","subfolder","svc","url","resolveServiceUrl","folders","adamRoot","substr","indexOf","uploadUrl","targetSubfolder","addFullPath","value","key","fullPath","Path","extend","implementLiveList","get","params","then","result","forEach","data","addFolder","newfolder","post","newFolder","liveListReload","goIntoFolder","childFolder","push","pathParts","split","subPath","c","length","Subfolder","goUp","pop","item","isFolder","IsFolder","id","Id","BrowserController","$scope","adamSvc","debugState","eavAdminDialogs","fileType","vm","this","debug","contentTypeName","fieldName","show","subFolder","showImagesOnly","folderDepth","showFolders","allowAssetsInRoot","metadataContentTypes","disabled","ngDisabled","enableSelect","activate","autoLoad","toggle","registerSelf","refresh","items","liveList","newConfig","settingsChanged","openUpload","dropzone","select","fileItem","updateCallback","folderName","window","prompt","del","ok","confirm","folder","currentFolderDepth","allowCreateFolder","editMetadata","_itemDefinition","getMetadataType","openEditItems","found","Type","match","metadataType","title","MetadataId","EntityId","Title","ContentTypeName","Metadata","Key","KeyType","TargetType","metadataOfCmsObject","Prefill","EntityTitle","Name","icon","getIconClass","$inject","app","controller","require","link","scope","elem","attrs","dropzoneCtrl","adam","controllerAs","tabId","AppInstanceId","ContentBlockId","dragClass","$timeout","$translate","postLink","element","header","$parent","to","options","Guid","config","urlRoot","maxFilesize","paramName","maxThumbnailFilesize","headers","ModuleId","TabId","dictDefaultMessage","addRemoveLinks","previewsContainer","toLowerCase","clickable","eventHandlers","addedfile","file","$apply","uploading","processing","success","response","Success","afterUpload","alert","Error","error","xhr","instant","queuecomplete","getUploadingFiles","getQueuedFiles","Dropzone","handler","event","on","processDropzone","processQueue","resetDropzone","removeAllFiles","hiddenFileInput","click","$uibModal","promiseToastr","open","type","oldValue","callback","template","connector","valueChanged","dialogType","modalInstance","close","CurrentValue","console","log","resolve","bridge","windowClass","convertPathToId","path","pathWithoutVersion","promise","encodeURIComponent","getUrlOfId","idCode","linkLowered","portalRoot","webFormsBridgeUrl","$2sxc","urlParams","bridgeSyncHeight","Object","keys","map","prop","join","src","w","contentWindow","connectBridge","resize","css","document","body","scrollHeight","$","ready","setTimeout","formlyConfigProvider","setType","name","wrapper","$controller","$filter","appId","eavDefaultValueService","settings","merged","EnableRemove","AllowMultiValue","EnableAddExisting","EnableCreate","EnableEdit","EntityType","enableCollapseField","collapseField","model","Values","Value","fieldWrappersWithPreview","dnnBridgeSvc","ensureDefaultConfig","undefined","ShowAdam","Buttons","testLink","isImage","thumbnailUrl","size","quote","qt","tooltipUrl","str","$watch","newValue","processResultOfDnnBridge","FileId","openDialog","Paths","FileFilter","registerAdam","setValue","toggleAdam","defaultFieldWrappersNoFloat","$rootScope","$compile","$window","$sce","uiTinymceConfig","uiTinymceService","baseUrl","tinymce","baseURL","priority","ctrls","toggleDisable","ensureInstance","tinyInstance","getBody","setAttribute","readonly","getDoc","expression","ngModel","form","debounce","updateView","editor","content","getContent","format","trim","trustAsHtml","$setViewValue","$$phase","$digest","uniqueId","getUniqueId","$set","$eval","uiTinymceTwo","debouncedUpdate","debouncedUpdateDelay","debouncedUpdateTimer","ed","cancel","isDirty","save","setupOptions","setup","$render","$setPristine","$setUntouched","blur","$setTouched","remove","selector","maybeInitPromise","init","$formatters","unshift","modelValue","$parsers","viewValue","getTrustedHtml","$viewValue","setContent","fire","$observe","$on","e","eid","isUndefined","parentElement","parent","clonedElement","clone","removeAttr","execCommand","append","service","UITinymceService","ID_ATTR","CHARS","Math","uuid","len","radix","i","chars","random","r","uuidFast","Array","rnd","uuidCompact","v","toString","$ocLazyLoad","getIconClasses","className","charcount","foundList","duplicateDetector","ssSet","styleSheets","classes","rules","cssRules","x","selectorText","substring","txt","icnClass","rule","class","loadAdditionalResources","files","mapped","fileList","load","iconFilter","prefix","previewPrefix","icons","useTestValues","selectorIsOpen","setIcon","$setDirty","controlSettings","Files","CssPrefix","PreviewCss","templateOptions","cs","context","inj","$injector","appDialogConfigSvc","getDialogSettings","IsContent","formVm","formFields","SortOrder","defaultFieldWrappers","appAssetsSvc","fieldMask","setFileConfig","typeWatcher","locWatcher","onLocationChange","templates","svcApp","svcGlobal","readyToUse","specs","Token","ext","suggestion","C# Razor","loc","svcCurrent","add","fileName","foundSlash","lastIndexOf","endsWith","create","filter","paths","out","slice","initialValue","initialReadOnly","onChanged","setReadOnly","readOnly","FieldWysiwygTinyMceController","languages","tinyMceHelpers","tinyMceToolbars","tinyMceConfig","tinyMceAdam","tinyMceDnnBridge","tinyMceInitCallback","tinymceOptions","language","addTranslations","addButtons","enableContentBlocksIfPossible","watchDisabled","ngscope","$broadcast","fields","index","nextField","enableContentBlocks","getDefaultOptions","attachAdam","attach","lang2","currentLanguage","language_url","modeImage","adamModeImage","insertContent","imagesOnly","addAdamButtons","addButton","onclick","menu","text","tooltip","openDnnDialog","beta","buildModes","modes","standard","menubar","toolbar","contextmenu","advanced","cdnRoot","imgSizes","defaultLanguage","plugins","validateAlso","inline","automatic_uploads","autosave_ask_before_unload","paste_as_text","extended_valid_elements","custom_elements","relative_urls","default_link_target","object_resizing","skin","theme","previouslySelected","selection","initLangResources","primaryLan","mceTranslations","pLen","all","getTranslationTable","translations","k","addI18n","addTinyMceToolbarButtons","initOnPostRender","watchChange","formatter","formatChanged","state","self","active","registerTinyMceFormats","imgformats","is","collapsed","styles","width","register","switchModes","mode","panel","renderUI","getElementById","focus","makeImgFormatCall","apply","makeTagDetector","tagWeNeedInTheTagPath","currentElement","selectorMatched","dom","contains","linkgroup","onPostRender","linkgroupPro","copy","cmd","tag","buttons","h3","h4","h5","h6","p","guid","imgMenuArray","resizeimg100","addContextToolbar","run","$templateCache","put"],"mappings":"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","file":"sxc-edit.min.js","sourcesContent":["(function() { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    angular.module(\"Adam\", [\r\n        \"SxcServices\",\r\n        \"EavConfiguration\", // config\r\n        \"EavServices\", // multi-language stuff\r\n        ])\r\n        ;\r\n\r\n} ());\n(function() {\r\n    /* jshint laxbreak:true*/\r\n\r\n    angular.module(\"Adam\", [])\r\n        /*@ngInject*/\r\n        .directive(\"adamHint\", function () {\r\n            return {\r\n                restrict: \"E\",\r\n                replace: false,\r\n                transclude: false,\r\n                templateUrl: \"adam/adam-hint.html\"\r\n            };\r\n        });\r\n})();\nangular.module(\"Adam\")\r\n    /*@ngInject*/\r\n    .factory(\"adamSvc\", [\"$http\", \"eavConfig\", \"sxc\", \"svcCreator\", \"appRoot\", function ($http, eavConfig, sxc, svcCreator, appRoot) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(contentType, entityGuid, field, subfolder) {\r\n            var svc = {\r\n                url: sxc.resolveServiceUrl(\"app-content/\" + contentType + \"/\" + entityGuid + \"/\" + field),\r\n                subfolder: subfolder,\r\n                folders: [],\r\n                adamRoot: appRoot.substr(0, appRoot.indexOf(\"2sxc\"))\r\n            };\r\n\r\n            // get the correct url for uploading as it is needed by external services (dropzone)\r\n            svc.uploadUrl = function(targetSubfolder) {\r\n                return (targetSubfolder === \"\")\r\n                    ? svc.url\r\n                    : svc.url + \"?subfolder=\" + targetSubfolder;\r\n            };\r\n\r\n            // extend a json-response with a path (based on the adam-root) to also have a fullPath\r\n            svc.addFullPath = function addFullPath(value, key) {\r\n                value.fullPath = svc.adamRoot + value.Path;\r\n            };\r\n\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(svc.url + \"/items\", { params: { subfolder: svc.subfolder } })\r\n                    .then(function (result) {\r\n                        angular.forEach(result.data, svc.addFullPath);\r\n                        return result;\r\n                    });\r\n            }));\r\n\r\n            // create folder\r\n            svc.addFolder = function add(newfolder) {\r\n                return $http.post(svc.url + \"/folder\", {}, { params: { subfolder: svc.subfolder, newFolder: newfolder } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            svc.goIntoFolder = function(childFolder) {\r\n                svc.folders.push(childFolder);\r\n                var pathParts = childFolder.Path.split(\"/\");\r\n                var subPath = \"\";\r\n                for (var c = 0; c < svc.folders.length; c++)\r\n                    subPath = pathParts[pathParts.length - c - 2] + \"/\" + subPath;\r\n\r\n                subPath = subPath.replace(\"//\", \"/\");\r\n                if (subPath[subPath.length - 1] === \"/\")\r\n                    subPath = subPath.substr(0, subPath.length - 1);\r\n\r\n                childFolder.Subfolder = subPath;\r\n\r\n                // now assemble the correct subfolder based on the folders-array\r\n                svc.subfolder = subPath;\r\n                svc.liveListReload();\r\n                return subPath;\r\n            };\r\n\r\n            svc.goUp = function() {\r\n                if (svc.folders.length > 0)\r\n                    svc.folders.pop();\r\n                if (svc.folders.length > 0) {\r\n                    svc.subfolder = svc.folders[svc.folders.length - 1].Subfolder;\r\n                } else {\r\n                    svc.subfolder = \"\";\r\n                }\r\n                svc.liveListReload();\r\n                return svc.subfolder;\r\n            };\r\n\r\n            // delete, then reload\r\n            // IF verb DELETE fails, so I'm using get for now\r\n            svc.delete = function del(item) {\r\n                return $http.get(svc.url + \"/delete\", { params: { subfolder: svc.subfolder, isFolder: item.IsFolder, id: item.Id } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            return svc;\r\n        };\r\n    }]);\n(function () {\r\n    /* jshint laxbreak:true */\r\n    \"use strict\";\r\n\r\n    BrowserController.$inject = [\"$scope\", \"adamSvc\", \"debugState\", \"eavConfig\", \"eavAdminDialogs\", \"appRoot\", \"fileType\"];\r\n    var app = angular.module(\"Adam\"); \r\n\r\n    // The controller for the main form directive\r\n    app.controller(\"BrowserController\", BrowserController);\r\n    \r\n    /*@ngInject*/\r\n    function BrowserController($scope, adamSvc, debugState, eavConfig, eavAdminDialogs, appRoot, fileType) {\r\n        var vm = this;\r\n        vm.debug = debugState;\r\n        vm.contentTypeName = $scope.contentTypeName;\r\n        vm.entityGuid = $scope.entityGuid;\r\n        vm.fieldName = $scope.fieldName;\r\n        vm.show = false;\r\n        vm.subFolder = $scope.subFolder || \"\";\r\n        vm.appRoot = appRoot;\r\n\r\n        //$scope.showImagesOnly = ;\r\n        vm.showImagesOnly = $scope.showImagesOnly = $scope.showImagesOnly || false;\r\n\r\n        vm.folderDepth = (typeof $scope.folderDepth !== 'undefined' && $scope.folderDepth !== null)\r\n            ? $scope.folderDepth\r\n            : 2;\r\n        vm.showFolders = !!vm.folderDepth;\r\n        vm.allowAssetsInRoot = $scope.allowAssetsInRoot || true;\r\n        vm.metadataContentTypes = $scope.metadataContentTypes || \"\";\r\n\r\n\r\n        vm.disabled = $scope.ngDisabled;\r\n        vm.enableSelect = ($scope.enableSelect === false) ? false : true; // must do it like this, $scope.enableSelect || true will not work\r\n\r\n        vm.activate = function () {\r\n            if($scope.autoLoad)\r\n                vm.toggle();\r\n            if ($scope.registerSelf)\r\n                $scope.registerSelf(vm);\r\n        };\r\n\r\n\r\n        // load svc...\r\n        vm.svc = adamSvc(vm.contentTypeName, vm.entityGuid, vm.fieldName, vm.subFolder);\r\n\r\n        // refresh - also used by callback after an upload completed\r\n        vm.refresh = vm.svc.liveListReload;\r\n\r\n        vm.get = function () {\r\n            vm.items = vm.svc.liveList();\r\n            vm.folders = vm.svc.folders;\r\n        };\r\n\r\n        vm.toggle = function toggle(newConfig) {\r\n            var settingsChanged = false;\r\n            if (newConfig) {\r\n                settingsChanged = (vm.showImagesOnly !== newConfig.showImagesOnly);\r\n                vm.showImagesOnly = newConfig.showImagesOnly;\r\n            }\r\n            vm.show = settingsChanged || !vm.show;      // if settings changed, always show\r\n            if (vm.show)\r\n                vm.get();\r\n        };\r\n\r\n        vm.openUpload = function() {\r\n            vm.dropzone.openUpload();\r\n        };\r\n\r\n        vm.select = function (fileItem) {\r\n            if (vm.disabled || !vm.enableSelect)\r\n                return;\r\n            $scope.updateCallback(fileItem);\r\n        };\r\n\r\n        vm.addFolder = function () {\r\n            if (vm.disabled)\r\n                return;\r\n            var folderName = window.prompt(\"Please enter a folder name\"); // todo i18n\r\n            if (folderName)\r\n                vm.svc.addFolder(folderName)\r\n                    .then(vm.refresh);\r\n        };\r\n\r\n        vm.del = function del(item) {\r\n            if (vm.disabled)\r\n                return;\r\n            var ok = window.confirm(\"Are you sure you want to delete this item?\"); // todo i18n\r\n            if (ok)\r\n                vm.svc.delete(item);\r\n        };\r\n\r\n        //#region Folder Navigation\r\n        vm.goIntoFolder = function (folder) {\r\n            var subFolder = vm.svc.goIntoFolder(folder);\r\n            vm.subFolder = subFolder;\r\n        };\r\n\r\n        vm.goUp = function () {\r\n            vm.subFolder = vm.svc.goUp();\r\n        };\r\n\r\n        vm.currentFolderDepth = function() {\r\n            return vm.svc.folders.length;\r\n        };\r\n\r\n        vm.allowCreateFolder = function() {\r\n            return vm.svc.folders.length < vm.folderDepth;\r\n        };\r\n\r\n        //#endregion\r\n\r\n        //#region Metadata\r\n        vm.editMetadata = function(item) {\r\n            var items = [\r\n                vm._itemDefinition(item, vm.getMetadataType(item))\r\n            ];\r\n\r\n            eavAdminDialogs.openEditItems(items, vm.refresh);\r\n\r\n        };\r\n\r\n        vm.getMetadataType = function(item) {\r\n            var found;\r\n\r\n            // check if it's a folder and if this has a special registration\r\n            if (item.Type === \"folder\") {\r\n                found = vm.metadataContentTypes.match(/^(folder)(:)([^\\n]*)/im);\r\n                if (found)\r\n                    return found[3];\r\n                else \r\n                    return null;\r\n            }\r\n\r\n            // check if the extension has a special registration\r\n            // -- not implemented yet\r\n\r\n            // check if the type \"image\" or \"document\" has a special registration\r\n            // -- not implemneted yet\r\n\r\n\r\n            // nothing found so far, go for the default with nothing as the prefix \r\n            found = vm.metadataContentTypes.match(/^([^:\\n]*)(\\n|$)/im);\r\n            if (found)\r\n                return found[1];\r\n\r\n            // this is if we don't find anything\r\n            return null;\r\n        };\r\n\r\n        // todo: move to service, shouldn't be part of the application\r\n        vm._itemDefinition = function (item, metadataType) {\r\n            var title = \"EditFormTitle.Metadata\"; // todo: i18n\r\n            return item.MetadataId !== 0\r\n                ? { EntityId: item.MetadataId, Title: title } // if defined, return the entity-number to edit\r\n                : {\r\n                    ContentTypeName: metadataType, // otherwise the content type for new-assegnment\r\n                    Metadata: {\r\n                        Key: (item.Type === \"folder\" ? \"folder\" : \"file\") + \":\" + item.Id,\r\n                        KeyType: \"string\",\r\n                        TargetType: eavConfig.metadataOfCmsObject\r\n                    },\r\n                    Title: title,\r\n                    Prefill: { EntityTitle: item.Name } // possibly prefill the entity title \r\n                };\r\n\r\n        };\r\n\r\n        //#endregion\r\n\r\n        //#region icons\r\n        vm.icon = function (item) {\r\n            return fileType.getIconClass(item.Name);\r\n        };\r\n        //#endregion\r\n\r\n        vm.activate();\r\n    }\r\n\r\n})();\r\n\n(function () {\r\n    /* jshint laxbreak:true*/\r\n\r\n    angular.module(\"Adam\")\r\n        /*@ngInject*/\r\n        .directive(\"adamBrowser\", function () {\r\n            return {\r\n                restrict: \"E\",\r\n                templateUrl: \"adam/browser.html\",\r\n\r\n                //replace: true,\r\n                transclude: false,\r\n                require: \"^dropzone\",\r\n                link: function postLink(scope, elem, attrs, dropzoneCtrl) {\r\n                    // connect this adam to the dropzone\r\n                    dropzoneCtrl.adam = scope.vm;       // so the dropzone controller knows what path etc.\r\n                    scope.vm.dropzone = dropzoneCtrl;   // so we can require an \"open file browse\" dialog\r\n                },\r\n\r\n                // todo: change \"scope\" to bindToController whenever I have time - http://blog.thoughtram.io/angularjs/2015/01/02/exploring-angular-1.3-bindToController.html\r\n                scope: {\r\n                    // Identity fields\r\n                    contentTypeName: \"=\",\r\n                    entityGuid: \"=\",\r\n                    fieldName: \"=\",\r\n\r\n                    // configuration general\r\n                    subFolder: \"=\",\r\n                    folderDepth: \"=\", \r\n                    metadataContentTypes: \"=\",\r\n                    allowAssetsInRoot: \"=\",\r\n                    showImagesOnly: \"=?\",\r\n\r\n                    // binding and cross-component communication\r\n                    autoLoad: \"=\",\r\n                    updateCallback: \"=\",\r\n                    registerSelf: \"=\",\r\n\r\n                    // basic functionality\r\n                    enableSelect: \"=\",\r\n                    ngDisabled: \"=\"\r\n                },\r\n                controller: \"BrowserController\",\r\n                controllerAs: \"vm\"\r\n\r\n            };\r\n        });\r\n})();\n(function() {\r\n    /* jshint laxbreak:true*/\r\n    angular.module(\"Adam\")\r\n        /*@ngInject*/\r\n        .directive(\"dropzoneUploadPreview\", function () {\r\n            return {\r\n                restrict: \"E\",\r\n                templateUrl: \"adam/dropzone-upload-preview.html\",\r\n                replace: true,\r\n                transclude: false\r\n            };\r\n        });\r\n})();\n/* js/fileAppDirectives */\r\n(function() {\r\n    angular.module(\"Adam\")\r\n        /*@ngInject*/\r\n        .directive(\"dropzone\", [\"sxc\", \"tabId\", \"AppInstanceId\", \"ContentBlockId\", \"dragClass\", \"adamSvc\", \"$timeout\", \"$translate\", function (sxc, tabId, AppInstanceId, ContentBlockId, dragClass, adamSvc, $timeout, $translate) {\r\n\r\n            return {\r\n                restrict: \"C\",\r\n                link: postLink,\r\n\r\n                // This controller is needed, because it needs an API which can talk to other directives\r\n                controller: controller\r\n            };\r\n\r\n\r\n            // this is the method called after linking the directive, which initializes Dropzone\r\n            function postLink(scope, element, attrs, controller) {\r\n                var header = scope.$parent.to.header;\r\n                var field = scope.$parent.options.key;\r\n                var entityGuid = header.Guid;\r\n                var svc = adamSvc(header.ContentTypeName, entityGuid, field, \"\");\r\n                var url = svc.url;\r\n\r\n                var config = {\r\n                    url: url,\r\n                    urlRoot: url,\r\n                    maxFilesize: 10000, // 10'000 MB = 10 GB, note that it will also be stopped on the server if it's larger than the really allowed sized\r\n                    paramName: \"uploadfile\",\r\n                    maxThumbnailFilesize: 10,\r\n\r\n                    headers: {\r\n                        \"ModuleId\": AppInstanceId,\r\n                        \"TabId\": tabId,\r\n                        \"ContentBlockId\": ContentBlockId\r\n                    },\r\n\r\n                    dictDefaultMessage: \"\",\r\n                    addRemoveLinks: false,\r\n                    previewsContainer: \".field-\" + field.toLowerCase() + \" .dropzone-previews\",\r\n                    // we need a clickable, because otherwise the entire area is clickable. so i'm just making the preview clickable, as it's not important\r\n                    clickable: \".field-\" + field.toLowerCase() + \" .invisible-clickable\" // \" .dropzone-adam\"\r\n                };\r\n\r\n\r\n                var eventHandlers = {\r\n                    'addedfile': function (file) {\r\n                        $timeout(function () {\r\n                            // anything you want can go here and will safely be run on the next digest.\r\n                            scope.$apply(function () { // this must run in a timeout\r\n                                scope.uploading = true;\r\n                            });\r\n                        });\r\n                    },\r\n\r\n                    \"processing\": function (file) {\r\n                        this.options.url = svc.uploadUrl(controller.adam.subFolder);\r\n                    },\r\n\r\n                    'success': function (file, response) {\r\n                        if (response.Success) {\r\n                            svc.addFullPath(response); // calculate additional infos\r\n                            scope.$parent.afterUpload(response);\r\n                        } else {\r\n                            alert(\"Upload failed because: \" + response.Error);\r\n                        }\r\n                    },\r\n                    'error': function (file, error, xhr) {\r\n                        alert($translate.instant(\"Errors.AdamUploadError\"));\r\n                    },\r\n\r\n                    \"queuecomplete\": function (file) {\r\n                        if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {\r\n                            scope.uploading = false;\r\n                            controller.adam.refresh();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // delay building the dropszone till the DOM is ready\r\n                $timeout(function () {\r\n                    var dropzone = new Dropzone(element[0], config);\r\n\r\n                    angular.forEach(eventHandlers, function(handler, event) {\r\n                        dropzone.on(event, handler);\r\n                    });\r\n\r\n                    scope.processDropzone = function() { dropzone.processQueue(); };\r\n                    scope.resetDropzone = function() { dropzone.removeAllFiles(); };\r\n                    controller.openUpload = function() { dropzone.hiddenFileInput.click(); };\r\n\r\n                }, 0);\r\n            }\r\n\r\n            /*@ngInject*/\r\n            function controller() {\r\n                var vm = this;\r\n                vm.adam = {\r\n                    show: false,\r\n                    subFolder: \"\",\r\n                    refresh: function () { }\r\n                };\r\n\r\n            }\r\n\r\n        }]);\r\n\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\t/* This app registers all field templates for 2sxc in the angularjs sxcFieldTemplates app */\r\n\r\n    angular.module(\"sxcFieldTemplates\", [\r\n        \"formly\",\r\n        \"formlyBootstrap\",\r\n        \"ui.bootstrap\",\r\n        \"ui.tree\",\r\n        \"2sxc4ng\",\r\n        \"SxcEditTemplates\",     // temp - was because of bad template-converter, remove once I update grunt\r\n        \"EavConfiguration\",\r\n        \"SxcServices\",\r\n        \"eavFieldTemplates\",\r\n        \"Adam\",\r\n        //\"ui.tinymce\",   // connector to tiny-mce for angular\r\n        \"oc.lazyLoad\"   // needed to lazy-load the MCE editor from the cloud\r\n    ]);\r\n\r\n})();\n// This is the service which allows opening dnn-bridge dialogs and processes the results\r\n\r\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"dnnBridgeSvc\", [\"$uibModal\", \"$http\", \"promiseToastr\", \"eavConfig\", \"sxc\", function ($uibModal, $http, promiseToastr, eavConfig, sxc) {\r\n        var svc = {};\r\n        svc.open = function open(type, oldValue, params, callback) {\r\n            var template = type === \"pagepicker\" ? \"pagepicker\" : \"filemanager\";\r\n\r\n            var connector = {\r\n                params: params,\r\n                valueChanged: callback,\r\n                dialogType: type\r\n            };\r\n\r\n            connector.valueChanged = function valueChanged(value, type) {\r\n                connector.modalInstance.close();\r\n                callback(value, type);\r\n            };\r\n\r\n            connector.params.CurrentValue = oldValue;\r\n\r\n            console.log(\"before open\");\r\n            console.log($uibModal);\r\n            connector.modalInstance = $uibModal.open({\r\n                templateUrl: \"fields/dnn-bridge/hyperlink-default-\" + template + \".html\",\r\n                resolve: {\r\n                    bridge: function () {\r\n                        return connector;\r\n                    }\r\n                },\r\n                /*@ngInject*/\r\n                controller: [\"$scope\", \"bridge\", function ($scope, bridge) {\r\n                    $scope.bridge = bridge;\r\n                }],\r\n                windowClass: \"sxc-dialog-filemanager\"\r\n            });\r\n            console.log(\"after open\");\r\n\r\n            return connector.modalInstance;\r\n        };\r\n\r\n        // convert the url to a Id-code\r\n        svc.convertPathToId = function(path, type) {\r\n            var pathWithoutVersion = path.replace(/\\?ver=[0-9\\-]*$/gi, \"\");\r\n            // todo: working on https://github.com/2sic/2sxc/issues/656 but can't reproduce error\r\n            // this is why I tried ignoreErrors and promisetoaster, but atm there is nothing to work on...\r\n            var promise = $http.get(\"dnn/Hyperlink/GetFileByPath?relativePath=\" + encodeURIComponent(pathWithoutVersion),\r\n            {\r\n                //ignoreErrors: true\r\n            });\r\n            return promiseToastr(promise, \"Edit.Field.Hyperlink.Message.Loading\", \"Edit.Field.Hyperlink.Message.Ok\", \"Edit.Field.Hyperlink.Message.Error\", 0, 0, 1000);\r\n        };\r\n\r\n        // handle short-ID links like file:17\r\n        svc.getUrlOfId = function(idCode) {\r\n            var linkLowered = idCode.toLowerCase();\r\n            if (linkLowered.indexOf(\"file:\") !== -1 || linkLowered.indexOf(\"page:\") !== -1)\r\n                return $http.get(\"dnn/Hyperlink/ResolveHyperlink?hyperlink=\" + encodeURIComponent(idCode));\r\n            return null;\r\n        };\r\n\r\n        return svc;\r\n\r\n    }]);\n\r\n// this is in charge of the iframe which shows the dnn-bridge components\r\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\tangular.module(\"sxcFieldTemplates\")\r\n\r\n\r\n    /*@ngInject*/\r\n\t.directive(\"webFormsBridge\", [\"sxc\", \"portalRoot\", function (sxc, portalRoot) {\r\n\t    var webFormsBridgeUrl = portalRoot + \"Default.aspx?tabid=\" + $2sxc.urlParams.require(\"tid\") + \"&ctl=webformsbridge&mid=\" + sxc.id + \"&dnnprintmode=true&SkinSrc=%5bG%5dSkins%2f_default%2fNo+Skin&ContainerSrc=%5bG%5dContainers%2f_default%2fNo+Container\"; //\"&popUp=true\";\r\n\r\n\t\treturn {\r\n\t\t\trestrict: \"A\",\r\n\t\t\tscope: {\r\n\t\t\t\ttype: \"@bridgeType\",\r\n\t\t\t\tbridge: \"=webFormsBridge\",\r\n\t\t\t\tbridgeSyncHeight: \"@bridgeSyncHeight\"\r\n\t\t\t},\r\n\t\t\tlink: function (scope, elem, attrs) {\r\n\r\n\t\t\t    var params = \"\";\r\n\t\t\t    if (scope.bridge.params) {\r\n\t\t\t        params = Object.keys(scope.bridge.params).map(function (prop) {\r\n\t\t\t            if (scope.bridge.params[prop] === null || scope.bridge.params[prop] === '')\r\n\t\t\t                return;\r\n\t\t\t            return [prop, scope.bridge.params[prop]].map(encodeURIComponent).join(\"=\");\r\n\t\t\t        }).join(\"&\");\r\n\t\t\t    }\r\n\r\n\t\t\t    elem[0].src = webFormsBridgeUrl + \"&type=\" + scope.type + (scope.bridge.params ? \"&\" + params : \"\");\r\n\t\t\t\telem.on(\"load\", function () {\t\t\t\t\t\r\n\t\t\t\t    var w = elem[0].contentWindow || elem[0];\r\n                    // test if the connectBridge works, if not, it's usually a telerik-not-installed issue\r\n\t\t\t\t    if (!w.connectBridge)\r\n\t\t\t\t        return alert(\"can't connect to the dialog - you are probably running a new DNN (v.8+) and didn't activate the old Telerik components. Please install these in the host > extensions to get this to work\");\r\n\t\t\t\t    \r\n\t\t\t\t\tw.connectBridge(scope.bridge);\r\n\r\n\t\t\t\t\t// Sync height\r\n\t\t\t\t\tif (scope.bridgeSyncHeight === \"true\") {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar resize = function () {\r\n\t\t\t\t\t\t\telem.css(\"height\", \"\");\r\n\t\t\t\t\t\t\telem.css(\"height\", w.document.body.scrollHeight + \"px\");\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t//w.$(w).resize(resize); // Performance issues when uncommenting this line...\r\n\t\t\t\t\t\tresize();\r\n\t\t\t\t\t\tw.$(w.document).ready(function() {\r\n\t\t\t\t\t\t\tresize();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tw.$(w.document).on('triggerbridgeresize', function () {\r\n\t\t\t\t\t\t    window.setTimeout(resize, 0);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t}]);\r\n\r\n})();\n(function() {\r\n    \"use strict\";\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function(formlyConfigProvider) {\r\n\r\n            formlyConfigProvider.setType({\r\n                name: \"entity-content-blocks\",\r\n                templateUrl: \"fields/entity/entity-default.html\",\r\n                wrapper: [\"eavLabel\", \"bootstrapHasError\", \"collapsible\"],\r\n                controller: \"FieldTemplate-EntityContentBlockCtrl\"\r\n            });\r\n        }])\r\n        /*@ngInject*/\r\n        .controller(\"FieldTemplate-EntityContentBlockCtrl\", [\"$controller\", \"$scope\", \"$http\", \"$filter\", \"$translate\", \"$uibModal\", \"appId\", \"eavAdminDialogs\", \"eavDefaultValueService\", function($controller, $scope, $http, $filter, $translate, $uibModal, appId, eavAdminDialogs, eavDefaultValueService) {\r\n            $scope.to.settings.merged.EnableRemove = true;\r\n            $scope.to.settings.merged.AllowMultiValue = true; // for correct UI showing \"remove\"\r\n            $scope.to.settings.merged.EnableAddExisting = false; // disable manual select existing\r\n            $scope.to.settings.merged.EnableCreate = false;         // disable manual create\r\n            $scope.to.settings.merged.EnableEdit = false;\r\n            $scope.to.settings.merged.EntityType = \"ContentGroupReference\";\r\n            $scope.to.enableCollapseField = true;   // ui option to allow collapsing\r\n            $scope.to.collapseField = true;   // ui option to allow collapsing\r\n\r\n\r\n            // use \"inherited\" controller just like described in http://stackoverflow.com/questions/18461263/can-an-angularjs-controller-inherit-from-another-controller-in-the-same-module\r\n            $controller(\"FieldTemplate-EntityCtrl\", { $scope: $scope });\r\n\r\n            // do something with the values...\r\n            var vals = $scope.model[$scope.options.key].Values[0].Value;\r\n\r\n            //addCSSRule(\"div\", \"background-color: pink\");\r\n        }]);\r\n\r\n    function addCSSRule(selector, rules, index) {\r\n        var sheet = document.styleSheets[0];\r\n        if (\"insertRule\" in sheet) {\r\n            sheet.insertRule(selector + \"{\" + rules + \"}\", index);\r\n        }\r\n        else if (\"addRule\" in sheet) {\r\n            sheet.addRule(selector, rules, index);\r\n        }\r\n    }\r\n\r\n})();\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", \"fieldWrappersWithPreview\", function (formlyConfigProvider, fieldWrappersWithPreview) {\r\n\r\n            formlyConfigProvider.setType({\r\n                name: \"hyperlink-default\",\r\n                templateUrl: \"fields/hyperlink/hyperlink-default.html\",\r\n                wrapper: fieldWrappersWithPreview,\r\n                controller: \"FieldTemplate-HyperlinkCtrl as vm\"\r\n            });\r\n        }])\r\n        /*@ngInject*/\r\n        .controller(\"FieldTemplate-HyperlinkCtrl\", [\"$uibModal\", \"$scope\", \"$http\", \"sxc\", \"adamSvc\", \"debugState\", \"dnnBridgeSvc\", \"fileType\", function ($uibModal, $scope, $http, sxc, adamSvc, debugState, dnnBridgeSvc, fileType) {\r\n\r\n            var vm = this;\r\n            vm.debug = debugState;\r\n            vm.testLink = \"\";\r\n\r\n            vm.isImage = function () { return fileType.isImage(vm.testLink); };\r\n            vm.thumbnailUrl = function thumbnailUrl(size, quote) {\r\n                var result = vm.testLink;\r\n                if (size === 1)\r\n                    result = result + \"?w=64&h=64&mode=crop\";\r\n                if (size === 2)\r\n                    result = result + \"?w=500&h=400&mode=max\";\r\n                var qt = quote ? \"\\\"\" : \"\";\r\n                return qt + result + qt;\r\n            };\r\n\r\n            vm.icon = function () { return fileType.getIconClass(vm.testLink); };\r\n            vm.tooltipUrl = function (str) { return str.replace(/\\//g, \"/&#8203;\"); };\r\n\r\n            function ensureDefaultConfig() {\r\n                var merged = $scope.to.settings.merged;\r\n                if (merged.ShowAdam === undefined || merged.ShowAdam === null) merged.ShowAdam = true;\r\n                if (merged.Buttons === undefined || merged.Buttons === null) merged.Buttons = \"adam,more\";\r\n            }\r\n\r\n            ensureDefaultConfig();\r\n\r\n            // Update test-link if necessary - both when typing or if link was set by dialogs\r\n            $scope.$watch(\"value.Value\", function(newValue, oldValue) {\r\n                if (!newValue)\r\n                    return;\r\n\r\n                // handle short-ID links like file:17\r\n                var promise = dnnBridgeSvc.getUrlOfId(newValue);\r\n                if(promise)\r\n                    promise.then(function (result) {\r\n                        if (result.data) \r\n                            vm.testLink = result.data;\r\n                    });\r\n                else \r\n                    vm.testLink = newValue;\r\n            });\r\n\r\n            //#region dnn-bridge dialogs\r\n\r\n            // the callback when something was selected\r\n            vm.processResultOfDnnBridge = function(value, type) {\r\n                $scope.$apply(function() {\r\n                    if (!value) return;\r\n                    \r\n                    // Convert file path to file ID if type file is specified\r\n                    if (type === \"page\") {\r\n                        $scope.value.Value = \"page:\" + value.id;\r\n                    }\r\n                    if (type === \"file\" || type === \"image\") {\r\n                        dnnBridgeSvc.convertPathToId(value, type)\r\n                            .then(function (result) {\r\n                                $scope.value.Value = (result.data)\r\n                                    ? \"file:\" + result.data.FileId // default case, found number for this\r\n                                    : value; // this happens when it couldn't be resolved, for example on a secure file ticket\r\n                            });\r\n                    }\r\n                });\r\n            };\r\n\r\n            // open the dialog\r\n            vm.openDialog = function (type) {\r\n                dnnBridgeSvc.open(\r\n                    type,\r\n                    $scope.value.Value,\r\n                    {\r\n                        Paths: $scope.to.settings.merged ? $scope.to.settings.merged.Paths : \"\",\r\n                        FileFilter: $scope.to.settings.merged ? $scope.to.settings.merged.FileFilter : \"\"\r\n                    },\r\n                    vm.processResultOfDnnBridge);\r\n            };\r\n\r\n            //#region new adam: callbacks only\r\n            vm.registerAdam = function(adam) {\r\n                vm.adam = adam;\r\n            };\r\n            vm.setValue = function(fileItem) {\r\n                $scope.value.Value = \"File:\" + fileItem.Id;\r\n            };\r\n\r\n            $scope.afterUpload = vm.setValue;   // binding for dropzone\r\n\r\n            vm.toggleAdam = function toggle() {\r\n                vm.adam.toggle();\r\n            };\r\n\r\n            //#endregion\r\n\r\n\r\n        }]);\r\n\r\n\r\n})();\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", \"defaultFieldWrappersNoFloat\", function (formlyConfigProvider, defaultFieldWrappersNoFloat) {\r\n\r\n            formlyConfigProvider.setType({\r\n                name: \"hyperlink-library\",\r\n                templateUrl: \"fields/hyperlink/hyperlink-library.html\",\r\n                // todo: check if we could use the defaultFieldWrappers instead\r\n                wrapper: defaultFieldWrappersNoFloat,// [\"eavLabel\", \"bootstrapHasError\", \"eavLocalization\", \"collapsible\"],\r\n                controller: \"FieldTemplate-Library as vm\"\r\n            });\r\n\r\n        }])\r\n        /*@ngInject*/\r\n        .controller(\"FieldTemplate-Library\", [\"$uibModal\", \"$scope\", \"$http\", \"sxc\", \"adamSvc\", \"debugState\", function ($uibModal, $scope, $http, sxc, adamSvc, debugState) {\r\n\r\n            var vm = this;\r\n            vm.debug = debugState;\r\n            vm.modalInstance = null;\r\n            vm.testLink = \"\";\r\n\r\n            //#region new adam: callbacks only\r\n            vm.registerAdam = function(adam) {\r\n                vm.adam = adam;\r\n            };\r\n            //vm.setValue = function(url) {\r\n            //    $scope.value.Value = url;\r\n            //};\r\n            $scope.afterUpload = function(fileItem) {};\r\n\r\n            vm.toggleAdam = function toggle() {\r\n                vm.adam.toggle();\r\n            };\r\n\r\n            //#endregion\r\n\r\n\r\n        }]);\r\n\r\n\r\n})();\n/**\r\n * Binds a TinyMCE widget to <textarea> elements.\r\n */\r\nangular.module('sxcFieldTemplates')\r\n    .value('uiTinymceConfig', {})\r\n    .directive('uiTinymceTwo', ['$rootScope', '$compile', '$timeout', '$window', '$sce', 'uiTinymceConfig', 'uiTinymceService', function ($rootScope, $compile, $timeout, $window, $sce, uiTinymceConfig, uiTinymceService) {\r\n        uiTinymceConfig = uiTinymceConfig || {};\r\n\r\n        if (uiTinymceConfig.baseUrl) {\r\n            tinymce.baseURL = uiTinymceConfig.baseUrl;\r\n        }\r\n\r\n        return {\r\n            require: ['ngModel', '^?form'],\r\n            priority: 599,\r\n            link: function (scope, element, attrs, ctrls) {\r\n                if (!$window.tinymce) {\r\n                    return;\r\n                }\r\n\r\n                var ngModel = ctrls[0],\r\n                    form = ctrls[1] || null;\r\n\r\n                var expression, options = {\r\n                    debounce: true\r\n                }, tinyInstance,\r\n                    updateView = function (editor) {\r\n                        var content = editor.getContent({ format: options.format }).trim();\r\n                        content = $sce.trustAsHtml(content);\r\n\r\n                        ngModel.$setViewValue(content);\r\n                        if (!$rootScope.$$phase) {\r\n                            scope.$digest();\r\n                        }\r\n                    };\r\n\r\n                function toggleDisable(disabled) {\r\n                    if (disabled) {\r\n                        ensureInstance();\r\n\r\n                        if (tinyInstance) {\r\n                            tinyInstance.getBody().setAttribute('contenteditable', false);\r\n                        }\r\n                    } else {\r\n                        ensureInstance();\r\n\r\n                        if (tinyInstance && !tinyInstance.settings.readonly && tinyInstance.getDoc()) {\r\n                            tinyInstance.getBody().setAttribute('contenteditable', true);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // fetch a unique ID from the service\r\n                var uniqueId = uiTinymceService.getUniqueId();\r\n                attrs.$set('id', uniqueId);\r\n\r\n                expression = {};\r\n\r\n                angular.extend(expression, scope.$eval(attrs.uiTinymceTwo));\r\n\r\n                //Debounce update and save action\r\n                var debouncedUpdate = (function (debouncedUpdateDelay) {\r\n                    var debouncedUpdateTimer;\r\n                    return function (ed) {\r\n                        $timeout.cancel(debouncedUpdateTimer);\r\n                        debouncedUpdateTimer = $timeout(function () {\r\n                            return (function (ed) {\r\n                                if (ed.isDirty()) {\r\n                                    ed.save();\r\n                                    updateView(ed);\r\n                                }\r\n                            })(ed);\r\n                        }, debouncedUpdateDelay);\r\n                    };\r\n                })(400);\r\n\r\n                var setupOptions = {\r\n                    // Update model when calling setContent\r\n                    // (such as from the source editor popup)\r\n                    setup: function (ed) {\r\n                        ed.on('init', function () {\r\n                            ngModel.$render();\r\n                            ngModel.$setPristine();\r\n                            ngModel.$setUntouched();\r\n                            if (form) {\r\n                                form.$setPristine();\r\n                            }\r\n                        });\r\n\r\n                        // Update model when:\r\n                        // - a button has been clicked [ExecCommand]\r\n                        // - the editor content has been modified [change]\r\n                        // - the node has changed [NodeChange]\r\n                        // - an object has been resized (table, image) [ObjectResized]\r\n                        ed.on('ExecCommand change NodeChange ObjectResized', function () {\r\n                            if (options.debounce) debouncedUpdate(ed);\r\n                            else if (ed.isDirty()) {\r\n                                ed.save();\r\n                                updateView(ed);\r\n                            }\r\n                        });\r\n\r\n                        ed.on('blur', function () {\r\n                            element[0].blur();\r\n                            ngModel.$setTouched();\r\n                            if (!$rootScope.$$phase) {\r\n                                scope.$digest();\r\n                            }\r\n                        });\r\n\r\n                        ed.on('remove', function () {\r\n                            element.remove();\r\n                        });\r\n\r\n                        if (uiTinymceConfig.setup) {\r\n                            uiTinymceConfig.setup(ed, {\r\n                                updateView: updateView\r\n                            });\r\n                        }\r\n\r\n                        if (expression.setup) {\r\n                            expression.setup(ed, {\r\n                                updateView: updateView\r\n                            });\r\n                        }\r\n                    },\r\n                    format: expression.format || 'html',\r\n                    selector: '#' + attrs.id\r\n                };\r\n                // extend options with initial uiTinymceConfig and\r\n                // options from directive attribute value\r\n                angular.extend(options, uiTinymceConfig, expression, setupOptions);\r\n                // Wrapped in $timeout due to $tinymce:refresh implementation, requires\r\n                // element to be present in DOM before instantiating editor when\r\n                // re-rendering directive\r\n                $timeout(function () {\r\n                    if (options.baseURL) {\r\n                        tinymce.baseURL = options.baseURL;\r\n                    }\r\n                    var maybeInitPromise = tinymce.init(options);\r\n                    if (maybeInitPromise && typeof maybeInitPromise.then === 'function') {\r\n                        maybeInitPromise.then(function () {\r\n                            toggleDisable(scope.$eval(attrs.ngDisabled));\r\n                        });\r\n                    } else {\r\n                        toggleDisable(scope.$eval(attrs.ngDisabled));\r\n                    }\r\n                });\r\n\r\n                ngModel.$formatters.unshift(function (modelValue) {\r\n                    return modelValue ? $sce.trustAsHtml(modelValue) : '';\r\n                });\r\n\r\n                ngModel.$parsers.unshift(function (viewValue) {\r\n                    return viewValue ? $sce.getTrustedHtml(viewValue) : '';\r\n                });\r\n\r\n                ngModel.$render = function () {\r\n                    ensureInstance();\r\n\r\n                    var viewValue = ngModel.$viewValue ?\r\n                        $sce.getTrustedHtml(ngModel.$viewValue) : '';\r\n\r\n                    // instance.getDoc() check is a guard against null value\r\n                    // when destruction & recreation of instances happen\r\n                    if (tinyInstance &&\r\n                        tinyInstance.getDoc()\r\n                    ) {\r\n                        tinyInstance.setContent(viewValue);\r\n                        // Triggering change event due to TinyMCE not firing event &\r\n                        // becoming out of sync for change callbacks\r\n                        tinyInstance.fire('change');\r\n                    }\r\n                };\r\n\r\n                attrs.$observe('disabled', toggleDisable);\r\n\r\n                // This block is because of TinyMCE not playing well with removal and\r\n                // recreation of instances, requiring instances to have different\r\n                // selectors in order to render new instances properly\r\n                scope.$on('$tinymce:refresh', function (e, id) {\r\n                    var eid = attrs.id;\r\n                    if (angular.isUndefined(id) || id === eid) {\r\n                        var parentElement = element.parent();\r\n                        var clonedElement = element.clone();\r\n                        clonedElement.removeAttr('id');\r\n                        clonedElement.removeAttr('style');\r\n                        clonedElement.removeAttr('aria-hidden');\r\n                        tinymce.execCommand('mceRemoveEditor', false, eid);\r\n                        parentElement.append($compile(clonedElement)(scope));\r\n                    }\r\n                });\r\n\r\n                scope.$on('$destroy', function () {\r\n                    ensureInstance();\r\n\r\n                    if (tinyInstance) {\r\n                        tinyInstance.remove();\r\n                        tinyInstance = null;\r\n                    }\r\n                });\r\n\r\n                function ensureInstance() {\r\n                    if (!tinyInstance) {\r\n                        tinyInstance = tinymce.get(attrs.id);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }])\r\n    .service('uiTinymceService', [\r\n        /**\r\n         * A service is used to create unique ID's, this prevents duplicate ID's if there are multiple editors on screen.\r\n         */\r\n        function () {\r\n            var UITinymceService = function () {\r\n                var ID_ATTR = 'ui-tinymce';\r\n                // uniqueId keeps track of the latest assigned ID\r\n                var uniqueId = 0;\r\n                // getUniqueId returns a unique ID\r\n                var getUniqueId = function () {\r\n                    uniqueId++;\r\n                    return ID_ATTR + '-' + uniqueId;\r\n                };\r\n                // return the function as a public method of the service\r\n                return {\r\n                    getUniqueId: getUniqueId\r\n                };\r\n            };\r\n            // return a new instance of the service\r\n            return new UITinymceService();\r\n        }\r\n    ]);\n/*!\r\nMath.uuid.js (v1.4)\r\nhttp://www.broofa.com\r\nmailto:robert@broofa.com\r\n\r\nCopyright (c) 2010 Robert Kieffer\r\nDual licensed under the MIT and GPL licenses.\r\n*/\r\n\r\n/*\r\n * Generate a random uuid.\r\n *\r\n * USAGE: Math.uuid(length, radix)\r\n *   length - the desired number of characters\r\n *   radix  - the number of allowable values for each character.\r\n *\r\n * EXAMPLES:\r\n *   // No arguments  - returns RFC4122, version 4 ID\r\n *   >>> Math.uuid()\r\n *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\r\n *\r\n *   // One argument - returns ID of the specified length\r\n *   >>> Math.uuid(15)     // 15 character ID (default base=62)\r\n *   \"VcydxgltxrVZSTV\"\r\n *\r\n *   // Two arguments - returns ID of the specified length, and radix. (Radix must be <= 62)\r\n *   >>> Math.uuid(8, 2)  // 8 character ID (base=2)\r\n *   \"01001010\"\r\n *   >>> Math.uuid(8, 10) // 8 character ID (base=10)\r\n *   \"47473046\"\r\n *   >>> Math.uuid(8, 16) // 8 character ID (base=16)\r\n *   \"098F4D35\"\r\n */\r\n(function () {\r\n    // Private array of chars to use\r\n    var CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\r\n\r\n    Math.uuid = function (len, radix) {\r\n        var chars = CHARS, uuid = [], i;\r\n        radix = radix || chars.length;\r\n\r\n        if (len) {\r\n            // Compact form\r\n            for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix];\r\n        } else {\r\n            // rfc4122, version 4 form\r\n            var r;\r\n\r\n            // rfc4122 requires these characters\r\n            uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\r\n            uuid[14] = '4';\r\n\r\n            // Fill in random data.  At i==19 set the high bits of clock sequence as\r\n            // per rfc4122, sec. 4.1.5\r\n            for (i = 0; i < 36; i++) {\r\n                if (!uuid[i]) {\r\n                    r = 0 | Math.random() * 16;\r\n                    uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n                }\r\n            }\r\n        }\r\n\r\n        return uuid.join('');\r\n    };\r\n\r\n    // A more performant, but slightly bulkier, RFC4122v4 solution.  We boost performance\r\n    // by minimizing calls to random()\r\n    Math.uuidFast = function () {\r\n        var chars = CHARS, uuid = new Array(36), rnd = 0, r;\r\n        for (var i = 0; i < 36; i++) {\r\n            if (i == 8 || i == 13 || i == 18 || i == 23) {\r\n                uuid[i] = '-';\r\n            } else if (i == 14) {\r\n                uuid[i] = '4';\r\n            } else {\r\n                if (rnd <= 0x02) rnd = 0x2000000 + (Math.random() * 0x1000000) | 0;\r\n                r = rnd & 0xf;\r\n                rnd = rnd >> 4;\r\n                uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n            }\r\n        }\r\n        return uuid.join('');\r\n    };\r\n\r\n    // A more compact, but less performant, RFC4122v4 solution:\r\n    Math.uuidCompact = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n})();\n/* \r\n * Field: String - font-icon picker\r\n */\r\n\r\nangular.module(\"sxcFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"fieldWrappersWithPreview\", function (formlyConfigProvider, fieldWrappersWithPreview) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"string-font-icon-picker\",\r\n            templateUrl: \"fields/string/string-font-icon-picker.html\",\r\n            wrapper: fieldWrappersWithPreview,\r\n            controller: \"FieldTemplate-String-Font-Icon-Picker as vm\"\r\n        });\r\n\r\n    }])\r\n    /*@ngInject*/\r\n    .controller(\"FieldTemplate-String-Font-Icon-Picker\", [\"$scope\", \"debugState\", \"$ocLazyLoad\", \"appRoot\", function ($scope, debugState, $ocLazyLoad, appRoot) {\r\n        var vm = angular.extend(this, {\r\n            iconFilter: \"\", // used for in-line search\r\n            prefix: \"\", // used to find the right css-classes\r\n            previewPrefix: \"\", // used to preview the icon, in addition to the built-in class\r\n            icons: [], // list of icons, to be filled\r\n            useTestValues: false, // to prefill with test-values, in case needed\r\n            selectorIsOpen: false\r\n    });\r\n\r\n\r\n        //#region icon css-class-methods\r\n        function getIconClasses(className) {\r\n            var charcount = className.length, foundList = [], duplicateDetector = {};\r\n            if (!className) return foundList;\r\n            for (var ssSet = 0; ssSet < document.styleSheets.length; ssSet++) {\r\n                var classes = document.styleSheets[ssSet].rules || document.styleSheets[ssSet].cssRules;\r\n                if(classes)\r\n                    for (var x = 0; x < classes.length; x++)\r\n                        if (classes[x].selectorText && classes[x].selectorText.substring(0, charcount) === className) {\r\n                            // prevent duplicate-add...\r\n                            var txt = classes[x].selectorText,\r\n                                icnClass = txt.substring(0, txt.indexOf(\":\")).replace(\".\", \"\");\r\n                            if (!duplicateDetector[icnClass]) {\r\n                                foundList.push({ rule: classes[x], 'class': icnClass });\r\n                                duplicateDetector[icnClass] = true;\r\n                            }\r\n                        }\r\n            }\r\n            return foundList;\r\n        }\r\n\r\n//#endregion\r\n\r\n        //#region load additional resources\r\n        function loadAdditionalResources(files) {\r\n            files = files || \"\";\r\n            var mapped = files.replace(\"[App:Path]\", appRoot)\r\n                .replace(/([\\w])\\/\\/([\\w])/g,   // match any double // but not if part of https or just \"//\" at the beginning\r\n                \"$1/$2\");\r\n            var fileList = mapped ? mapped.split(\"\\n\") : [];\r\n            return $ocLazyLoad.load(fileList);\r\n        }\r\n        //#endregion\r\n\r\n        vm.setIcon = function(newValue) {\r\n            $scope.value.Value = newValue;\r\n            vm.selectorIsOpen = false;\r\n            //$scope.status.isopen = false;\r\n            $scope.form.$setDirty();\r\n        };\r\n\r\n        vm.activate = function() {\r\n            // get configured\r\n            var controlSettings = $scope.to.settings[\"string-font-icon-picker\"];\r\n            vm.files = (controlSettings) ? controlSettings.Files || \"\" : \"\";\r\n            vm.prefix = (controlSettings) ? controlSettings.CssPrefix || \"\" : \"\";\r\n            vm.previewPrefix = (controlSettings) ? controlSettings.PreviewCss || \"\" : \"\";\r\n\r\n            if (vm.useTestValues)\r\n                angular.extend(vm, {\r\n                    iconFilter: \"\",\r\n                    prefix: \".glyphicon-\",\r\n                    previewPrefix: \"glyphicon\",\r\n                });\r\n\r\n            // load all additional css, THEN load the icons\r\n            loadAdditionalResources(vm.files).then(function() {\r\n                // load the icons\r\n                vm.icons = getIconClasses(vm.prefix);\r\n\r\n            });\r\n\r\n            vm.debug = debugState;\r\n            if (debugState.on) console.log($scope.options.templateOptions);\r\n        };\r\n\r\n        vm.activate();\r\n    }]);\n// This isn't fully nice, but it's the code used by the template picker elements\r\n// it's outsourced here, to ensure that code revisions are clear and api consistent\r\n// because the previous version had the code inside the field-config\r\n// and was highly dependent on the angular/formly API, which changes a bit from time to time\r\n// this makes it easier to keep it in sync\r\n\r\n// I'll have to think of a better way to provide/inject this in the future...\r\n\r\n// must find out if we're in App or Content before we do more...\r\n\r\n(function () {\r\n    var cs = {\r\n        init: function(context) {\r\n            cs.context = context;\r\n\r\n            // get angular injector to get a service\r\n            var inj = context.$injector;\r\n\r\n            var appDialogConfigSvc = inj.get(\"appDialogConfigSvc\");\r\n\r\n            appDialogConfigSvc.getDialogSettings().then(function(result) {\r\n                var config = result.data;\r\n                // if this is a content-app, disable two fields\r\n                if (config.IsContent) {\r\n                    //disable current field\r\n                    context.formVm.formFields[context.field.SortOrder].templateOptions.disabled = true;\r\n                    // do the same for the data-field (field 20)\r\n                    context.formVm.formFields[20].templateOptions.disabled = true;\r\n                }\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    window[\"2sxc-template-picker-custom-script-for-name-field\"] = cs;\r\n})();\n/* \r\n * Field: String - Dropdown\r\n */\r\n\r\nangular.module(\"sxcFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function(formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"string-template-picker\",\r\n            templateUrl: \"fields/string/string-template-picker.html\",\r\n            wrapper: defaultFieldWrappers,\r\n            controller: \"FieldTemplate-String-TemplatePicker\"\r\n        });\r\n\r\n    }])\r\n    /*@ngInject*/\r\n    .controller(\"FieldTemplate-String-TemplatePicker\", [\"$scope\", \"appAssetsSvc\", \"appId\", \"fieldMask\", function ($scope, appAssetsSvc, appId, fieldMask) {\r\n\r\n        function activate() {\r\n            // ensure settings are merged\r\n            if (!$scope.to.settings.merged)\r\n                $scope.to.settings.merged = {};\r\n\r\n            $scope.setFileConfig(\"Token\"); // use token setting as default, till the UI tells us otherwise\r\n\r\n            // clean up existing paths, because some used \"/\" and some \"\\\" for paths, so it wouldn't match in the drop-down\r\n            if ($scope.options && $scope.options.value())\r\n                angular.forEach($scope.options.value().Values, function(v, i) {\r\n                    v.Value = v.Value.replace(\"\\\\\", \"/\");\r\n                });\r\n            \r\n\r\n            // set change-watchers to the other values\r\n            $scope.typeWatcher = fieldMask(\"[Type]\", $scope, $scope.setFileConfig);\r\n            $scope.locWatcher = fieldMask(\"[Location]\", $scope, $scope.onLocationChange);\r\n\r\n            // create initial list for binding\r\n            $scope.templates = [];\r\n\r\n            $scope.svcApp = appAssetsSvc(appId, false);\r\n            $scope.svcGlobal = appAssetsSvc(appId, true);\r\n\r\n            $scope.onLocationChange(); // set initial file list\r\n            //$scope.templates = $scope.svcApp.liveList();\r\n        }\r\n\r\n        $scope.readyToUse = function() {\r\n            return $scope.typeWatcher.value && $scope.locWatcher.value; // check if these have real values inside\r\n        };\r\n\r\n        $scope.setFileConfig = function (type) {\r\n            var specs = {\r\n                \"Token\": { ext: \".html\", prefix: \"\", suggestion: \"yourfile.html\", body: \"<p>You successfully created your own template. Start editing it by hovering the \\\"Manage\\\" button and opening the \\\"Edit Template\\\" dialog.</p>\" },\r\n                \"C# Razor\": { ext: \".cshtml\", prefix: \"_\", suggestion: \"_yourfile.cshtml\", body: \"<p>You successfully created your own template. Start editing it by hovering the \\\"Manage\\\" button and opening the \\\"Edit Template\\\" dialog.</p>\" }\r\n            };\r\n            $scope.file = specs[type];\r\n\r\n        };\r\n\r\n        // when the watcher says the location changed, reset stuff\r\n        $scope.onLocationChange = function(loc) {\r\n            $scope.svcCurrent = (loc === \"Host File System\") \r\n                ? $scope.svcGlobal\r\n                : $scope.svcApp;\r\n\r\n            $scope.templates = $scope.svcCurrent.liveList();\r\n        };\r\n\r\n        // ask for a new file name and \r\n        $scope.add = function() {\r\n            var fileName = prompt(\"enter new file name\", $scope.file.suggestion); // todo: i18n\r\n\r\n            if (!fileName)\r\n                return;\r\n\r\n            // 1. check for folders\r\n            var path = \"\";\r\n            fileName = fileName.replace(\"\\\\\", \"/\");\r\n            var foundSlash = fileName.lastIndexOf(\"/\");\r\n            if (foundSlash > -1) {\r\n                path = fileName.substring(0, foundSlash + 1); // path with slash\r\n                fileName = fileName.substring(foundSlash + 1);\r\n            }\r\n\r\n            // 2. check if extension already provided, otherwise or if not perfect, just attach default\r\n            if (!fileName.endsWith($scope.file.ext))// fileName.indexOf($scope.fileExt) !== fileName.length - $scope.fileExt.length)\r\n                fileName += $scope.file.ext;\r\n\r\n            // 3. check if cshtmls have a \"_\" in the file name (not folder, must be the file name part)\r\n            if ($scope.file.prefix !== \"\" && fileName[0] !== $scope.file.prefix)\r\n                fileName = $scope.file.prefix + fileName;\r\n\r\n            var fullPath = path + fileName;\r\n            console.log(fullPath);\r\n\r\n            // 4. tell service to create it\r\n            $scope.svcCurrent.create(fullPath, $scope.file.body)\r\n                .then(function() {\r\n                    $scope.value.Value = fullPath; // set the dropdown to the new file\r\n                });\r\n        };\r\n\r\n        activate();\r\n\r\n    }])\r\n\r\n    // filter to only show files which are applicable to this\r\n    .filter(\"isValidFile\", function() {\r\n\r\n        // Create the return function\r\n        // set the required parameter name to **number**\r\n        return function(paths, ext) {\r\n            var out = [];\r\n            angular.forEach(paths, function(path) {\r\n                if (path.slice(path.length - ext.length) === ext)\r\n                    out.push(path);\r\n            });\r\n            return out;\r\n        };\r\n    });\r\n\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\t/* This app registers all field templates for 2sxc in the angularjs sxcFieldTemplates app */\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function(formlyConfigProvider) {\r\n\r\n            // for now identical with -adv, but later will change\r\n            formlyConfigProvider.setType({\r\n                name: \"string-wysiwyg-adv\",\r\n                templateUrl: \"fields/string/string-wysiwyg-adv.html\",\r\n                // todo: check if we could use the defaultFieldWrappers instead\r\n                wrapper: [\"eavLabel\", \"bootstrapHasError\", \"eavLocalization\", \"collapsible\"]\r\n            });\r\n\r\n\r\n        }]);\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\t/* This app registers all field templates for 2sxc in the angularjs sxcFieldTemplates app */\r\n\r\n\tangular.module(\"sxcFieldTemplates\")\r\n\r\n    .config([\"formlyConfigProvider\", function (formlyConfigProvider) {\r\n\r\n        // for now identical with -adv, but later will change\r\n\t\tformlyConfigProvider.setType({\r\n\t\t\tname: \"string-wysiwyg-dnn\",\r\n\t\t\ttemplateUrl: \"fields/string/string-wysiwyg-dnn.html\",\r\n\t\t    // todo: check if we could use the defaultFieldWrappers instead\r\n\t\t\twrapper: [\"eavLabel\", \"bootstrapHasError\", \"eavLocalization\", \"collapsible\"],\r\n\t\t\tcontroller: \"FieldTemplate-WysiwygCtrl as vm\"\r\n\t\t});\r\n\r\n        \r\n\t}])\r\n\r\n\r\n    /*@ngInject*/\r\n\t.controller(\"FieldTemplate-WysiwygCtrl\", [\"$scope\", function ($scope) {\r\n\r\n\t\tvar vm = this;\r\n\r\n\t\t// Everything the WebForms bridge (iFrame) should have access to\r\n\t\tvm.bridge = {\r\n\t\t    initialValue: \"\",\r\n            initialReadOnly: false,\r\n\t\t    onChanged: function (newValue) {\r\n\t\t\t\t$scope.$apply(function () {\r\n\t\t\t\t\t$scope.value.Value = newValue;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tsetValue: function (value) { vm.bridge.initialValue = value; },\r\n\t\t\tsetReadOnly: function(readOnly) { vm.bridge.initialReadOnly = readOnly; }\r\n\t\t};\r\n\r\n\t\t$scope.$watch(\"value.Value\", function (newValue, oldValue) {\r\n\t\t\tif (newValue !== oldValue)\r\n\t\t\t\tvm.bridge.setValue(newValue);\r\n\t\t});\r\n\r\n\t\t$scope.$watch(\"to.disabled\", function (newValue, oldValue) {\r\n\t\t\tif (newValue !== oldValue)\r\n\t\t\t\tvm.bridge.setReadOnly(newValue);\r\n\t\t});\r\n\r\n\t}]);\r\n\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n    // Register in Angular Formly\r\n    FieldWysiwygTinyMceController.$inject = [\"$scope\", \"languages\", \"tinyMceHelpers\", \"tinyMceToolbars\", \"tinyMceConfig\", \"tinyMceAdam\", \"tinyMceDnnBridge\"];\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n            formlyConfigProvider.setType({\r\n                name: \"string-wysiwyg-tinymce\",\r\n                templateUrl: \"fields/string/string-wysiwyg-tinymce.html\",\r\n                wrapper: defaultFieldWrappers, \r\n                controller: \"FieldWysiwygTinyMce as vm\"\r\n            });\r\n        }])\r\n\r\n        .controller(\"FieldWysiwygTinyMce\", FieldWysiwygTinyMceController);\r\n\r\n    /*@ngInject*/\r\n    function FieldWysiwygTinyMceController($scope, languages, tinyMceHelpers, tinyMceToolbars, tinyMceConfig, tinyMceAdam, tinyMceDnnBridge) {\r\n        var vm = this;\r\n        vm.enableContentBlocks = true;\r\n\r\n        var settings = {\r\n            enableContentBlocks : false\r\n        };\r\n\r\n        vm.activate = function () {\r\n\r\n            enableContentBlocksIfPossible(settings);\r\n\r\n            // initialize options and wire-up init-callback\r\n            $scope.tinymceOptions = angular.extend(tinyMceConfig.getDefaultOptions(settings), {\r\n                setup: tinyMceInitCallback\r\n            });\r\n\r\n            // add ADAM definition, so that the callback will be able to link up to this\r\n            tinyMceAdam.attachAdam(vm, $scope);\r\n\r\n            // add DNN Bridge, needed for webforms dnn-dialogs\r\n            tinyMceDnnBridge.attach(vm, $scope);\r\n\r\n            // check if it's an additionally translated language and load the translations\r\n            var lang2 = /* \"de\" */ languages.currentLanguage.substr(0, 2);\r\n            if (tinyMceConfig.languages.indexOf(lang2) >= 0)\r\n                angular.extend($scope.tinymceOptions, {\r\n                    language: lang2,\r\n                    language_url: \"../i18n/lib/tinymce/\" + lang2 + \".js\"\r\n                });\r\n\r\n            watchDisabled($scope);\r\n        };\r\n        vm.activate();\r\n\r\n        // callback event which tinyMce will execute when it's built the editor\r\n        function tinyMceInitCallback(editor) {\r\n            vm.editor = editor;\r\n            if ($scope.tinymceOptions.language)\r\n                tinyMceHelpers.addTranslations(editor, $scope.tinymceOptions.language);\r\n\r\n            tinyMceToolbars.addButtons(vm);\r\n            tinyMceAdam.addButtons(vm);\r\n\r\n            enableContentBlocksIfPossible(editor);\r\n        }\r\n\r\n        function watchDisabled(ngscope) {\r\n            // Monitor for changes on Disabled\r\n            ngscope.$watch(\"to.disabled\", function(newValue, oldValue) {\r\n                if (newValue !== oldValue && vm.editor !== null) {\r\n                    ngscope.tinymceOptions.readonly = newValue;\r\n                    ngscope.$broadcast(\"$tinymce:refresh\"); // Refresh tinymce instance to pick-up new readonly value\r\n                }\r\n            });\r\n        }\r\n\r\n        function enableContentBlocksIfPossible(settings) {\r\n            // quit if there are no following fields\r\n            if ($scope.fields.length === $scope.index + 1)\r\n                return;\r\n\r\n            var nextField = $scope.fields[$scope.index + 1];\r\n            if (nextField.type === \"entity-content-blocks\")\r\n                settings.enableContentBlocks = true;\r\n        }\r\n    }\r\n\r\n\r\n\r\n})();\r\n\r\n\r\n\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceAdam\", function () {\r\n        return {\r\n            attachAdam: attachAdam,\r\n            addButtons: addAdamButtons\r\n        };\r\n\r\n        function attachAdam(vm, $scope) {\r\n            vm.registerAdam = function (adam) {\r\n                vm.adam = adam;\r\n            };\r\n\r\n            vm.setValue = function (fileItem, modeImage) {\r\n                if (modeImage === undefined)        // if not supplied, use the setting in the adam\r\n                    modeImage = vm.adamModeImage;\r\n                vm.editor.insertContent(modeImage\r\n                    ? \"<img src=\\\"\" + fileItem.fullPath + \"\\\">\"\r\n                    : \"<a href=\\\"\" + fileItem.fullPath + \"\\\">\" + fileItem.Name.substr(0, fileItem.Name.lastIndexOf(\".\")) + \"</a>\");\r\n            };\r\n\r\n            // this is the event called by dropzone as something is dropped\r\n            $scope.afterUpload = function (fileItem) {\r\n                vm.setValue(fileItem, fileItem.Type === \"image\");\r\n            };\r\n\r\n            vm.toggleAdam = function toggle(imagesOnly) {\r\n                vm.adamModeImage = imagesOnly;\r\n                vm.adam.toggle({ showImagesOnly: imagesOnly });\r\n                $scope.$apply();\r\n            };\r\n        }\r\n\r\n        function addAdamButtons(vm) {\r\n            var e = vm.editor;\r\n            // group with adam-link, dnn-link\r\n            e.addButton(\"linkfiles\", {\r\n                type: \"splitbutton\",\r\n                icon: \" icon-eav-file-pdf\",\r\n                title: \"Link.AdamFile.Tooltip\",\r\n                onclick: function () {\r\n                    vm.toggleAdam(false);\r\n                },\r\n                menu: [\r\n                    {\r\n                        text: \"Link.AdamFile\",\r\n                        tooltip: \"Link.AdamFile.Tooltip\",\r\n                        icon: \" icon-eav-file-pdf\",\r\n                        onclick: function () {\r\n                            vm.toggleAdam(false);\r\n                        }\r\n                    }, {\r\n                        text: \"Link.DnnFile\",\r\n                        tooltip: \"Link.DnnFile.Tooltip\",\r\n                        icon: \" icon-eav-file\",\r\n                        onclick: function () {\r\n                            vm.openDnnDialog(\"documentmanager\");\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n\r\n            // group with images (adam) - only in PRO mode\r\n            e.addButton(\"images\", {\r\n                type: \"splitbutton\",\r\n                text: \"\",\r\n                icon: \"image\",\r\n                onclick: function () {\r\n                    vm.toggleAdam(true);\r\n                },\r\n                menu: [\r\n                    {\r\n                        text: \"Image.AdamImage\",\r\n                        tooltip: \"Image.AdamImage.Tooltip\",\r\n                        icon: \"image\",\r\n                        onclick: function () { vm.toggleAdam(true); }\r\n                    }, {\r\n                        text: \"Image.DnnImage\",\r\n                        tooltip: \"Image.DnnImage.Tooltip\",\r\n                        icon: \"image\",\r\n                        onclick: function () { vm.openDnnDialog(\"imagemanager\"); }\r\n                    }, {\r\n                        text: \"Insert\\/edit image\", // i18n tinyMce standard\r\n                        icon: \"image\",\r\n                        onclick: function () { e.execCommand(\"mceImage\"); }\r\n\r\n                    },\r\n                    // note: all these use i18n from tinyMce standard\r\n                    { icon: \"alignleft\", tooltip: \"Align left\", onclick: function () { e.execCommand(\"JustifyLeft\"); } },\r\n                    { icon: \"aligncenter\", tooltip: \"Align center\", onclick: function () { e.execCommand(\"JustifyCenter\"); } },\r\n                    { icon: \"alignright\", tooltip: \"Align right\", onclick: function () { e.execCommand(\"JustifyRight\"); } }\r\n                ]\r\n            });\r\n\r\n        }\r\n    });\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceConfig\", [\"beta\", function (beta) {\r\n        var svc = {\r\n            // cdn root\r\n            cdnRoot: \"//cdn.tinymce.com/4\",\r\n            // these are the sizes we can auto-resize to\r\n            imgSizes: [100, 75, 70, 66, 60, 50, 40, 33, 30, 25, 10],\r\n\r\n            // the default language, in which we have all labels/translations\r\n            defaultLanguage: \"en\",\r\n\r\n            // all other languages\r\n            languages: \"de,es,fr,it,uk,nl\".split(\",\"),\r\n\r\n            // tinyMCE plugins we're using\r\n            plugins: [\r\n                \"code\", // allow view / edit source\r\n                \"contextmenu\", // right-click menu for things like insert, etc.\r\n                \"autolink\", // automatically convert www.xxx links to real links\r\n                \"tabfocus\", // get in an out of the editor with tab\r\n                \"image\", // image button and image-settings\r\n                \"link\", // link button + ctrl+k to add link\r\n                // \"autosave\",     // temp-backups the content in case the browser crashes, allows restore\r\n                \"paste\", // enables paste as text from word etc. https://www.tinymce.com/docs/plugins/paste/\r\n                \"anchor\", // allows users to set an anchor inside the text\r\n                \"charmap\", // character map https://www.tinymce.com/docs/plugins/visualchars/\r\n                \"hr\", // hr\r\n                \"media\", // video embed\r\n                \"nonbreaking\", // add button to insert &nbsp; https://www.tinymce.com/docs/plugins/nonbreaking/\r\n                \"searchreplace\", // search/replace https://www.tinymce.com/docs/plugins/searchreplace/\r\n                \"table\", // https://www.tinymce.com/docs/plugins/searchreplace/\r\n                \"lists\", // should fix bug with fonts in list-items (https://github.com/tinymce/tinymce/issues/2330),\r\n                \"textpattern\" // enable typing like \"1. text\" to create lists etc.\r\n            ],\r\n\r\n\r\n\r\n            validateAlso: '@[class]' // allow classes on all elements, \r\n                    + ',i' // allow i elements (allows icon-font tags like <i class=\"fa fa-...\">)\r\n                    + \",hr[sxc|guid]\" // experimental: allow inline content-blocks\r\n        };\r\n\r\n        function buildModes(settings) {\r\n            // the WYSIWYG-modes we offer, standard with simple toolbar and advanced with much more\r\n            modes = {\r\n                standard: {\r\n                    menubar: false,\r\n                    toolbar: \" undo redo removeformat \"\r\n                        + \"| bold formatgroup \"\r\n                        + \"| h1 h2 hgroup \"\r\n                        + \"| listgroup \"\r\n                        + \"| linkfiles linkgroup \"\r\n                        + \"| \" + (settings.enableContentBlocks ? \" addcontentblock \" : \"\")+ \"modeadvanced \",\r\n                    contextmenu: \"charmap hr\" + (settings.enableContentBlocks ? \" addcontentblock\" : \"\")\r\n                },\r\n                advanced: {\r\n                    menubar: true,\r\n                    toolbar: \" undo redo removeformat \"\r\n                        + \"| styleselect \"\r\n                        + \"| bold italic \"\r\n                        + \"| h1 h2 hgroup \"\r\n                        + \"| bullist numlist outdent indent \"\r\n                        + \"| images linkfiles linkgrouppro \"\r\n                        + \"| code modestandard \",\r\n                    contextmenu: \"link image | charmap hr adamimage\"\r\n                }\r\n            };\r\n            return modes;\r\n        }\r\n\r\n        svc.getDefaultOptions = function (settings) {\r\n            var modes = buildModes(settings);\r\n            return {\r\n                baseURL: svc.cdnRoot,\r\n                inline: true, // use the div, not an iframe\r\n                automatic_uploads: false, // we're using our own upload mechanism\r\n                modes: modes, // for later switch to another mode\r\n                menubar: modes.standard.menubar, // basic menu (none)\r\n                toolbar: modes.standard.toolbar, // basic toolbar\r\n                plugins: svc.plugins.join(\" \"),\r\n                contextmenu: modes.standard.contextmenu, //\"link image | charmap hr adamimage\",\r\n                autosave_ask_before_unload: false,\r\n                paste_as_text: true,\r\n                extended_valid_elements: svc.validateAlso,\r\n                //'@[class]' // allow classes on all elements, \r\n                //+ ',i' // allow i elements (allows icon-font tags like <i class=\"fa fa-...\">)\r\n                //+ \",hr[sxc|guid]\", // experimental: allow inline content-blocks\r\n                custom_elements: \"hr\",\r\n\r\n                // Url Rewriting in images and pages\r\n                //convert_urls: false,  // don't use this, would keep the domain which is often a test-domain\r\n                relative_urls: false, // keep urls with full path so starting with a \"/\" - otherwise it would rewrite them to a \"../../..\" syntax\r\n                default_link_target: \"_blank\", // auto-use blank as default link-target\r\n                object_resizing: false, // don't allow manual scaling of images\r\n\r\n                // General looks\r\n                skin: \"lightgray\",\r\n                theme: \"modern\",\r\n                // statusbar: true,    // doesn't work in inline :(\r\n\r\n                language: svc.defaultLanguage,\r\n\r\n                debounce: false // DONT slow-down model updates - otherwise we sometimes miss the last changes\r\n            };\r\n        };\r\n\r\n        return svc;\r\n    }]);\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceDnnBridge\", [\"dnnBridgeSvc\", function (dnnBridgeSvc) {\r\n        return {\r\n            attach: attach\r\n        };\r\n\r\n        function attach(vm, $scope) {\r\n            // open the dialog - note: strong dependency on the buttons, not perfect here\r\n            vm.openDnnDialog = function (type) {\r\n                dnnBridgeSvc.open(type, \"\", { Paths: null, FileFilter: null }, vm.processResultOfDnnBridge);\r\n            };\r\n\r\n            // the callback when something was selected\r\n            vm.processResultOfDnnBridge = function (value, type) {\r\n                $scope.$apply(function () {\r\n                    if (!value) return;\r\n\r\n                    var previouslySelected = vm.editor.selection.getContent();\r\n\r\n                    // case page - must first convert id to real path\r\n                    if (type === \"page\") {\r\n                        var promise = dnnBridgeSvc.getUrlOfId(type + \":\" + (value.id || value.FileId)); // id on page, FileId on file\r\n                        return promise.then(function (result) {\r\n                            vm.editor.insertContent(\"<a href=\\\"\" + result.data + \"\\\">\" + (previouslySelected || value.name) + \"</a>\");\r\n                        });\r\n                    }\r\n\r\n                    // not page - then I have a real path, use that\r\n                    if (type === \"file\") {\r\n                        var fileName = value.substr(value.lastIndexOf(\"/\") + 1);\r\n                        fileName = fileName.substr(0, fileName.lastIndexOf(\".\"));\r\n                        vm.editor.insertContent(\"<a href=\\\"\" + value + \"\\\">\" + (previouslySelected || fileName) + \"</a>\");\r\n                    } else if (type === \"image\") {\r\n                        vm.editor.insertContent(\"<img src=\\\"\" + value + \"\\\">\");\r\n                    }\r\n\r\n                });\r\n            };\r\n\r\n        }\r\n\r\n    }]);\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceHelpers\", [\"$translate\", \"tinyMceConfig\", function ($translate, tinyMceConfig) {\r\n        var svc = {\r\n            addTranslations: initLangResources\r\n        };\r\n\r\n        // Initialize the tinymce resources which we translate ourselves\r\n        function initLangResources(editor, language) {\r\n            var primaryLan = tinyMceConfig.defaultLanguage;\r\n            var keys = [], mceTranslations = {}, prefix = \"Extension.TinyMce.\", pLen = prefix.length;\r\n\r\n            // find all relevant keys by querying the primary language\r\n            var all = $translate.getTranslationTable(primaryLan);\r\n            // ReSharper disable once MissingHasOwnPropertyInForeach\r\n            for (var key in all)\r\n                if (key.indexOf(prefix) === 0)\r\n                    keys.push(key);\r\n\r\n            var translations = $translate.instant(keys);\r\n\r\n            for (var k = 0; k < keys.length; k++)\r\n                mceTranslations[keys[k].substring(pLen)] = translations[keys[k]];\r\n            tinymce.addI18n(language, mceTranslations);\r\n        }\r\n        return svc;\r\n    }]);\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceToolbars\", [\"tinyMceConfig\", function (tinyMceConfig) {\r\n        var svc = {\r\n            addButtons: addTinyMceToolbarButtons\r\n        };\r\n\r\n        function addTinyMceToolbarButtons(vm) {\r\n            var editor = vm.editor;\r\n            //#region helpers like initOnPostRender(name)\r\n\r\n            // helper function to add activate/deactivate to buttons like alignleft, alignright etc.\r\n            function initOnPostRender(name) { // copied/modified from https://github.com/tinymce/tinymce/blob/ddfa0366fc700334f67b2c57f8c6e290abf0b222/js/tinymce/classes/ui/FormatControls.js#L232-L249\r\n                return function () {\r\n                    var self = this; // keep ref to the current button?\r\n\r\n                    function watchChange() {\r\n                        editor.formatter.formatChanged(name, function (state) {\r\n                            self.active(state);\r\n                        });\r\n                    }\r\n\r\n                    if (editor.formatter)\r\n                        watchChange();\r\n                    else\r\n                        editor.on(\"init\", watchChange());\r\n                };\r\n            }\r\n\r\n            //#endregion\r\n\r\n            //#region register formats\r\n\r\n            // the method that will register all formats - like img-sizes\r\n            function registerTinyMceFormats(editor, vm) {\r\n                var imgformats = {};\r\n                for (var is = 0; is < tinyMceConfig.imgSizes.length; is++)\r\n                    imgformats[\"imgwidth\" + tinyMceConfig.imgSizes[is]] = [{ selector: \"img\", collapsed: false, styles: { 'width': tinyMceConfig.imgSizes[is] + \"%\" } }];\r\n                editor.formatter.register(imgformats);\r\n            }\r\n\r\n            // call register once the editor-object is ready\r\n            editor.on('init', function () {\r\n                registerTinyMceFormats(editor, vm);\r\n            });\r\n\r\n            //#endregion\r\n\r\n            //// group with adam-link, dnn-link\r\n            //editor.addButton(\"linkfiles\", {\r\n            //    type: \"splitbutton\",\r\n            //    icon: \" icon-eav-file-pdf\",\r\n            //    title: \"Link.AdamFile.Tooltip\",\r\n            //    onclick: function () {\r\n            //        vm.toggleAdam(false);\r\n            //    },\r\n            //    menu: [\r\n            //        {\r\n            //            text: \"Link.AdamFile\",\r\n            //            tooltip: \"Link.AdamFile.Tooltip\",\r\n            //            icon: \" icon-eav-file-pdf\",\r\n            //            onclick: function () {\r\n            //                vm.toggleAdam(false);\r\n            //            }\r\n            //        }, {\r\n            //            text: \"Link.DnnFile\",\r\n            //            tooltip: \"Link.DnnFile.Tooltip\",\r\n            //            icon: \" icon-eav-file\",\r\n            //            onclick: function () {\r\n            //                vm.openDnnDialog(\"documentmanager\");\r\n            //            }\r\n            //        }\r\n            //    ]\r\n            //});\r\n\r\n            //#region link group with web-link, page-link, unlink, anchor\r\n            var linkgroup = {\r\n                type: \"splitbutton\",\r\n                icon: \"link\",\r\n                title: \"Link\",\r\n                onPostRender: initOnPostRender(\"link\"),\r\n                onclick: function () {\r\n                    editor.execCommand(\"mceLink\");\r\n                },\r\n\r\n                menu: [\r\n                { icon: \"link\", text: \"Link\", onclick: function () { editor.execCommand(\"mceLink\"); } },\r\n                {\r\n                    text: \"Link.Page\",\r\n                    tooltip: \"Link.Page.Tooltip\",\r\n                    icon: \" icon-eav-sitemap\",\r\n                    onclick: function () {\r\n                        vm.openDnnDialog(\"pagepicker\");\r\n                    }\r\n                }\r\n                ]\r\n            };\r\n            var linkgroupPro = angular.copy(linkgroup);\r\n            linkgroupPro.menu.push({ icon: \" icon-eav-anchor\", text: \"Anchor\", tooltip: \"Link.Anchor.Tooltip\", onclick: function () { editor.execCommand(\"mceAnchor\"); } });\r\n            editor.addButton(\"linkgroup\", linkgroup);\r\n            editor.addButton(\"linkgrouppro\", linkgroupPro);\r\n            //#endregion\r\n\r\n            // group with images (adam) - only in PRO mode\r\n            editor.addButton(\"images\", {\r\n                type: \"splitbutton\",\r\n                text: \"\",\r\n                icon: \"image\",\r\n                onclick: function () {\r\n                    vm.toggleAdam(true);\r\n                },\r\n                menu: [\r\n                    {\r\n                        text: \"Image.AdamImage\",\r\n                        tooltip: \"Image.AdamImage.Tooltip\",\r\n                        icon: \"image\",\r\n                        onclick: function () { vm.toggleAdam(true); }\r\n                    }, {\r\n                        text: \"Image.DnnImage\",\r\n                        tooltip: \"Image.DnnImage.Tooltip\",\r\n                        icon: \"image\",\r\n                        onclick: function () { vm.openDnnDialog(\"imagemanager\"); }\r\n                    }, {\r\n                        text: \"Insert\\/edit image\", // i18n tinyMce standard\r\n                        icon: \"image\",\r\n                        onclick: function () { editor.execCommand(\"mceImage\"); }\r\n\r\n                    },\r\n                    // note: all these use i18n from tinyMce standard\r\n                    { icon: \"alignleft\", tooltip: \"Align left\", onclick: function () { editor.execCommand(\"JustifyLeft\"); } },\r\n                    { icon: \"aligncenter\", tooltip: \"Align center\", onclick: function () { editor.execCommand(\"JustifyCenter\"); } },\r\n                    { icon: \"alignright\", tooltip: \"Align right\", onclick: function () { editor.execCommand(\"JustifyRight\"); } }\r\n                ]\r\n            });\r\n\r\n            // drop-down with italic, strikethrough, ...\r\n            editor.addButton(\"formatgroup\", {\r\n                type: \"splitbutton\",\r\n                tooltip: \"Italic\",  // will be autotranslated\r\n                text: \"\",\r\n                icon: \"italic\",\r\n                cmd: \"italic\",\r\n                onPostRender: initOnPostRender(\"italic\"),\r\n                menu: [\r\n                    { icon: \"strikethrough\", text: \"Strikethrough\", onclick: function () { editor.execCommand(\"strikethrough\"); } },\r\n                    { icon: \"superscript\", text: \"Superscript\", onclick: function () { editor.execCommand(\"superscript\"); } },\r\n                    { icon: \"subscript\", text: \"Subscript\", onclick: function () { editor.execCommand(\"subscript\"); } }\r\n                ]\r\n\r\n            });\r\n\r\n            // drop-down with italic, strikethrough, ...\r\n            editor.addButton(\"listgroup\", {\r\n                type: \"splitbutton\",\r\n                tooltip: \"Numbered list\",  // official tinymce key\r\n                text: \"\",\r\n                icon: \"numlist\",\r\n                cmd: \"InsertOrderedList\",\r\n                onPostRender: initOnPostRender(\"numlist\"),  // for unknown reasons, this just doesn't activate correctly :( - neither does the bullist\r\n                menu: [\r\n                    { icon: \"bullist\", text: \"Bullet list\", onPostRender: initOnPostRender(\"bullist\"), onclick: function () { editor.execCommand(\"InsertUnorderedList\"); } },\r\n                    { icon: \"outdent\", text: \"Outdent\", onclick: function () { editor.execCommand(\"Outdent\"); } },\r\n                    { icon: \"indent\", text: \"Indent\", onclick: function () { editor.execCommand(\"Indent\"); } }\r\n                ]\r\n\r\n            });\r\n\r\n            //#region mode switching and the buttons for it\r\n            function switchModes(mode) {\r\n                editor.settings.toolbar = editor.settings.modes[mode].toolbar;\r\n                editor.settings.menubar = editor.settings.modes[mode].menubar;\r\n                // editor.settings.contextmenu = editor.settings.modes[mode].contextmenu; - doesn't work at the moment\r\n\r\n                editor.theme.panel.remove();    // kill current toolbar\r\n                editor.theme.renderUI(editor);\r\n                editor.execCommand(\"mceFocus\");\r\n\r\n                // focus away...\r\n                document.getElementById(\"dummyfocus\").focus();\r\n\r\n                // ...and focus back a bit later\r\n                setTimeout(function () {\r\n                    editor.focus();\r\n                }, 100);\r\n            }\r\n\r\n            editor.addButton(\"modestandard\", {\r\n                icon: \" icon-eav-cancel\",\r\n                tooltip: \"SwitchMode.Standard\",\r\n                onclick: function () { switchModes(\"standard\"); }\r\n            });\r\n\r\n            editor.addButton(\"modeadvanced\", {\r\n                icon: \" icon-eav-pro\",\r\n                tooltip: \"SwitchMode.Pro\",\r\n                onclick: function () { switchModes(\"advanced\"); }\r\n            });\r\n            //#endregion\r\n\r\n            //#region h1, h2, etc. buttons, inspired by http://blog.ionelmc.ro/2013/10/17/tinymce-formatting-toolbar-buttons/\r\n            // note that the complex array is needede because auto-translate only happens if the string is identical\r\n            [[\"pre\", \"Preformatted\", \"Preformatted\"],\r\n                [\"p\", \"Paragraph\", \"Paragraph\"],\r\n                [\"code\", \"Code\", \"Code\"],\r\n                [\"h1\", \"Heading 1\", \"H1\"],\r\n                [\"h2\", \"Heading 2\", \"H2\"],\r\n                [\"h3\", \"Heading 3\", \"H3\"],\r\n                [\"h4\", \"Heading 4\", \"Heading 4\"],\r\n                [\"h5\", \"Heading 5\", \"Heading 5\"],\r\n                [\"h6\", \"Heading 6\", \"Heading 6\"]].forEach(function (tag) {\r\n                    editor.addButton(tag[0], {\r\n                        tooltip: tag[1],\r\n                        text: tag[2],\r\n                        onclick: function () { editor.execCommand(\"mceToggleFormat\", false, tag[0]); },\r\n                        onPostRender: function () {\r\n                            var self = this,\r\n                                setup = function () {\r\n                                    editor.formatter.formatChanged(tag[0], function (state) {\r\n                                        self.active(state);\r\n                                    });\r\n                                };\r\n                            var x = editor.formatter ? setup() : editor.on(\"init\", setup);\r\n                        }\r\n                    });\r\n                });\r\n\r\n            // group of buttons with an h3 to start and showing h4-6 + p\r\n            editor.addButton(\"hgroup\", angular.extend({}, editor.buttons.h3,\r\n            {\r\n                type: \"splitbutton\",\r\n                menu: [\r\n                    editor.buttons.h4,\r\n                    editor.buttons.h5,\r\n                    editor.buttons.h6,\r\n                    editor.buttons.p\r\n                ]\r\n            }));\r\n            //#endregion\r\n\r\n            // #region inside content\r\n            editor.addButton(\"addcontentblock\", {\r\n                icon: \" icon-eav-content-block\",\r\n                classes: \"btn-addcontentblock\",\r\n                tooltip: \"ContentBlock.Add\",\r\n                onclick: function() {\r\n                    var guid = Math.uuid().toLowerCase(); // requires the uuid-generator to be included\r\n                    \r\n                    vm.editor.insertContent(\"<hr sxc=\\\"sxc-content-block\\\" guid=\\\"\" + guid + \"\\\" />\");\r\n                }\r\n            });\r\n            // #endregion\r\n\r\n            //#region image alignment / size buttons\r\n            editor.addButton(\"alignimgleft\", { icon: \" icon-eav-align-left\", tooltip: \"Align left\", cmd: \"JustifyLeft\", onPostRender: initOnPostRender(\"alignleft\") });\r\n            editor.addButton(\"alignimgcenter\", { icon: \" icon-eav-align-center\", tooltip: \"Align center\", cmd: \"justifycenter\", onPostRender: initOnPostRender(\"aligncenter\") });\r\n            editor.addButton(\"alignimgright\", { icon: \" icon-eav-align-right\", tooltip: \"Align right\", cmd: \"justifyright\", onPostRender: initOnPostRender(\"alignright\") });\r\n\r\n            var imgMenuArray = [];\r\n            function makeImgFormatCall(size) { return function () { editor.formatter.apply(\"imgwidth\" + size); }; }\r\n            for (var is = 0; is < tinyMceConfig.imgSizes.length; is++) {\r\n                var config = {\r\n                    icon: \" icon-eav-resize-horizontal\",\r\n                    tooltip: tinyMceConfig.imgSizes[is] + \"%\",\r\n                    text: tinyMceConfig.imgSizes[is] + \"%\",\r\n                    onclick: makeImgFormatCall(tinyMceConfig.imgSizes[is]),\r\n                    onPostRender: initOnPostRender(\"imgwidth\" + tinyMceConfig.imgSizes[is])\r\n                };\r\n                editor.addButton(\"imgresize\" + tinyMceConfig.imgSizes[is], config);\r\n                imgMenuArray.push(config);\r\n            }\r\n\r\n            editor.addButton(\"resizeimg100\", {\r\n                icon: \" icon-eav-resize-horizontal\", tooltip: \"100%\",\r\n                onclick: function () { editor.formatter.apply(\"imgwidth100\"); },\r\n                onPostRender: initOnPostRender(\"imgwidth100\")\r\n            });\r\n\r\n            // group of buttons to resize an image 100%, 50%, etc.\r\n            editor.addButton(\"imgresponsive\", angular.extend({}, editor.buttons.resizeimg100,\r\n            { type: \"splitbutton\", menu: imgMenuArray }));\r\n            //#endregion\r\n\r\n            //#region my context toolbars for links, images and lists (ul/li)\r\n            function makeTagDetector(tagWeNeedInTheTagPath) {\r\n                return function tagDetector(currentElement) {\r\n                    // check if we are in a tag within a specific tag\r\n                    var selectorMatched = editor.dom.is(currentElement, tagWeNeedInTheTagPath) && editor.getBody().contains(currentElement);\r\n                    return selectorMatched;\r\n                };\r\n            }\r\n\r\n            editor.addContextToolbar(makeTagDetector(\"a\"), \"link unlink\");\r\n            editor.addContextToolbar(makeTagDetector(\"img\"), \"image | alignimgleft alignimgcenter alignimgright imgresponsive | removeformat | remove\");\r\n            editor.addContextToolbar(makeTagDetector(\"li,ol,ul\"), \"bullist numlist | outdent indent\");\r\n            //#endregion\r\n        }\r\n\r\n        return svc;\r\n    }]);\nangular.module(\"SxcEditTemplates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"adam/adam-hint.html\",\"<div class=\\\"small pull-right\\\">\\r\\n    <span style=\\\"opacity: 0.5\\\">drop files here -</span>\\r\\n    <a href=\\\"http://2sxc.org/help?tag=adam\\\" target=\\\"_blank\\\" uib-tooltip=\\\"ADAM is the Automatic Digital Assets Manager - click to discover more\\\">\\r\\n        <i class=\\\"icon-eav-apple\\\"></i>\\r\\n        Adam\\r\\n    </a>\\r\\n    <span style=\\\"opacity: 0.5\\\"> is sponsored with\\r\\n    <i class=\\\"icon-eav-heart\\\"></i> by\\r\\n    <a tabindex=\\\"-1\\\" href=\\\"http://2sic.com/\\\" target=\\\"_blank\\\">\\r\\n        2sic.com\\r\\n    </a>\\r\\n    </span>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"adam/browser.html\",\"<div ng-if=\\\"vm.show\\\" class=\\\"\\\">\\r\\n    <!-- info for dropping stuff here -->\\r\\n    <div class=\\\"dz-preview dropzone-adam\\\" ng-disabled=\\\"vm.disabled\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.AdamUploadLabel\\' | translate }}\\\" ng-click=\\\"vm.openUpload()\\\">\\r\\n        <div class=\\\"dz-image adam-browse-background-icon adam-browse-background\\\" xstyle=\\\"background-color: whitesmoke\\\">\\r\\n            <i class=\\\"icon-eav-up-circled2\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">drop files</div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- add folder - not always shown -->\\r\\n    <div ng-show=\\\"vm.allowCreateFolder() || vm.debug.on\\\" class=\\\"dz-preview\\\" ng-disabled=\\\"vm.disabled\\\" ng-click=\\\"vm.addFolder()\\\">\\r\\n        <div class=\\\"dz-image adam-browse-background-icon adam-browse-background\\\">\\r\\n            <div class=\\\"\\\">\\r\\n                <i class=\\\"icon-eav-folder-empty\\\"></i>\\r\\n                <div class=\\\"adam-short-label\\\">new folder</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"adam-background adam-browse-background-icon\\\">\\r\\n            <i class=\\\"icon-eav-plus\\\" style=\\\"font-size: 2em; top: 13px; position: relative;\\\"></i>\\r\\n        </div>\\r\\n        <div class=\\\"dz-details\\\" style=\\\"opacity: 1\\\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- browse up a folder - not always shown -->\\r\\n    <div ng-show=\\\"vm.showFolders || vm.debug.on\\\" class=\\\"dz-preview\\\" ng-disabled=\\\"vm.disabled\\\" ng-if=\\\"vm.folders.length > 0\\\" ng-click=\\\"vm.goUp()\\\">\\r\\n        <div class=\\\"dz-image  adam-browse-background-icon adam-browse-background\\\">\\r\\n            <i class=\\\"icon-eav-folder-empty\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">up</div>\\r\\n        </div>\\r\\n        <div class=\\\"adam-background adam-browse-background-icon\\\">\\r\\n            <i class=\\\"icon-eav-level-up\\\" style=\\\"font-size: 2em; top: 13px; position: relative;\\\"></i>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- folder list - not always shown -->\\r\\n    <div ng-show=\\\"vm.showFolders || vm.debug.on\\\" class=\\\"dz-preview\\\" ng-repeat=\\\"item in vm.items | filter: { IsFolder: true }  | orderBy:\\'Name\\'\\\" ng-click=\\\"vm.goIntoFolder(item)\\\">\\r\\n        <div class=\\\"dz-image adam-blur adam-browse-background-icon adam-browse-background\\\">\\r\\n            <i class=\\\"icon-eav-folder-empty\\\"></i>\\r\\n            <div class=\\\"short-label\\\">{{ item.Name }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"dz-details file-type-{{item.Type}}\\\">\\r\\n            <span ng-click=\\\"vm.del(item)\\\" stop-event=\\\"click\\\" class=\\\"adam-delete-button\\\"><i class=\\\"icon-eav-cancel\\\"></i></span>\\r\\n            <div class=\\\"adam-full-name-area\\\">\\r\\n                <div class=\\\"adam-full-name\\\">{{ item.Name }}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <span class=\\\"adam-tag\\\" ng-class=\\\"{\\'metadata-exists\\': item.MetadataId > 0}\\\"\\r\\n              ng-click=\\\"vm.editMetadata(item)\\\"\\r\\n              ng-if=\\\"vm.getMetadataType(item)\\\"\\r\\n              stop-event=\\\"click\\\"\\r\\n              uib-tooltip=\\\"{{vm.getMetadataType(item)}}:{{item.MetadataId}}\\\">\\r\\n            <i class=\\\"icon-eav-tag\\\" style=\\\"font-size: larger\\\"></i>\\r\\n        </span>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- files -->\\r\\n    <div class=\\\"dz-preview\\\" ng-class=\\\"{ \\'dz-success\\': value.Value.toLowerCase() == \\'file:\\' + item.Id }\\\" ng-repeat=\\\"item in (vm.items | filter: { IsFolder: false }) | filter: (vm.showImagesOnly ? {Type: \\'image\\'} : {})  | orderBy:\\'Name\\'\\\" ng-click=\\\"vm.select(item)\\\" ng-disabled=\\\"vm.disabled || !vm.enableSelect\\\">\\r\\n        <div ng-if=\\\"item.Type !== \\'image\\'\\\" class=\\\"dz-image adam-blur  adam-browse-background-icon adam-browse-background\\\">\\r\\n            <i ng-class=\\\"vm.icon(item)\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">{{ item.Name }}</div>\\r\\n        </div>\\r\\n        <div ng-if=\\\"item.Type === \\'image\\'\\\" class=\\\"dz-image\\\">\\r\\n            <img data-dz-thumbnail=\\\"\\\" alt=\\\"{{ item.Id + \\':\\' + item.Name\\r\\n}}\\\" ng-src=\\\"{{ item.fullPath + \\'?w=120&h=120&mode=crop\\' }}\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"dz-details file-type-{{item.Type}}\\\">\\r\\n            <span ng-click=\\\"vm.del(item)\\\" stop-event=\\\"click\\\" class=\\\"adam-delete-button\\\"><i class=\\\"icon-eav-cancel\\\"></i></span>\\r\\n            <div class=\\\"adam-full-name-area\\\">\\r\\n                <div class=\\\"adam-full-name\\\">{{ item.Name }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"dz-filename adam-short-label\\\">\\r\\n                <span>#{{ item.Id }} - {{ (item.Size / 1024).toFixed(0) }} kb</span>\\r\\n            </div>\\r\\n            <a class=\\\"adam-link-button\\\" target=\\\"_blank\\\" ng-href=\\\"{{ item.fullPath }}\\\">\\r\\n                <i class=\\\"icon-eav-link-ext\\\" style=\\\"font-size: larger\\\"></i>\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <span class=\\\"adam-tag\\\" ng-class=\\\"{\\'metadata-exists\\': item.MetadataId > 0}\\\"\\r\\n              ng-click=\\\"vm.editMetadata(item)\\\"\\r\\n              ng-if=\\\"vm.getMetadataType(item)\\\"\\r\\n              stop-event=\\\"click\\\"\\r\\n              uib-tooltip=\\\"{{vm.getMetadataType(item)}}:{{item.MetadataId}}\\\">\\r\\n            <i class=\\\"icon-eav-tag\\\" style=\\\"font-size: larger\\\"></i>\\r\\n        </span>\\r\\n\\r\\n\\r\\n        <div class=\\\"dz-success-mark\\\">\\r\\n            <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\r\\n                <title>Check</title>\\r\\n                <defs></defs>\\r\\n                <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\r\\n                    <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\r\\n                </g>\\r\\n            </svg>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\");\n$templateCache.put(\"adam/dropzone-upload-preview.html\",\"<div ng-show=\\\"uploading\\\">\\r\\n    <div class=\\\"dropzone-previews\\\">\\r\\n    </div>\\r\\n    <span class=\\\"invisible-clickable\\\" data-note=\\\"just a fake, invisible area for dropzone\\\"></span>\\r\\n</div>\");\n$templateCache.put(\"fields/dnn-bridge/hyperlink-default-filemanager.html\",\"<div>\\r\\n\t<iframe class=\\\"sxc-dialog-filemanager-iframe\\\" style=\\\"width:100%; height:100%; overflow:hidden; border: 0;\\\" scrolling=\\\"no\\\" web-forms-bridge=\\\"bridge\\\" bridge-type=\\\"filemanager\\\" bridge-sync-height=\\\"false\\\"></iframe>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n\t.sxc-dialog-filemanager .modal-dialog { width: 100%;height: 100%;margin: 0; }\\r\\n\t.sxc-dialog-filemanager .modal-content { background: none;height: 100%; }\\r\\n\t.sxc-dialog-filemanager-iframe { position: absolute;top: 0;left: 0;right: 0;bottom: 0; }\\r\\n</style>\");\n$templateCache.put(\"fields/dnn-bridge/hyperlink-default-pagepicker.html\",\"<div>\\r\\n\t<div class=\\\"modal-header\\\">\\r\\n\t\t<h3 class=\\\"modal-title\\\" translate=\\\"Edit.Fields.Hyperlink.PagePicker.Title\\\"></h3>\\r\\n\t</div>\\r\\n\t<div class=\\\"modal-body\\\" style=\\\"height:370px; width:600px\\\">\\r\\n\t\t<iframe style=\\\"width:100%; height: 350px; border: 0;\\\" web-forms-bridge=\\\"bridge\\\" bridge-type=\\\"pagepicker\\\" bridge-sync-height=\\\"false\\\"></iframe>\\r\\n\t</div>\\r\\n\t<div class=\\\"modal-footer\\\"></div>\\r\\n</div>\");\n$templateCache.put(\"fields/hyperlink/hyperlink-default.html\",\"<div class=\\\"dropzone\\\">\\r\\n    <div class=\\\"clearfix\\\">\\r\\n        <div ng-if=\\\"value.Value && vm.isImage()\\\"\\r\\n             class=\\\"thumbnail-before-input\\\"\\r\\n             ng-style=\\\"{ \\'background-image\\': \\'url(\\' + vm.thumbnailUrl(1, true) + \\')\\' }\\\"\\r\\n             ng-mouseover=\\\"vm.showPreview = true\\\"\\r\\n             ng-mouseleave=\\\"vm.showPreview = false\\\">\\r\\n        </div>\\r\\n\\r\\n        <div ng-if=\\\"value.Value && !vm.isImage()\\\"\\r\\n           class=\\\"thumbnail-before-input icon-before-input\\\">\\r\\n            <a href=\\\"{{vm.testLink}}\\\"\\r\\n               target=\\\"_blank\\\" tabindex=\\\"-1\\\"\\r\\n               tooltip-html=\\\"{{vm.tooltipUrl(vm.testLink)}}\\\"\\r\\n               tooltip-placement=\\\"right\\\"\\r\\n               ng-class=\\\"vm.icon()\\\">\\r\\n            </a>            \\r\\n        </div>\\r\\n        <div ng-if=\\\"!value.Value\\\"\\r\\n             class=\\\"thumbnail-before-input empty-placeholder\\\">\\r\\n        </div>\\r\\n        <div class=\\\"after-preview\\\">\\r\\n            <div class=\\\"input-group\\\" uib-dropdown>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control input-lg\\\" ng-model=\\\"value.Value\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.Tooltip1\\' | translate }}\\r\\n{{\\'Edit.Fields.Hyperlink.Default.Tooltip2\\' | translate }}\\r\\nADAM - sponsored with ♥ by 2sic.com\\\">\\r\\n                <span class=\\\"input-group-btn\\\" style=\\\"vertical-align: top;\\\">\\r\\n                    <div style=\\\"width: 6px;\\\"></div>\\r\\n                    <button ng-if=\\\"to.settings[\\'merged\\'].Buttons.indexOf(\\'adam\\') > -1\\\" type=\\\"button\\\" class=\\\"btn btn-default icon-field-button\\\" ng-disabled=\\\"to.disabled\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.AdamUploadLabel\\' | translate }}\\\" ng-click=\\\"vm.toggleAdam()\\\">\\r\\n                        <i class=\\\"icon-eav-apple\\\"></i>\\r\\n                    </button>\\r\\n                    <button ng-if=\\\"to.settings[\\'merged\\'].Buttons.indexOf(\\'page\\') > -1\\\" type=\\\"button\\\" class=\\\"btn btn-default icon-field-button\\\" ng-disabled=\\\"to.disabled\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.PageLabel\\' | translate }}\\\" ng-click=\\\"vm.openDialog(\\'pagepicker\\')\\\">\\r\\n                        <i class=\\\"icon-eav-sitemap\\\"></i>\\r\\n                    </button>\\r\\n                    <button ng-if=\\\"to.settings[\\'merged\\'].Buttons.indexOf(\\'more\\') > -1\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" class=\\\"btn btn-default uib-dropdown-toggle icon-field-button\\\" uib-dropdown-toggle ng-disabled=\\\"to.disabled\\\">\\r\\n                        <i class=\\\"icon-eav-options\\\"></i>\\r\\n                    </button>\\r\\n                </span>\\r\\n                <ul class=\\\"dropdown-menu pull-right\\\" uib-dropdown-menu role=\\\"menu\\\">\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowAdam\\\"><a class=\\\"dropzone-adam\\\" ng-click=\\\"vm.toggleAdam()\\\" href=\\\"javascript:void(0);\\\"><i class=\\\"icon-eav-apple\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuAdam\\\"></span></a></li>\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowPagePicker\\\"><a ng-click=\\\"vm.openDialog(\\'pagepicker\\')\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"icon-eav-sitemap\\\" xicon=\\\"home\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuPage\\\"></span></a></li>\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowImageManager\\\"><a ng-click=\\\"vm.openDialog(\\'imagemanager\\')\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"icon-eav-file-image\\\" xicon=\\\"picture\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuImage\\\"></span></a></li>\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowFileManager\\\"><a ng-click=\\\"vm.openDialog(\\'documentmanager\\')\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"icon-eav-file\\\" xicon=\\\"file\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuDocs\\\"></span></a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n            <div ng-if=\\\"vm.showPreview\\\" style=\\\"position: relative\\\">\\r\\n                <div style=\\\"position: absolute; z-index: 100; background: white; top: 10px; text-align: center; left: 0; right: 0;\\\">\\r\\n                    <img ng-src=\\\"{{vm.thumbnailUrl(2)}}\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <adam-hint class=\\\"field-hints\\\"></adam-hint>\\r\\n            <div ng-if=\\\"value.Value\\\" class=\\\"field-hints\\\">\\r\\n                <a href=\\\"{{vm.testLink}}\\\" target=\\\"_blank\\\" tabindex=\\\"-1\\\" tooltip-html=\\\"{{vm.tooltipUrl(vm.testLink)}}\\\">\\r\\n                    <span>&nbsp;... {{vm.testLink.substr(vm.testLink.lastIndexOf(\\\"/\\\"), 100)}}</span>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <!-- The ADAM file browser, requires the uploader wrapped around it -->\\r\\n        <adam-browser content-type-name=\\\"to.header.ContentTypeName\\\"\\r\\n                      entity-guid=\\\"to.header.Guid\\\"\\r\\n                      field-name=\\\"options.key\\\"\\r\\n                      auto-load=\\\"false\\\"\\r\\n                      folder-depth=\\\"0\\\"\\r\\n                      sub-folder=\\\"\\\"\\r\\n                      update-callback=\\\"vm.setValue\\\"\\r\\n                      register-self=\\\"vm.registerAdam\\\"\\r\\n                      ng-disabled=\\\"to.disabled\\\"></adam-browser>\\r\\n\\r\\n        <!-- the preview of the uploader -->\\r\\n        <dropzone-upload-preview></dropzone-upload-preview>\\r\\n\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/hyperlink/hyperlink-library.html\",\"<div>\\r\\n    <div class=\\\"dropzone\\\">\\r\\n        <!-- The ADAM file browser, requires the uploader wrapped around it -->\\r\\n        <adam-browser\\r\\n            content-type-name=\\\"to.header.ContentTypeName\\\"\\r\\n            entity-guid=\\\"to.header.Guid\\\"\\r\\n            field-name=\\\"options.key\\\"\\r\\n            auto-load=\\\"true\\\"\\r\\n            sub-folder=\\\"\\\"\\r\\n            folder-depth=\\\"to.settings.merged.FolderDepth\\\"\\r\\n            metadata-content-types=\\\"to.settings.merged.MetadataContentTypes\\\"\\r\\n            allow-assets-in-root=\\\"to.settings.merged.allowAssetsInRoot\\\"\\r\\n            enable-select=\\\"false\\\"\\r\\n            update-callback=\\\"vm.setValue\\\"\\r\\n            register-self=\\\"vm.registerAdam\\\">\\r\\n        </adam-browser>\\r\\n\\r\\n\\r\\n        <!-- the preview of the uploader -->\\r\\n        <dropzone-upload-preview></dropzone-upload-preview>\\r\\n\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/string/string-font-icon-picker.html\",\"<div>\\r\\n    <div uib-dropdown uib-keyboard-nav auto-close=\\\"outsideClick\\\" is-open=\\\"vm.selectorIsOpen\\\">\\r\\n        <div class=\\\"thumbnail-before-input icon-preview\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"\\\" uib-tooltip=\\\"{{value.Value}}\\\" uib-dropdown-toggle>\\r\\n                <i class=\\\"{{vm.previewPrefix}} {{value.Value}}\\\" ng-show=\\\"value.Value\\\"></i>\\r\\n                <span ng-show=\\\"!value.Value\\\">&nbsp;&nbsp;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"input-group\\\" uib-dropdown-toggle>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-lg\\\" ng-model=\\\"value.Value\\\" ng-disabled=\\\"false\\\" >\\r\\n        </div>\\r\\n        <!-- the search ui -->\\r\\n        <ul class=\\\"dropdown-menu icons-menu-columns\\\" role=\\\"menu\\\" uib-dropdown-menu>\\r\\n            <li class=\\\"input-group\\\">\\r\\n                <span class=\\\"input-group-addon btn-default btn\\\" ng-click=\\\"vm.selectorIsOpen = false; value.Value = \\'\\'\\\">\\r\\n                    <i class=\\\"icon-eav-cancel\\\"></i>\\r\\n                </span>\\r\\n                <input type=\\\"search\\\" ng-model=\\\"vm.iconFilter\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"search...\\\" />\\r\\n            </li>\\r\\n\\r\\n            <li ng-repeat=\\\"icn in vm.icons\\\" role=\\\"menuitem\\\"\\r\\n                ng-show=\\\"icn.class.indexOf(vm.iconFilter) !== -1\\\">\\r\\n                <a ng-click=\\\"vm.setIcon(icn.class)\\\" xng-click=\\\"value.Value = icn.class; vm.selectorIsOpen = false;\\\">\\r\\n                    <i class=\\\"{{vm.previewPrefix}} {{icn.class}}\\\"></i> <span uib-tooltip=\\\"{{icn.class}}\\\">...{{icn.class.substring(vm.prefix.length-1,25)}}</span>\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div ng-if=\\\"vm.debug.on\\\">Infos: found {{vm.icons.length}} items for prefix \\\"{{vm.prefix}}\\\" and will use \\\"{{vm.previewPrefix}}\\\" as a preview class. Selected is \\\"{{value.Value}}\\\" and files are: {{vm.files}}</div>\\r\\n</div> \");\n$templateCache.put(\"fields/string/string-template-picker.html\",\"<div>\\r\\n    <div class=\\\"input-group\\\">\\r\\n\\r\\n        <select class=\\\"form-control input-material material\\\"\\r\\n                ng-model=\\\"value.Value\\\"\\r\\n                ng-disabled=\\\"!readyToUse()\\\">\\r\\n            <option value=\\\"\\\">(no file selected)</option>\\r\\n            <option ng-repeat=\\\"item in templates | isValidFile:file.ext\\\"\\r\\n                    ng-selected=\\\"{{item == value.Value}}\\\"\\r\\n                    value=\\\"{{item}}\\\">\\r\\n                {{item}}\\r\\n            </option>\\r\\n        </select>\\r\\n        <span class=\\\"input-group-btn\\\" style=\\\"vertical-align: top;\\\">\\r\\n            <button class=\\\"btn btn-default icon-field-button\\\" type=\\\"button\\\" ng-click=\\\"add()\\\" ng-disabled=\\\"!readyToUse()\\\">\\r\\n                <span class=\\\"icon-eav-plus\\\"></span>\\r\\n            </button>\\r\\n        </span>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/string/string-wysiwyg-adv.html\",\"<div>\\r\\n    this would be an advanced, configurable WYSIWYG. It does not exist yet :). \\r\\n</div>\");\n$templateCache.put(\"fields/string/string-wysiwyg-dnn.html\",\"<iframe style=\\\"width:100%; border: 0;\\\" web-forms-bridge=\\\"vm.bridge\\\" bridge-type=\\\"wysiwyg\\\" bridge-sync-height=\\\"true\\\"></iframe>\");\n$templateCache.put(\"fields/string/string-wysiwyg-tinymce.html\",\"<div>\\r\\n    <div class=\\\"dropzone\\\">\\r\\n        <div> <!-- Needed because after a refresh, the editor can\\'t be placed at the same location -->\\r\\n            <div ui-tinymce-two=\\\"tinymceOptions\\\" ng-model=\\\"value.Value\\\" class=\\\"field-string-wysiwyg-mce-box\\\"></div>\\r\\n        </div>\\r\\n\\r\\n        <!-- The ADAM file browser, requires the uploader wrapped around it -->\\r\\n        <adam-browser content-type-name=\\\"to.header.ContentTypeName\\\"\\r\\n                      entity-guid=\\\"to.header.Guid\\\"\\r\\n                      field-name=\\\"options.key\\\"\\r\\n                      auto-load=\\\"false\\\"\\r\\n                      folder-depth=\\\"0\\\"\\r\\n                      sub-folder=\\\"\\\"\\r\\n                      update-callback=\\\"vm.setValue\\\"\\r\\n                      register-self=\\\"vm.registerAdam\\\"\\r\\n                      show-images-only=\\\"vm.adamModeImage\\\"\\r\\n                      ng-disabled=\\\"to.disabled\\\"></adam-browser>\\r\\n\\r\\n        <!-- dummy item to set focus on in script-->\\r\\n        <span id=\\\"dummyfocus\\\" tabindex=\\\"-1\\\"></span>\\r\\n\\r\\n        <!-- the preview of the uploader -->\\r\\n        <dropzone-upload-preview></dropzone-upload-preview>\\r\\n        <adam-hint class=\\\"field-hints\\\"></adam-hint>\\r\\n\\r\\n    </div>\\r\\n</div>\");}]);"],"sourceRoot":"/source/"}