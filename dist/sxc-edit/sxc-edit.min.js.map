{"version":3,"sources":["sxc-edit.min.js"],"names":["angular","module","directive","restrict","replace","transclude","templateUrl","factory","$http","eavConfig","sxc","svcCreator","appRoot","appId","sanitizeSvc","$filter","contentType","entityGuid","field","subfolder","serviceConfig","sanitizePath","allowEdit","svc","url","resolveServiceUrl","folders","adamRoot","substr","indexOf","getSubfolder","usePortalRoot","isLibrary","checkAllowEdit","items","currentFolder","Name","AllowEdit","getAllowEdit","uploadUrl","targetSubfolder","addFullPath","value","key","fullPath","Path","toLowerCase","extend","implementLiveList","get","params","then","result","forEach","data","addFolder","newfolder","post","newFolder","sanitizeName","liveListReload","goIntoFolder","childFolder","push","pathParts","split","subPath","c","length","Subfolder","goUp","pop","item","isFolder","IsFolder","id","Id","rename","newName","reload","BrowserController","$scope","adamSvc","debugState","eavAdminDialogs","fileType","featuresSvc","toastr","vm","this","debug","clipboardPasteImageFunctionalityDisabled","initConfig","contentTypeName","fieldName","subFolder","showImagesOnly","folderDepth","showFolders","allowAssetsInRoot","metadataContentTypes","enabled","show","adamModeConfig","disabled","ngDisabled","enableSelect","activate","autoLoad","toggle","registerSelf","refresh","liveList","newConfig","configChanged","JSON","stringify","oldConfig","openUpload","dropzone","select","fileItem","updateCallback","folderName","window","prompt","error","console","del","ok","confirm","folder","currentFolderDepth","allowCreateFolder","editMetadata","_itemDefinition","getMetadataType","openEditItems","found","Type","match","metadataType","title","MetadataId","EntityId","Title","ContentTypeName","Metadata","Key","KeyType","TargetType","metadataOfCmsObject","Prefill","EntityTitle","icon","getIconClass","allowedFileTypes","fileFilter","map","i","trim","fileEndingFilter","extension","$inject","app","controller","require","link","scope","elem","attrs","dropzoneCtrl","adam","controllerAs","tabId","AppInstanceId","ContentBlockId","dragClass","$timeout","$translate","postLink","element","clipboardPasteImageFeature","clipboardPasteImageFunctionalityEnable","pasteInstance","querySelector","pastableContenteditable","addEventListener","ev","pasteImageInDropzone","pastableTextarea","pastableNonInputable","detail","filename","imageFileName","img","getFile","processFile","fileName","newFile","file","document","documentMode","test","navigator","userAgent","Blob","type","lastModifiedDate","name","formData","FormData","append","e","log","header","$parent","to","options","Guid","paths","settings","merged","Paths","config","urlRoot","maxFilesize","paramName","maxThumbnailFilesize","headers","ModuleId","TabId","dictDefaultMessage","addRemoveLinks","previewsContainer","clickable","eventHandlers","addedfile","$apply","uploading","drop","event","processing","success","response","Success","afterUpload","alert","Error","xhr","instant","queuecomplete","getUploadingFiles","getQueuedFiles","Dropzone","handler","on","processDropzone","processQueue","resetDropzone","removeAllFiles","hiddenFileInput","click","createHiddenEditable","hiddenEditable","createElement","setAttribute","style","width","height","position","left","overflow","opacity","matches","el","selector","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","call","isFocusable","hasTabindex","fieldset","focusableIfVisible","nodeName","closest","href","Paste","_container","_target","triggerCustomEvent","eventName","createEvent","initCustomEvent","CustomEvent","dispatchEvent","classList","add","_this","_i","clipboardData","k","len1","pastedFilename","ref2","originalEvent","_paste_event_fired","pastedTypes","preventDefault","stopPropagation","stopImmediatePropagation","endsWith","clipboardImageAsFile","getAsFile","prototype","mountNonInputable","nonInputable","appendChild","paste","target","focus","remove","mountTextarea","textarea","ref","ref1","DataTransfer","undefined","Object","getOwnPropertyDescriptor","mountContenteditable","insertBefore","ctlDown","keyCode","ctrlKey","metaKey","_textarea_focus_stolen","setTimeout","contenteditable","Element","pasteContainer","pm","_pastable","removeFromStart","sanitized","charToRemove","substring","removeFromEnd","cleanBadPath","goodChar","illegalRe","controlRe","reservedRe","windowsReservedRe","windowsTrailingRe","replacement","formlyConfigProvider","defaultFieldWrappers","setType","template","wrapper","templateOptions","Rows","$uibModal","promiseToastr","open","oldValue","callback","connector","valueChanged","dialogType","modalInstance","close","CurrentValue","resolve","bridge","windowClass","getUrlOfId","idCode","guid","linkLowered","encodeURIComponent","portalRoot","webFormsBridgeUrl","$2sxc","urlParams","bridgeSyncHeight","keys","prop","join","src","w","contentWindow","connectBridge","resize","css","body","scrollHeight","$","ready","wrappers","slice","splice","$controller","eavDefaultValueService","EnableRemove","AllowMultiValue","EnableAddExisting","EnableCreate","EnableEdit","EntityType","enableCollapseField","collapseField","model","Values","Value","fieldWrappersWithPreview","dnnBridgeSvc","ensureDefaultConfig","ShowAdam","Buttons","testLink","isImage","thumbnailUrl","size","quote","qt","tooltipUrl","str","$watch","newValue","promise","processResultOfPagePicker","openPageDialog","FileFilter","registerAdam","setValue","ServerResourceMapping","toggleAdam","imagesOnly","defaultFieldWrappersNoFloat","CHARS","Math","uuid","len","radix","chars","random","r","uuidFast","Array","rnd","uuidCompact","v","toString","$ocLazyLoad","getIconClasses","className","charcount","foundList","duplicateDetector","ssSet","styleSheets","classes","rules","cssRules","x","selectorText","txt","icnClass","rule","class","loadAdditionalResources","files","mapped","fileList","load","iconFilter","prefix","previewPrefix","icons","useTestValues","selectorIsOpen","setIcon","form","$setDirty","controlSettings","Files","CssPrefix","PreviewCss","cs","init","context","inj","$injector","appDialogConfigSvc","getDialogSettings","IsContent","formVm","formFields","SortOrder","appAssetsSvc","fieldMask","setFileConfig","typeWatcher","locWatcher","onLocationChange","templates","svcApp","svcGlobal","readyToUse","specs","Token","ext","suggestion","C# Razor","loc","svcCurrent","path","foundSlash","lastIndexOf","create","filter","out","initialValue","initialReadOnly","onChanged","setReadOnly","readOnly","FieldWysiwygTinyMceController","languages","tinyMceHelpers","tinyMceToolbars","tinyMceConfig","tinyMceAdam","tinyMceDnnBridge","tinyMceInitCallback","editor","tinymceOptions","language","addTranslations","addButtons","enableContentBlocksIfPossible","watchDisabled","ngscope","readonly","$broadcast","fields","index","nextField","enableContentBlocks","getDefaultOptions","setup","getPasteWysiwygAbilityOption","attachAdam","attach","lang2","currentLanguage","language_url","modeImage","adamModeImage","content","insertContent","addAdamButtons","addButton","onclick","menu","text","tooltip","execCommand","beta","buildModes","modes","standard","menubar","toolbar","contextmenu","advanced","cdnRoot","imgSizes","defaultLanguage","plugins","validateAlso","baseURL","inline","automatic_uploads","autosave_ask_before_unload","extended_valid_elements","custom_elements","relative_urls","default_link_target","object_resizing","skin","theme","debounce","paste_as_text","paste_enable_default_filters","paste_create_paragraphs","paste_create_linebreaks","paste_force_cleanup_wordpaste","paste_use_dialog","paste_auto_cleanup_on_paste","paste_convert_middot_lists","paste_convert_headers_to_strong","paste_remove_spans","paste_remove_styles","paste_postprocess","plugin","args","anchors","node","getElementsByTagName","hasAttribute","processResultOfDnnBridge","previouslySelected","selection","getContent","FileId","openDnnDialog","initLangResources","primaryLan","mceTranslations","pLen","all","getTranslationTable","translations","tinymce","addI18n","addTinyMceToolbarButtons","initOnPostRender","watchChange","formatter","formatChanged","state","self","active","registerTinyMceFormats","imgformats","is","collapsed","styles","register","switchModes","mode","panel","renderUI","getElementById","makeImgFormatCall","apply","makeTagDetector","tagWeNeedInTheTagPath","currentElement","selectorMatched","dom","getBody","contains","linkgroup","onPostRender","linkgroupPro","copy","cmd","tag","buttons","h3","h4","h5","h6","p","imgMenuArray","resizeimg100","addContextToolbar","run","$templateCache","put"],"mappings":"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","file":"sxc-edit.min.js","sourcesContent":["(function() { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    angular.module(\"Adam\", [\r\n        \"SxcServices\",\r\n        \"EavConfiguration\", // config\r\n        \"EavServices\", // multi-language stuff\r\n        ])\r\n        ;\r\n\r\n} ());\n(function() {\r\n    /* jshint laxbreak:true*/\r\n\r\n    angular.module(\"Adam\", [])\r\n        /*@ngInject*/\r\n        .directive(\"adamHint\", function () {\r\n            return {\r\n                restrict: \"E\",\r\n                replace: false,\r\n                transclude: false,\r\n                templateUrl: \"adam/adam-hint.html\"\r\n            };\r\n        });\r\n})();\n// note: don't prefix angular with window - something fails in production build if you do that\r\n// ReSharper disable PossiblyUnassignedProperty\r\nangular.module('Adam')\r\n  /*@ngInject*/\r\n  .factory('adamSvc', [\"$http\", \"eavConfig\", \"sxc\", \"svcCreator\", \"appRoot\", \"appId\", \"sanitizeSvc\", \"$filter\", function ($http, eavConfig, sxc, svcCreator, appRoot, appId, sanitizeSvc, $filter) {\r\n\r\n    // Construct a service for this specific appId\r\n    return function createSvc(contentType, entityGuid, field, subfolder, serviceConfig) {\r\n\r\n      subfolder = sanitizeSvc.sanitizePath(subfolder);\r\n      \r\n      allowEdit = false;\r\n\r\n      var svc = {\r\n        url: sxc.resolveServiceUrl('app-content/' + contentType + '/' + entityGuid + '/' + field),\r\n        subfolder: subfolder,\r\n        folders: [],\r\n        adamRoot: appRoot.substr(0, appRoot.indexOf('2sxc')),\r\n      };\r\n\r\n      getSubfolder = function(serviceConfig, subfolder) {\r\n        if (!!subfolder && !!serviceConfig && (serviceConfig.usePortalRoot || serviceConfig.isLibrary)) {\r\n          return subfolder;\r\n        }\r\n        return '';\r\n      };\r\n\r\n      checkAllowEdit = function (items) {\r\n        var currentFolder = $filter('filter')(items, { Name: '.' }, true)[0];\r\n        if (currentFolder) {\r\n          allowEdit = currentFolder.AllowEdit;\r\n          // return currentFolder.AllowEdit;\r\n        }\r\n        else {\r\n          // currentFolder missing\r\n          allowEdit = false;\r\n          // return false;\r\n        }\r\n      };\r\n\r\n      svc.getAllowEdit = function() {\r\n        // return true;\r\n        return allowEdit;\r\n      };\r\n\r\n      // get the correct url for uploading as it is needed by external services (dropzone)\r\n      svc.uploadUrl = function (targetSubfolder) {\r\n        targetSubfolder = getSubfolder(serviceConfig, sanitizeSvc.sanitizePath(targetSubfolder));\r\n        var url = (targetSubfolder === '')\r\n          ? svc.url\r\n          : svc.url + '?subfolder=' + targetSubfolder;\r\n        url += (url.indexOf('?') === -1 ? '?' : '&')\r\n          + 'usePortalRoot=' + serviceConfig.usePortalRoot\r\n          + '&appId=' + appId;\r\n        return url;\r\n      };\r\n\r\n      // extend a json-response with a path (based on the adam-root) to also have a fullPath\r\n      svc.addFullPath = function (value, key) {\r\n        // 2dm 2018-03-29 special fix - sometimes the path already has the full path, sometimes not\r\n        // it should actually be resolved properly, but because I don't have time\r\n        // ATM (data comes from different web-services, which are also used in other places\r\n        // I'll just check if it's already in there\r\n        value.fullPath = value.Path;\r\n\r\n        if (value.Path && value.Path.toLowerCase().indexOf(svc.adamRoot.toLowerCase()) === -1)\r\n          value.fullPath = svc.adamRoot + value.Path;\r\n      };\r\n\r\n      svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n        return $http.get(svc.url + '/items',\r\n          {\r\n            params: {\r\n              subfolder: getSubfolder(serviceConfig, svc.subfolder),\r\n              usePortalRoot: serviceConfig.usePortalRoot,\r\n              appId: appId\r\n            }\r\n          })\r\n          .then(function (result) {\r\n            angular.forEach(result.data, svc.addFullPath);\r\n            checkAllowEdit(result.data);\r\n            return result;\r\n          });\r\n      }));\r\n\r\n      // create folder\r\n      svc.addFolder = function (newfolder) {\r\n        return $http.post(svc.url + '/folder',\r\n          {},\r\n          {\r\n            params: {\r\n              subfolder: svc.subfolder,\r\n              newFolder: sanitizeSvc.sanitizeName(newfolder),\r\n              usePortalRoot: serviceConfig.usePortalRoot,\r\n              appId: appId\r\n            }\r\n          })\r\n          .then(svc.liveListReload);\r\n      };\r\n\r\n      svc.goIntoFolder = function (childFolder) {\r\n        svc.folders.push(childFolder);\r\n        var pathParts = childFolder.Path.split('/');\r\n        var subPath = '';\r\n        for (var c = 0; c < svc.folders.length; c++)\r\n          subPath = pathParts[pathParts.length - c - 2] + '/' + subPath;\r\n\r\n        subPath = subPath.replace('//', '/');\r\n        if (subPath[subPath.length - 1] === '/')\r\n          subPath = subPath.substr(0, subPath.length - 1);\r\n\r\n        // add configured Paths\r\n        subPath = (!!subfolder) ? subfolder + '/' + subPath : subPath;\r\n\r\n        childFolder.Subfolder = subPath;\r\n\r\n        // now assemble the correct subfolder based on the folders-array\r\n        svc.subfolder = subPath;\r\n        svc.liveListReload();\r\n        return subPath;\r\n      };\r\n\r\n      svc.goUp = function () {\r\n        if (svc.folders.length > 0)\r\n          svc.folders.pop();\r\n        if (svc.folders.length > 0) {\r\n          svc.subfolder = svc.folders[svc.folders.length - 1].Subfolder;\r\n        } else {\r\n          svc.subfolder = subfolder || '';\r\n        }\r\n        svc.liveListReload();\r\n        return svc.subfolder;\r\n      };\r\n\r\n      // delete, then reload\r\n      // IF verb DELETE fails, so I'm using get for now\r\n      svc.delete = function (item) {\r\n        return $http.get(svc.url + '/delete',\r\n          {\r\n            params: {\r\n              subfolder: getSubfolder(serviceConfig, svc.subfolder),\r\n              isFolder: item.IsFolder,\r\n              id: item.Id,\r\n              usePortalRoot: serviceConfig.usePortalRoot,\r\n              appId: appId\r\n            }\r\n          })\r\n          .then(svc.liveListReload);\r\n      };\r\n\r\n      // rename, then reload\r\n      svc.rename = function (item, newName) {\r\n        return $http.get(svc.url + '/rename',\r\n          {\r\n            params: {\r\n              subfolder: getSubfolder(serviceConfig, svc.subfolder),\r\n              isFolder: item.IsFolder,\r\n              id: item.Id,\r\n              usePortalRoot: serviceConfig.usePortalRoot,\r\n              newName: sanitizeSvc.sanitizeName(newName),\r\n              appId: appId\r\n            }\r\n          })\r\n          .then(svc.liveListReload);\r\n      };\r\n\r\n      svc.reload = svc.liveListReload;\r\n\r\n      return svc;\r\n    };\r\n  }]);\r\n// ReSharper restore PossiblyUnassignedProperty\r\n\n(function () {\r\n  /* jshint laxbreak:true */\r\n  \"use strict\";\r\n\r\n  BrowserController.$inject = [\"$scope\", \"adamSvc\", \"debugState\", \"eavConfig\", \"eavAdminDialogs\", \"appRoot\", \"fileType\", \"featuresSvc\", \"toastr\"];\r\n  var app = angular.module(\"Adam\");\r\n\r\n  // The controller for the main form directive\r\n  app.controller(\"BrowserController\", BrowserController);\r\n\r\n  /*@ngInject*/\r\n  function BrowserController($scope, adamSvc, debugState, eavConfig, eavAdminDialogs, appRoot, fileType, featuresSvc, toastr) {\r\n    var vm = this;\r\n    vm.debug = debugState;\r\n\r\n    vm.clipboardPasteImageFunctionalityDisabled = true;\r\n\r\n    var initConfig = function initConfig() {\r\n      vm.contentTypeName = $scope.contentTypeName;\r\n      vm.entityGuid = $scope.entityGuid;\r\n      vm.fieldName = $scope.fieldName;\r\n      vm.subFolder = $scope.subFolder || \"\";\r\n      vm.showImagesOnly = $scope.showImagesOnly = $scope.showImagesOnly || false;\r\n\r\n      vm.folderDepth = (typeof $scope.folderDepth !== 'undefined' && $scope.folderDepth !== null)\r\n        ? $scope.folderDepth\r\n        : 2;\r\n      vm.showFolders = !!vm.folderDepth;\r\n      vm.allowAssetsInRoot = $scope.allowAssetsInRoot || true;    // if true, the initial folder can have files, otherwise only subfolders\r\n      vm.metadataContentTypes = $scope.metadataContentTypes || \"\";\r\n\r\n      // add clipboard paste image feature if enabled\r\n      featuresSvc.enabled('f6b8d6da-4744-453b-9543-0de499aa2352').then(\r\n        function (enabled) {\r\n          if (enabled) {\r\n            vm.clipboardPasteImageFunctionalityDisabled = false;\r\n          }\r\n        });\r\n    };\r\n\r\n    initConfig();\r\n\r\n    vm.show = false;\r\n    vm.appRoot = appRoot;\r\n    vm.adamModeConfig = $scope.adamModeConfig;\r\n\r\n    vm.disabled = $scope.ngDisabled;\r\n    vm.enableSelect = ($scope.enableSelect === false) ? false : true; // must do it like this, $scope.enableSelect || true will not work\r\n\r\n    vm.activate = function () {\r\n      if ($scope.autoLoad)\r\n        vm.toggle();\r\n      if ($scope.registerSelf)\r\n        $scope.registerSelf(vm);\r\n    };\r\n\r\n    // load svc...\r\n    vm.svc = adamSvc(vm.contentTypeName, vm.entityGuid, vm.fieldName, vm.subFolder, $scope.adamModeConfig);\r\n\r\n    vm.allowEdit = function() { \r\n      return vm.svc.getAllowEdit();\r\n    };\r\n\r\n    // refresh - also used by callback after an upload completed\r\n    vm.refresh = vm.svc.liveListReload;\r\n\r\n    vm.get = function () {\r\n      vm.items = vm.svc.liveList();\r\n      vm.folders = vm.svc.folders;\r\n      vm.svc.liveListReload();\r\n    };\r\n\r\n    vm.toggle = function toggle(newConfig) {\r\n      // Reload configuration\r\n      initConfig();\r\n      var configChanged = false;\r\n      if (newConfig) {\r\n        // Detect changes in config, allows correct toggle behaviour\r\n        if (JSON.stringify(newConfig) !== vm.oldConfig)\r\n          configChanged = true;\r\n        vm.oldConfig = JSON.stringify(newConfig);\r\n\r\n        vm.showImagesOnly = newConfig.showImagesOnly;\r\n        $scope.adamModeConfig.usePortalRoot = !!(newConfig.usePortalRoot);\r\n      }\r\n\r\n      vm.show = configChanged || !vm.show;\r\n\r\n      if (!vm.show)\r\n        $scope.adamModeConfig.usePortalRoot = false;\r\n\r\n      // Override configuration in portal mode\r\n      if ($scope.adamModeConfig.usePortalRoot) {\r\n        vm.showFolders = true;\r\n        vm.folderDepth = 99;\r\n      }\r\n\r\n      if (vm.show)\r\n        vm.get();\r\n    };\r\n\r\n    vm.openUpload = function () {\r\n      vm.dropzone.openUpload();\r\n    };\r\n\r\n    vm.select = function (fileItem) {\r\n      if (vm.disabled || !vm.enableSelect)\r\n        return;\r\n      $scope.updateCallback(fileItem);\r\n    };\r\n\r\n    vm.addFolder = function () {\r\n      if (vm.disabled)\r\n        return;\r\n      var folderName = window.prompt(\"Please enter a folder name\"); // todo i18n\r\n      if (folderName)\r\n        vm.svc.addFolder(folderName)\r\n          .then(vm.refresh)\r\n          .catch(function(error) {\r\n            console.error(error);\r\n            toastr.error('permission denied', 'can\\'t create new folder'); // todo i18n\r\n          });\r\n    };\r\n\r\n    vm.del = function del(item) {\r\n      if (vm.disabled)\r\n        return;\r\n      var ok = window.confirm(\"Are you sure you want to delete this item?\"); // todo i18n\r\n      if (ok)\r\n        vm.svc.delete(item)\r\n        .catch(function(error) {\r\n          console.error(error);\r\n          toastr.error('permission denied', 'can\\'t delete'); // todo i18n\r\n        });\r\n    };\r\n\r\n    vm.rename = function rename(item) {\r\n      var newName = window.prompt('Rename the file / folder to: ', item.Name);\r\n      if (newName)\r\n        vm.svc.rename(item, newName)\r\n        .catch(function(error) {\r\n          console.error(error);\r\n          toastr.error('permission denied', 'can\\'t rename'); // todo i18n\r\n        });\r\n    };\r\n\r\n    //#region Folder Navigation\r\n    vm.goIntoFolder = function (folder) {\r\n      var subFolder = vm.svc.goIntoFolder(folder);\r\n      vm.subFolder = subFolder;\r\n    };\r\n\r\n    vm.goUp = function () {\r\n      vm.subFolder = vm.svc.goUp();\r\n    };\r\n\r\n    vm.currentFolderDepth = function () {\r\n      return vm.svc.folders.length;\r\n    };\r\n\r\n    vm.allowCreateFolder = function () {\r\n      return (vm.allowEdit()) && (vm.svc.folders.length < vm.folderDepth);\r\n    };\r\n    //#endregion\r\n\r\n    //#region Metadata\r\n    vm.editMetadata = function (item) {\r\n      var items = [\r\n        vm._itemDefinition(item, vm.getMetadataType(item))\r\n      ];\r\n\r\n      eavAdminDialogs.openEditItems(items, vm.refresh);\r\n    };\r\n\r\n    vm.getMetadataType = function (item) {\r\n      var found;\r\n\r\n      // check if it's a folder and if this has a special registration\r\n      if (item.Type === \"folder\") {\r\n        found = vm.metadataContentTypes.match(/^(folder)(:)([^\\n]*)/im);\r\n        if (found)\r\n          return found[3];\r\n        else\r\n          return null;\r\n      }\r\n\r\n      // check if the extension has a special registration\r\n      // -- not implemented yet\r\n\r\n      // check if the type \"image\" or \"document\" has a special registration\r\n      // -- not implemneted yet\r\n\r\n\r\n      // nothing found so far, go for the default with nothing as the prefix \r\n      found = vm.metadataContentTypes.match(/^([^:\\n]*)(\\n|$)/im);\r\n      if (found)\r\n        return found[1];\r\n\r\n      // this is if we don't find anything\r\n      return null;\r\n    };\r\n\r\n    // todo: move to service, shouldn't be part of the application\r\n    vm._itemDefinition = function (item, metadataType) {\r\n      var title = \"EditFormTitle.Metadata\"; // todo: i18n\r\n      return item.MetadataId !== 0\r\n        ? { EntityId: item.MetadataId, Title: title } // if defined, return the entity-number to edit\r\n        : {\r\n          ContentTypeName: metadataType, // otherwise the content type for new-assegnment\r\n          Metadata: {\r\n            Key: (item.Type === \"folder\" ? \"folder\" : \"file\") + \":\" + item.Id,\r\n            KeyType: \"string\",\r\n            TargetType: eavConfig.metadataOfCmsObject\r\n          },\r\n          Title: title,\r\n          Prefill: { EntityTitle: item.Name } // possibly prefill the entity title \r\n        };\r\n\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region icons\r\n    vm.icon = function (item) {\r\n      return fileType.getIconClass(item.Name);\r\n    };\r\n    //#endregion\r\n\r\n    vm.allowedFileTypes = [];\r\n    if ($scope.fileFilter) {\r\n      vm.allowedFileTypes = $scope.fileFilter.split(',').map(function (i) {\r\n        return i.replace('*', '').trim();\r\n      });\r\n    }\r\n\r\n    vm.fileEndingFilter = function (item) {\r\n      if (vm.allowedFileTypes.length === 0)\r\n        return true;\r\n      var extension = item.Name.match(/(?:\\.([^.]+))?$/)[0];\r\n      return vm.allowedFileTypes.indexOf(extension) != -1;\r\n    };\r\n\r\n    vm.activate();\r\n  }\r\n\r\n})();\r\n\n(function () {\r\n    /* jshint laxbreak:true*/\r\n\r\n    angular.module(\"Adam\")\r\n        /*@ngInject*/\r\n        .directive(\"adamBrowser\", function () {\r\n            return {\r\n                restrict: \"E\",\r\n                templateUrl: \"adam/browser.html\",\r\n\r\n                //replace: true,\r\n                transclude: false,\r\n                require: \"^dropzone\",\r\n                link: function postLink(scope, elem, attrs, dropzoneCtrl) {\r\n                    // connect this adam to the dropzone\r\n                    dropzoneCtrl.adam = scope.vm;       // so the dropzone controller knows what path etc.\r\n                    scope.vm.dropzone = dropzoneCtrl;   // so we can require an \"open file browse\" dialog\r\n                },\r\n\r\n                // todo: change \"scope\" to bindToController whenever I have time - http://blog.thoughtram.io/angularjs/2015/01/02/exploring-angular-1.3-bindToController.html\r\n                scope: {\r\n                    // Identity fields\r\n                    contentTypeName: \"=\",\r\n                    entityGuid: \"=\",\r\n                    fieldName: \"=\",\r\n\r\n                    // configuration general\r\n                    subFolder: \"=\",\r\n                    folderDepth: \"=\", \r\n                    metadataContentTypes: \"=\",\r\n                    allowAssetsInRoot: \"=\",\r\n                    showImagesOnly: \"=?\",\r\n                    adamModeConfig: \"=\",\r\n                    fileFilter: \"=?\",\r\n\r\n                    // binding and cross-component communication\r\n                    autoLoad: \"=\",\r\n                    updateCallback: \"=\",\r\n                    registerSelf: \"=\",\r\n\r\n                    // basic functionality\r\n                    enableSelect: \"=\",\r\n                    ngDisabled: \"=\"\r\n                },\r\n                controller: \"BrowserController\",\r\n                controllerAs: \"vm\"\r\n\r\n            };\r\n        });\r\n})();\n(function() {\r\n    /* jshint laxbreak:true*/\r\n    angular.module(\"Adam\")\r\n        /*@ngInject*/\r\n        .directive(\"dropzoneUploadPreview\", function () {\r\n            return {\r\n                restrict: \"E\",\r\n                templateUrl: \"adam/dropzone-upload-preview.html\",\r\n                replace: true,\r\n                transclude: false\r\n            };\r\n        });\r\n})();\n/* js/fileAppDirectives */\r\n(function () {\r\n  angular.module('Adam')\r\n    /*@ngInject*/\r\n    .directive('dropzone', [\"sxc\", \"tabId\", \"AppInstanceId\", \"ContentBlockId\", \"dragClass\", \"adamSvc\", \"$timeout\", \"$translate\", \"featuresSvc\", \"toastr\", function (sxc, tabId, AppInstanceId, ContentBlockId, dragClass, adamSvc, $timeout, $translate, featuresSvc, toastr) {\r\n\r\n      return {\r\n        restrict: 'C',\r\n        link: postLink,\r\n\r\n        // This controller is needed, because it needs an API which can talk to other directives\r\n        controller: controller\r\n      };\r\n\r\n\r\n      // this is the method called after linking the directive, which initializes Dropzone\r\n      function postLink(scope, element, attrs, controller) {\r\n        var header = scope.$parent.to.header;\r\n        var field = scope.$parent.options.key;\r\n        var entityGuid = header.Guid;\r\n        var paths = scope.$parent.to.settings.merged.Paths;\r\n        var svc = adamSvc(header.ContentTypeName, entityGuid, field, paths, scope.$parent.vm.adamModeConfig);\r\n        var url = svc.url;\r\n\r\n        var config = {\r\n          url: url,\r\n          urlRoot: url,\r\n          maxFilesize: 10000, // 10'000 MB = 10 GB, note that it will also be stopped on the server if it's larger than the really allowed sized\r\n          paramName: 'uploadfile',\r\n          maxThumbnailFilesize: 10,\r\n\r\n          headers: {\r\n            \"ModuleId\": AppInstanceId,\r\n            \"TabId\": tabId,\r\n            \"ContentBlockId\": ContentBlockId\r\n          },\r\n\r\n          dictDefaultMessage: '',\r\n          addRemoveLinks: false,\r\n          previewsContainer: '.field-' + field.toLowerCase() + ' .dropzone-previews',\r\n          // we need a clickable, because otherwise the entire area is clickable. so i'm just making the preview clickable, as it's not important\r\n          clickable: '.field-' + field.toLowerCase() + ' .invisible-clickable' // \" .dropzone-adam\"\r\n        };\r\n\r\n\r\n        var eventHandlers = {\r\n          'addedfile': function (file) {\r\n            $timeout(function () {\r\n              // anything you want can go here and will safely be run on the next digest.\r\n              scope.$apply(function () { // this must run in a timeout\r\n                scope.uploading = true;\r\n              });\r\n            });\r\n          },\r\n\r\n          'drop': function (event) {\r\n            // console.log('stv: drop', event);\r\n          },\r\n\r\n          \"processing\": function (file) {\r\n            this.options.url = svc.uploadUrl(controller.adam.subFolder);\r\n          },\r\n\r\n          'success': function (file, response) {\r\n            if (response.Success) {\r\n              svc.addFullPath(response); // calculate additional infos\r\n              scope.$parent.afterUpload(response);\r\n            } else {\r\n              alert('Upload failed because: ' + response.Error);\r\n            }\r\n          },\r\n          'error': function (file, error, xhr) {\r\n            alert($translate.instant('Errors.AdamUploadError'));\r\n          },\r\n\r\n          \"queuecomplete\": function (file) {\r\n            if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {\r\n              scope.uploading = false;\r\n              controller.adam.refresh();\r\n            }\r\n          }\r\n        };\r\n\r\n        // delay building the dropszone till the DOM is ready\r\n        $timeout(function () {\r\n          var dropzone = new Dropzone(element[0], config);\r\n\r\n          angular.forEach(eventHandlers, function (handler, event) {\r\n            dropzone.on(event, handler);\r\n          });\r\n\r\n          scope.processDropzone = function () { dropzone.processQueue(); };\r\n          scope.resetDropzone = function () { dropzone.removeAllFiles(); };\r\n          controller.openUpload = function () { dropzone.hiddenFileInput.click(); };\r\n          controller.processFile = function (file) { dropzone.processFile(file); }; // needed for clipboard paste\r\n\r\n          clipboardPasteImageFeature(element[0], dropzone); // add clipboard paste image feature if enabled\r\n\r\n        }, 0);\r\n\r\n\r\n        /**\r\n         * add clipboard paste image feature if enabled\r\n         * @param {any} element\r\n         * @param {any} dropzone\r\n         */\r\n        function clipboardPasteImageFeature(element, dropzone) {\r\n          featuresSvc.enabled('f6b8d6da-4744-453b-9543-0de499aa2352').then(\r\n            function (enabled) {\r\n              if (enabled) {\r\n                clipboardPasteImageFunctionalityEnable(element, dropzone);\r\n              }\r\n            });\r\n        }\r\n\r\n\r\n        /**\r\n         * attach paste functionality to UI elements in dropzone\r\n         * @param {any} element\r\n         * @param {any} dropzone\r\n         */\r\n        function clipboardPasteImageFunctionalityEnable(element, dropzone) {\r\n\r\n          var pasteInstance;\r\n\r\n          // 1. pastableContenteditable - for tinymce\r\n          pasteInstance = element.querySelector('div > div[contenteditable]');\r\n          if (pasteInstance) {\r\n            pasteInstance.pastableContenteditable();\r\n            pasteInstance.addEventListener('handleImage', function (ev, data) {\r\n              pasteImageInDropzone(ev, data, dropzone);\r\n            });\r\n            return;\r\n          }\r\n\r\n          // 2. pastableTextarea - for adam input\r\n          pasteInstance = element.querySelector('div > div.after-preview > div > input');\r\n          if (pasteInstance) {\r\n            pasteInstance.pastableTextarea();\r\n            pasteInstance.addEventListener('handleImage', function (ev, data) {\r\n              pasteImageInDropzone(ev, data, dropzone);\r\n            });\r\n\r\n            // pastableNonInputable\r\n            pasteInstance = element; // whole dropzone\r\n            pasteInstance.pastableNonInputable();\r\n            pasteInstance.addEventListener('handleImage', function (ev, data) {\r\n              pasteImageInDropzone(ev, data, dropzone);\r\n            });\r\n\r\n            return;\r\n          }\r\n\r\n          // 3. pastableTextarea - for adam library\r\n          pasteInstance = element.querySelector('div.paste-image');\r\n          if (pasteInstance) {\r\n            // pastableNonInputable\r\n            pasteInstance = element; // whole dropzone\r\n            pasteInstance.pastableNonInputable();\r\n            pasteInstance.addEventListener('handleImage', function (ev, data) {\r\n              pasteImageInDropzone(ev, data, dropzone);\r\n            });\r\n\r\n            return;\r\n          }\r\n        }\r\n\r\n\r\n        /**\r\n         * handle clipboard image after paste and prompt for new image filename\r\n         * @param {any} ev event\r\n         * @param {any} data clipboard image data\r\n         * @param {any} dropzone\r\n         */\r\n        function pasteImageInDropzone(ev, data, dropzone) {\r\n          if (ev.detail && !data) {\r\n            data = ev.detail;\r\n          }\r\n\r\n          // todo: convert png to jpg to reduce file size\r\n          var filename = ev.imageFileName ? ev.imageFileName : ev.detail.imageFileName;\r\n          var img = getFile(data, filename);\r\n          dropzone.processFile(img);\r\n          //ev.stopImmediatePropagation();\r\n          //ev.preventDefault();\r\n        }\r\n\r\n        /**\r\n         * creates new file with custom fileName\r\n         * @param {File} file\r\n         * @param {string} fileName\r\n         */\r\n        function getFile(data, fileName) {\r\n          var newFile = data.file; // for fallback\r\n\r\n          try {\r\n            if (document.documentMode || /Edge/.test(navigator.userAgent) || /MSIE/.test(navigator.userAgent) || /rv:11/.test(navigator.userAgent)) {\r\n              // fix this for Edge and IE\r\n              newFile = new Blob([data.file], { type: data.file.type });\r\n              newFile.lastModifiedDate = data.file.lastModifiedDate;\r\n              newFile.name = fileName;\r\n            } else {\r\n              // File.name is readonly so we do this\r\n              var formData = new FormData();\r\n              formData.append('file', data.file, fileName);\r\n              newFile = formData.get('file');\r\n            }\r\n          } catch (e) {\r\n            console.log('paste image error', e);\r\n          }\r\n          return newFile;\r\n        }\r\n      }\r\n\r\n      /*@ngInject*/\r\n      function controller() {\r\n        var vm = this;\r\n        vm.adam = {\r\n          show: false,\r\n          subFolder: '',\r\n          refresh: function () { }\r\n        };\r\n\r\n      }\r\n\r\n    }]);\r\n\r\n\r\n})();\n/*\r\npaste.js is an interface to read image from clipboard in different browsers. It also contains several hacks.\r\nimplementation is based on https://github.com/layerssss/paste.js\r\n*/\r\n\r\n(function () {\r\n\r\n    var matches = function (el, selector) {\r\n        return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n    };\r\n\r\n    function createHiddenEditable() {\r\n        var hiddenEditable = document.createElement('div');\r\n        hiddenEditable.setAttribute('contenteditable', true);\r\n        hiddenEditable.setAttribute('aria-hidden', true);\r\n        hiddenEditable.setAttribute('tabindex', -1);\r\n        hiddenEditable.style.width = 1;\r\n        hiddenEditable.style.height = 1;\r\n        hiddenEditable.style.position = 'fixed';\r\n        hiddenEditable.style.left = -100;\r\n        hiddenEditable.style.overflow = 'hidden';\r\n        hiddenEditable.style.opacity = 1e-17;\r\n        return hiddenEditable;\r\n    }\r\n\r\n    var isFocusable = function (element, hasTabindex) {\r\n        var fieldset;\r\n        var focusableIfVisible;\r\n        var nodeName = element.nodeName.toLowerCase();\r\n\r\n        if (/^(input|select|textarea|button|object)$/.test(nodeName)) {\r\n            focusableIfVisible = !element.disabled;\r\n            if (focusableIfVisible) {\r\n                fieldset = element.closest('fieldset');\r\n                if (fieldset) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ('a' === nodeName) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n        focusableIfVisible = focusableIfVisible || matches(element, '[contenteditable]');\r\n        return focusableIfVisible;\r\n    };\r\n\r\n    var Paste = (function () {\r\n        Paste.prototype._target = null;\r\n        Paste.prototype._container = null;\r\n\r\n        Paste.mountNonInputable = function (nonInputable) {\r\n            var hiddenEditable = createHiddenEditable();\r\n            nonInputable.appendChild(hiddenEditable);\r\n            var paste = new Paste(hiddenEditable, nonInputable);\r\n\r\n            nonInputable.addEventListener('click', (function (_this) {\r\n                return function (ev) {\r\n                    if (!isFocusable(ev.target, false)) {\r\n                        paste._container.focus();\r\n                        return;\r\n                    }\r\n                };\r\n            })(this));\r\n\r\n            paste._container.addEventListener('focus', (function (_this) {\r\n                return function () {\r\n                    nonInputable.classList.add('pastable-focus');\r\n                    return;\r\n                };\r\n            })(this));\r\n\r\n            paste._container.addEventListener('blur', (function (_this) {\r\n                return function () {\r\n                    nonInputable.classList.remove('pastable-focus');\r\n                    return;\r\n                };\r\n            })(this));\r\n\r\n            return paste;\r\n        };\r\n\r\n        Paste.mountTextarea = function (textarea) {\r\n            var ref, ref1;\r\n            if (((DataTransfer) ? DataTransfer.prototype : undefined) &&\r\n                ((ref = Object.getOwnPropertyDescriptor) ? (ref1 = ref.call(Object, DataTransfer.prototype, 'items')) ? ref1.get : undefined : undefined)) {\r\n                this.mountContenteditable(textarea);\r\n                return;\r\n            }\r\n\r\n            var paste = new Paste(createHiddenEditable().insertBefore(textarea), textarea);\r\n\r\n            var ctlDown = false;\r\n\r\n            textarea.addEventListener('keyup', function (ev) {\r\n                if (ev.keyCode === 17 || ev.keyCode === 224) {\r\n                    ctlDown = false;\r\n                }\r\n                return;\r\n            });\r\n\r\n            textarea.addEventListener('keydown', function (ev) {\r\n                if (ev.keyCode === 17 || ev.keyCode === 224) {\r\n                    ctlDown = true;\r\n                }\r\n                if ((ev.ctrlKey) && (ev.metaKey)) {\r\n                    ctlDown = ev.ctrlKey || ev.metaKey;\r\n                }\r\n                if (ctlDown && ev.keyCode === 86) {\r\n                    paste._textarea_focus_stolen = true;\r\n                    paste._container.focus();\r\n                    paste._paste_event_fired = false;\r\n                    setTimeout((function (_this) {\r\n                        return function () {\r\n                            if (!paste._paste_event_fired) {\r\n                                textarea.focus();\r\n                                paste._textarea_focus_stolen = false;\r\n                                return;\r\n                            }\r\n                        };\r\n                    })(this), 1);\r\n                }\r\n                return;\r\n            });\r\n\r\n            textarea.addEventListener('paste', (function (_this) {\r\n                return function () { };\r\n            })(this));\r\n\r\n            textarea.addEventListener('focus', (function (_this) {\r\n                return function () {\r\n                    if (!paste._textarea_focus_stolen) {\r\n                        textarea.classList.add('pastable-focus');\r\n                        return;\r\n                    }\r\n                };\r\n            })(this));\r\n\r\n            textarea.addEventListener('blur', (function (_this) {\r\n                return function () {\r\n                    if (!paste._textarea_focus_stolen) {\r\n                        textarea.classList.remove('pastable-focus');\r\n                        return;\r\n                    }\r\n                };\r\n            })(this));\r\n\r\n            return paste;\r\n        };\r\n\r\n        Paste.mountContenteditable = function (contenteditable) {\r\n            var paste = new Paste(contenteditable, contenteditable);\r\n\r\n            contenteditable.addEventListener('focus', (function (_this) {\r\n                return function () {\r\n                    contenteditable.classList.add('pastable-focus');\r\n                    return;\r\n                };\r\n            })(this));\r\n\r\n            contenteditable.addEventListener('blur', (function (_this) {\r\n                return function () {\r\n                    contenteditable.classList.remove('pastable-focus');\r\n                    return;\r\n                };\r\n            })(this));\r\n\r\n            return paste;\r\n        };\r\n\r\n        function Paste(_container, _target) {\r\n            this._container = _container;\r\n            this._target = _target;\r\n\r\n            this._target.classList.add('pastable');\r\n\r\n            this._container.addEventListener('paste', (function (_this) {\r\n                return function (ev) {\r\n\r\n                    var _i, clipboardData, file, item, k, l, len1, len2, pastedFilename, ref2, ref4;\r\n                    _this.originalEvent = ev;\r\n                    _this._paste_event_fired = true;\r\n                    if (ev.clipboardData) {\r\n                        clipboardData = ev.clipboardData;\r\n                        if (clipboardData.items) {\r\n                            pastedFilename = null;\r\n                            _this.originalEvent.pastedTypes = [];\r\n                            ref2 = clipboardData.items;\r\n                            for (_i = k = 0, len1 = ref2.length; k < len1; _i = ++k) {\r\n                                item = ref2[_i];\r\n                                if (item.type.match(/^image\\//)) {\r\n                                    ev.preventDefault();\r\n                                    ev.stopPropagation();\r\n                                    // todo: generate hash sha256 for file name and avoid duplicate files\r\n                                    var imageFileName = 'image'; \r\n                                    if (!/MSIE/.test(navigator.userAgent) && !/rv:11/.test(navigator.userAgent)) {\r\n                                        imageFileName = window.prompt('Enter clipboard image file name: ', imageFileName); // todo: i18n\r\n                                        if (imageFileName === null) { // user click Cancel\r\n                                             ev.preventDefault();\r\n                                             ev.stopImmediatePropagation();\r\n                                             return; //break out of the function early because user click on Cancel\r\n                                        } else { // user click OK\r\n                                            if (imageFileName.trim().length === 0) imageFileName = 'image';\r\n                                        }\r\n                                    }\r\n                                    if (imageFileName.endsWith('.png') === false) imageFileName = imageFileName + '.png';\r\n                                    try {\r\n                                        var clipboardImageAsFile = item.getAsFile();\r\n                                        triggerCustomEvent(\r\n                                            _this._target, 'handleImage', {\r\n                                                file: clipboardImageAsFile,\r\n                                                originalEvent: _this.originalEvent,\r\n                                                imageFileName: imageFileName\r\n                                            });\r\n                                    } catch (error) {\r\n                                        console.log('clipboard paste image error', error);\r\n                                        ev.stopImmediatePropagation();\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    // IE code not working\r\n                    //if (window.clipboardData) {\r\n                    //    ref4 = window.clipboardData.files;\r\n                    //    for (l = 0, len2 = ref4.length; l < len2; l++) {\r\n                    //        // ev.stopImmediatePropagation();\r\n                    //        ev.stopPropagation();\r\n                    //        file = ref4[l];\r\n                    //        triggerCustomEvent(\r\n                    //            _this._target, 'handleImage', {\r\n                    //                file: file,\r\n                    //                originalEvent: _this.originalEvent\r\n                    //            });\r\n                    //        ev.preventDefault();\r\n                    //    }\r\n                    //}\r\n                    return;\r\n                };\r\n            })(this));\r\n\r\n            function triggerCustomEvent(el, eventName, data) {\r\n                var event;\r\n                if (!/MSIE/.test(navigator.userAgent) && !/rv:11/.test(navigator.userAgent)) {\r\n                    event = new CustomEvent(eventName, { detail: data });\r\n                } else { // fix for IE\r\n                    event = document.createEvent('CustomEvent');\r\n                    event.initCustomEvent(eventName, true, true, data);\r\n                }\r\n\r\n                el.dispatchEvent(event);\r\n            }\r\n\r\n        }\r\n\r\n        return Paste;\r\n\r\n    })();\r\n\r\n    Element.prototype.paste = function (pasteContainer) {\r\n        var pm = Paste.mountNonInputable(pasteContainer);\r\n        return pm._container;\r\n    };\r\n\r\n    Element.prototype.pastableNonInputable = function () {\r\n        var el = this;\r\n        if (el._pastable || matches(el, 'textarea, input, [contenteditable]')) {\r\n            return;\r\n        }\r\n        Paste.mountNonInputable(el);\r\n        el._pastable = true;\r\n        return;\r\n    };\r\n\r\n    Element.prototype.pastableTextarea = function () {\r\n        var el = this;\r\n        if (el._pastable || matches(el, 'textarea, input') === false) {\r\n            return;\r\n        }\r\n        Paste.mountTextarea(el);\r\n        el._pastable = true;\r\n        return;\r\n    };\r\n\r\n    Element.prototype.pastableContenteditable = function () {\r\n        var el = this;\r\n        if (el._pastable || matches(el, '[contenteditable]') === false) {\r\n            return;\r\n        }\r\n        Paste.mountContenteditable(el);\r\n        el._pastable = true;\r\n        return;\r\n    };\r\n\r\n}).call(this);\r\n\n// This is the service which sanitize path, file or folder name\r\nangular.module('Adam')\r\n  .factory('sanitizeSvc', function () {\r\n\r\n    removeFromStart = function (sanitized, charToRemove) {\r\n      // check for undefined \r\n      if (!sanitized) return sanitized;\r\n\r\n      while (sanitized.substring(0, 1) === charToRemove) {\r\n        sanitized = sanitized.substring(1);\r\n      }\r\n      return sanitized;\r\n    };\r\n\r\n    removeFromEnd = function (sanitized, charToRemove) {\r\n      // check for undefined \r\n      if (!sanitized) return sanitized;\r\n      while (sanitized.substring(sanitized.length - 1, sanitized.length) === charToRemove) {\r\n        sanitized = sanitized.substring(0, sanitized.length - 1);\r\n      }\r\n      return sanitized;\r\n    };\r\n\r\n    cleanBadPath = function (sanitized) {\r\n      // check for undefined \r\n      if (!sanitized) return sanitized;\r\n\r\n      var goodChar = \"_\";\r\n      var illegalRe = /[\\?<>\\\\:\\*\\|\":]/g;\r\n      var controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\r\n      var reservedRe = /^\\.+$/;\r\n      var windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\r\n      var windowsTrailingRe = /[\\. ]+$/;\r\n      return sanitized\r\n        .replace(illegalRe, goodChar)\r\n        .replace(controlRe, goodChar)\r\n        .replace(reservedRe, goodChar)\r\n        .replace(windowsReservedRe, goodChar)\r\n        .replace(windowsTrailingRe, goodChar);\r\n    };\r\n\r\n    var svc = {};\r\n\r\n    // sanitize path\r\n    svc.sanitizePath = function (sanitized) {\r\n      // check for undefined \r\n      if (!sanitized) return sanitized;\r\n\r\n      // remove slashes form start of path\r\n      sanitized = removeFromStart(sanitized, '\\/');\r\n\r\n      // remove slashed form end of path\r\n      sanitized = removeFromEnd(sanitized, '\\/');\r\n\r\n      // remove backslashes form start of path\r\n      sanitized = removeFromStart(sanitized, '\\\\');\r\n\r\n      // remove backslashes form end of path\r\n      sanitized = removeFromEnd(sanitized, '\\\\');\r\n\r\n      // replace bad\r\n      sanitized = cleanBadPath(sanitized);\r\n\r\n      return sanitized;\r\n    };\r\n\r\n    // sanitize file or folder name\r\n    svc.sanitizeName = function (sanitized) {\r\n      // check for undefined \r\n      if (!sanitized) return sanitized;\r\n      \r\n      // in addition to all path validation rules\r\n      // slashes are not valid in file or folder name\r\n      var replacement = \"_\";\r\n      var illegalRe = /\\//g;\r\n      return svc.sanitizePath(sanitized)\r\n        .replace(illegalRe, replacement);\r\n    };\r\n\r\n    return svc;\r\n  });\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\t/* This app registers all field templates for 2sxc in the angularjs sxcFieldTemplates app */\r\n\r\n    angular.module(\"sxcFieldTemplates\", [\r\n        \"formly\",\r\n        \"formlyBootstrap\",\r\n        \"ui.bootstrap\",\r\n        \"ui.tree\",\r\n        \"2sxc4ng\",\r\n        \"SxcEditTemplates\",     // temp - was because of bad template-converter, remove once I update grunt\r\n        \"EavConfiguration\",\r\n        \"SxcServices\",\r\n        \"eavFieldTemplates\",\r\n        \"Adam\",\r\n        //\"ui.tinymce\",   // connector to tiny-mce for angular\r\n        \"oc.lazyLoad\"   // needed to lazy-load the MCE editor from the cloud\r\n    ]);\r\n\r\n})();\n/* \r\n * Field: String - Default\r\n */\r\n\r\nangular.module('eavFieldTemplates')\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: 'custom-json-editor',\r\n            template: '<div>Warning: this is still work-in-progres, there is no json validation, use at own risk.' +\r\n            '<textarea rows=\"{{vm.settings.Rows}}\" class=\"form-control material\" ng-model=\"value.Value\" style=\"white-space: pre\"></textarea>'\r\n            + '</div>',\r\n            wrapper: defaultFieldWrappers, \r\n          controller: 'FieldTemplate-CustomJson as vm'\r\n        });\r\n\r\n  }]).controller('FieldTemplate-CustomJson', [\"$scope\", function ($scope) {\r\n\r\n    var vm = this;\r\n    var settings = vm.settings = $scope.options.templateOptions.settings.merged;\r\n    settings.Rows = settings.Rows || 10;\r\n\r\n    // todo: later extend with json validation\r\n    //var validationRegexString = '.*';\r\n\r\n\r\n    //// Do not use settings.merged here because there is an old (hidden field) that causes\r\n    //// merged.ValidationRegExJavaScript to be always empty\r\n    //if (settings.All && settings.All.ValidationRegExJavaScript)\r\n    //    validationRegexString = settings.All.ValidationRegExJavaScript;\r\n\r\n    //vm.regexPattern = new RegExp(validationRegexString, 'i');\r\n\r\n    //console.log($scope.options.templateOptions);\r\n  }]);\n// This is the service which allows opening dnn-bridge dialogs and processes the results\r\n\r\nangular.module('sxcFieldTemplates')\r\n    /*@ngInject*/\r\n    .factory('dnnBridgeSvc', [\"$uibModal\", \"$http\", \"appId\", \"promiseToastr\", function ($uibModal, $http, appId, promiseToastr) {\r\n        var svc = {};\r\n        svc.open = function open(oldValue, params, callback) {\r\n            var type = 'pagepicker';\r\n\r\n            var connector = {\r\n                params: params,\r\n                valueChanged: callback,\r\n                dialogType: type\r\n            };\r\n\r\n            connector.valueChanged = function valueChanged(value) {\r\n                connector.modalInstance.close();\r\n                callback(value);\r\n            };\r\n\r\n            connector.params.CurrentValue = oldValue;\r\n\r\n            console.log('before open page picker');\r\n            console.log($uibModal);\r\n            connector.modalInstance = $uibModal.open({\r\n                templateUrl: 'fields/dnn-bridge/hyperlink-default-pagepicker.html',\r\n                resolve: {\r\n                    bridge: function () {\r\n                        return connector;\r\n                    }\r\n                },\r\n                /*@ngInject*/\r\n                controller: [\"$scope\", \"bridge\", function ($scope, bridge) {\r\n                    $scope.bridge = bridge;\r\n                }],\r\n                windowClass: 'sxc-dialog-filemanager'\r\n            });\r\n            console.log('after open page picker');\r\n\r\n            return connector.modalInstance;\r\n        };\r\n\r\n\r\n        // handle short-ID links like file:17\r\n        svc.getUrlOfId = function(idCode, contentType, guid, field) {\r\n            var linkLowered = idCode.toLowerCase();\r\n            if (linkLowered.indexOf('file:') !== -1 || linkLowered.indexOf('page:') !== -1)\r\n                return $http.get('dnn/Hyperlink/ResolveHyperlink?hyperlink='\r\n                    + encodeURIComponent(idCode)\r\n                    + (guid ? '&guid=' + guid : '')\r\n                    + (contentType ? '&contentType=' + contentType : '')\r\n                    + (field ? '&field=' + field : '')\r\n                    + '&appId=' + appId);\r\n            return null;\r\n        };\r\n\r\n        return svc;\r\n\r\n    }]);\n\r\n// this is in charge of the iframe which shows the dnn-bridge components\r\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\tangular.module(\"sxcFieldTemplates\")\r\n\r\n\r\n    /*@ngInject*/\r\n\t.directive(\"webFormsBridge\", [\"sxc\", \"portalRoot\", function (sxc, portalRoot) {\r\n\t    var webFormsBridgeUrl = portalRoot + \"Default.aspx?tabid=\" + $2sxc.urlParams.require(\"tid\") + \"&ctl=webformsbridge&mid=\" + sxc.id + \"&dnnprintmode=true&SkinSrc=%5bG%5dSkins%2f_default%2fNo+Skin&ContainerSrc=%5bG%5dContainers%2f_default%2fNo+Container\"; //\"&popUp=true\";\r\n\r\n\t\treturn {\r\n\t\t\trestrict: \"A\",\r\n\t\t\tscope: {\r\n\t\t\t\ttype: \"@bridgeType\",\r\n\t\t\t\tbridge: \"=webFormsBridge\",\r\n\t\t\t\tbridgeSyncHeight: \"@bridgeSyncHeight\"\r\n\t\t\t},\r\n\t\t\tlink: function (scope, elem, attrs) {\r\n\r\n\t\t\t    var params = \"\";\r\n\t\t\t    if (scope.bridge.params) {\r\n\t\t\t        params = Object.keys(scope.bridge.params).map(function (prop) {\r\n\t\t\t            if (scope.bridge.params[prop] === null || scope.bridge.params[prop] === '')\r\n\t\t\t                return;\r\n\t\t\t            return [prop, scope.bridge.params[prop]].map(encodeURIComponent).join(\"=\");\r\n\t\t\t        }).join(\"&\");\r\n\t\t\t    }\r\n\r\n\t\t\t    elem[0].src = webFormsBridgeUrl + \"&type=\" + scope.type + (scope.bridge.params ? \"&\" + params : \"\");\r\n\t\t\t\telem.on(\"load\", function () {\t\t\t\t\t\r\n\t\t\t\t    var w = elem[0].contentWindow || elem[0];\r\n                    // test if the connectBridge works, if not, it's usually a telerik-not-installed issue\r\n\t\t\t\t    if (!w.connectBridge)\r\n\t\t\t\t        return alert(\"can't connect to the dialog - you are probably running a new DNN (v.8+) and didn't activate the old Telerik components. Please install these in the host > extensions to get this to work\");\r\n\t\t\t\t    \r\n\t\t\t\t\tw.connectBridge(scope.bridge);\r\n\r\n\t\t\t\t\t// Sync height\r\n\t\t\t\t\tif (scope.bridgeSyncHeight === \"true\") {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar resize = function () {\r\n\t\t\t\t\t\t\telem.css(\"height\", \"\");\r\n\t\t\t\t\t\t\telem.css(\"height\", w.document.body.scrollHeight + \"px\");\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t//w.$(w).resize(resize); // Performance issues when uncommenting this line...\r\n\t\t\t\t\t\tresize();\r\n\t\t\t\t\t\tw.$(w.document).ready(function() {\r\n\t\t\t\t\t\t\tresize();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tw.$(w.document).on('triggerbridgeresize', function () {\r\n\t\t\t\t\t\t    window.setTimeout(resize, 0);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t}]);\r\n\r\n})();\n(function() {\r\n    \"use strict\";\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n            var wrappers = defaultFieldWrappers.slice(0); // copy the array\r\n            wrappers.splice(defaultFieldWrappers.indexOf(\"eavLocalization\"), 1); // remove the localization...\r\n\r\n            formlyConfigProvider.setType({\r\n                name: \"entity-content-blocks\",\r\n                templateUrl: \"fields/entity/entity-default.html\",\r\n                wrapper: wrappers, // [\"eavLabel\", \"bootstrapHasError\", \"collapsible\"],\r\n                controller: \"FieldTemplate-EntityContentBlockCtrl\"\r\n            });\r\n        }])\r\n        /*@ngInject*/\r\n        .controller(\"FieldTemplate-EntityContentBlockCtrl\", [\"$controller\", \"$scope\", \"$http\", \"$filter\", \"$translate\", \"$uibModal\", \"appId\", \"eavAdminDialogs\", \"eavDefaultValueService\", function($controller, $scope, $http, $filter, $translate, $uibModal, appId, eavAdminDialogs, eavDefaultValueService) {\r\n            $scope.to.settings.merged.EnableRemove = true;\r\n            $scope.to.settings.merged.AllowMultiValue = true; // for correct UI showing \"remove\"\r\n            $scope.to.settings.merged.EnableAddExisting = false; // disable manual select existing\r\n            $scope.to.settings.merged.EnableCreate = false;         // disable manual create\r\n            $scope.to.settings.merged.EnableEdit = false;\r\n            $scope.to.settings.merged.EntityType = \"ContentGroupReference\";\r\n            $scope.to.enableCollapseField = true;   // ui option to allow collapsing\r\n            $scope.to.collapseField = true;   // ui option to allow collapsing\r\n\r\n\r\n            // use \"inherited\" controller just like described in http://stackoverflow.com/questions/18461263/can-an-angularjs-controller-inherit-from-another-controller-in-the-same-module\r\n            $controller(\"FieldTemplate-EntityCtrl\", { $scope: $scope });\r\n\r\n            // do something with the values...\r\n            var vals = $scope.model[$scope.options.key].Values[0].Value;\r\n\r\n            //addCSSRule(\"div\", \"background-color: pink\");\r\n        }]);\r\n\r\n    function addCSSRule(selector, rules, index) {\r\n        var sheet = document.styleSheets[0];\r\n        if (\"insertRule\" in sheet) {\r\n            sheet.insertRule(selector + \"{\" + rules + \"}\", index);\r\n        }\r\n        else if (\"addRule\" in sheet) {\r\n            sheet.addRule(selector, rules, index);\r\n        }\r\n    }\r\n\r\n})();\n\r\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('sxcFieldTemplates')\r\n        .config([\"formlyConfigProvider\", \"fieldWrappersWithPreview\", function (formlyConfigProvider, fieldWrappersWithPreview) {\r\n\r\n            formlyConfigProvider.setType({\r\n                name: 'hyperlink-default',\r\n                templateUrl: 'fields/hyperlink/hyperlink-default.html',\r\n                wrapper: fieldWrappersWithPreview,\r\n                controller: 'FieldTemplate-HyperlinkCtrl as vm'\r\n            });\r\n        }])\r\n        /*@ngInject*/\r\n        .controller('FieldTemplate-HyperlinkCtrl', [\"$uibModal\", \"$scope\", \"$http\", \"appId\", \"sxc\", \"adamSvc\", \"debugState\", \"dnnBridgeSvc\", \"fileType\", function ($uibModal, $scope, $http, appId, sxc, adamSvc, debugState, dnnBridgeSvc, fileType) {\r\n\r\n            var vm = this;\r\n            vm.debug = debugState;\r\n            vm.testLink = '';\r\n\r\n            vm.isImage = function () { return fileType.isImage(vm.testLink); };\r\n            vm.thumbnailUrl = function thumbnailUrl(size, quote) {\r\n                var result = vm.testLink;\r\n                if (size === 1)\r\n                    result = result + '?w=64&h=64&mode=crop';\r\n                if (size === 2)\r\n                    result = result + '?w=500&h=400&mode=max';\r\n                var qt = quote ? '\"' : '';\r\n                return qt + result + qt;\r\n            };\r\n\r\n            vm.icon = function () { return fileType.getIconClass(vm.testLink); };\r\n            vm.tooltipUrl = function (str) { return str.replace(/\\//g, '/&#8203;'); };\r\n            vm.adamModeConfig = {\r\n                usePortalRoot: false\r\n            };\r\n\r\n            function ensureDefaultConfig() {\r\n                var merged = $scope.to.settings.merged;\r\n                if (merged.ShowAdam === undefined || merged.ShowAdam === null) merged.ShowAdam = true;\r\n                if (merged.Buttons === undefined || merged.Buttons === null) merged.Buttons = 'adam,more';\r\n            }\r\n\r\n            // test to get correct infos\r\n            console.log('debug from hyperlink', $scope);\r\n\r\n            ensureDefaultConfig();\r\n\r\n            // Update test-link if necessary - both when typing or if link was set by dialogs\r\n            $scope.$watch('value.Value', function(newValue, oldValue) {\r\n                if (!newValue)\r\n                    return;\r\n\r\n                // handle short-ID links like file:17\r\n                var promise = dnnBridgeSvc.getUrlOfId(newValue,\r\n                    $scope.to.header.ContentTypeName, $scope.to.header.Guid, $scope.options.key);\r\n\r\n                if(promise)\r\n                    promise.then(function (result) {\r\n                        if (result.data)\r\n                            vm.testLink = result.data;\r\n                    });\r\n                else \r\n                    vm.testLink = newValue;\r\n            });\r\n\r\n            //#region dnn-page picker dialog\r\n\r\n            // the callback when something was selected\r\n            vm.processResultOfPagePicker = function (value) {\r\n                $scope.$apply(function() {\r\n                    // Convert to page:xyz format (if it wasn't cancelled)\r\n                    if (value)\r\n                        $scope.value.Value = 'page:' + value.id;\r\n                });\r\n            };\r\n\r\n            // open the dialog\r\n            vm.openPageDialog = function () {\r\n                dnnBridgeSvc.open(\r\n                    $scope.value.Value,\r\n                    {\r\n                        Paths: $scope.to.settings.merged ? $scope.to.settings.merged.Paths : '',\r\n                        FileFilter: $scope.to.settings.merged ? $scope.to.settings.merged.FileFilter : ''\r\n                    },\r\n                    vm.processResultOfPagePicker);\r\n            };\r\n            //#endregion dnn page picker\r\n\r\n          //#region new adam: callbacks only\r\n          vm.registerAdam = function(adam) {\r\n              vm.adam = adam;\r\n          };\r\n\r\n          vm.setValue = function (fileItem) {\r\n            // depending on settings, use the id or not\r\n            if ($scope.to.settings.merged.ServerResourceMapping &&\r\n              $scope.to.settings.merged.ServerResourceMapping === 'url')\r\n              $scope.value.Value = fileItem.fullPath // this is the one coming from the adam-browser\r\n                || fileItem.Path; // or the server request\r\n            else\r\n              $scope.value.Value = 'file:' + fileItem.Id;\r\n          };\r\n\r\n            $scope.afterUpload = vm.setValue;   // binding for dropzone\r\n\r\n            vm.toggleAdam = function toggle(usePortalRoot, imagesOnly) {\r\n                \r\n                vm.adam.toggle({\r\n                    showImagesOnly: imagesOnly,\r\n                    usePortalRoot: usePortalRoot\r\n                });\r\n            };\r\n\r\n            //#endregion\r\n\r\n\r\n        }]);\r\n\r\n\r\n})();\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", \"defaultFieldWrappersNoFloat\", function (formlyConfigProvider, defaultFieldWrappersNoFloat) {\r\n\r\n            formlyConfigProvider.setType({\r\n                name: \"hyperlink-library\",\r\n                templateUrl: \"fields/hyperlink/hyperlink-library.html\",\r\n                // todo: check if we could use the defaultFieldWrappers instead\r\n                wrapper: defaultFieldWrappersNoFloat,// [\"eavLabel\", \"bootstrapHasError\", \"eavLocalization\", \"collapsible\"],\r\n                controller: \"FieldTemplate-Library as vm\"\r\n            });\r\n\r\n        }])\r\n        /*@ngInject*/\r\n        .controller(\"FieldTemplate-Library\", [\"$uibModal\", \"$scope\", \"$http\", \"sxc\", \"adamSvc\", \"debugState\", function ($uibModal, $scope, $http, sxc, adamSvc, debugState) {\r\n\r\n            var vm = this;\r\n            vm.debug = debugState;\r\n            vm.modalInstance = null;\r\n            vm.testLink = \"\";\r\n\r\n            vm.adamModeConfig = {\r\n                usePortalRoot: false,\r\n                isLibrary: true\r\n            };\r\n\r\n            //#region new adam: callbacks only\r\n            vm.registerAdam = function(adam) {\r\n                vm.adam = adam;\r\n            };\r\n            //vm.setValue = function(url) {\r\n            //    $scope.value.Value = url;\r\n            //};\r\n            $scope.afterUpload = function(fileItem) {};\r\n\r\n            vm.toggleAdam = function toggle() {\r\n                vm.adam.toggle();\r\n            };\r\n\r\n            //#endregion\r\n\r\n\r\n        }]);\r\n\r\n\r\n})();\n/*!\r\nMath.uuid.js (v1.4)\r\nhttp://www.broofa.com\r\nmailto:robert@broofa.com\r\n\r\nCopyright (c) 2010 Robert Kieffer\r\nDual licensed under the MIT and GPL licenses.\r\n*/\r\n\r\n/*\r\n * Generate a random uuid.\r\n *\r\n * USAGE: Math.uuid(length, radix)\r\n *   length - the desired number of characters\r\n *   radix  - the number of allowable values for each character.\r\n *\r\n * EXAMPLES:\r\n *   // No arguments  - returns RFC4122, version 4 ID\r\n *   >>> Math.uuid()\r\n *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\r\n *\r\n *   // One argument - returns ID of the specified length\r\n *   >>> Math.uuid(15)     // 15 character ID (default base=62)\r\n *   \"VcydxgltxrVZSTV\"\r\n *\r\n *   // Two arguments - returns ID of the specified length, and radix. (Radix must be <= 62)\r\n *   >>> Math.uuid(8, 2)  // 8 character ID (base=2)\r\n *   \"01001010\"\r\n *   >>> Math.uuid(8, 10) // 8 character ID (base=10)\r\n *   \"47473046\"\r\n *   >>> Math.uuid(8, 16) // 8 character ID (base=16)\r\n *   \"098F4D35\"\r\n */\r\n(function () {\r\n    // Private array of chars to use\r\n    var CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\r\n\r\n    Math.uuid = function (len, radix) {\r\n        var chars = CHARS, uuid = [], i;\r\n        radix = radix || chars.length;\r\n\r\n        if (len) {\r\n            // Compact form\r\n            for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix];\r\n        } else {\r\n            // rfc4122, version 4 form\r\n            var r;\r\n\r\n            // rfc4122 requires these characters\r\n            uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\r\n            uuid[14] = '4';\r\n\r\n            // Fill in random data.  At i==19 set the high bits of clock sequence as\r\n            // per rfc4122, sec. 4.1.5\r\n            for (i = 0; i < 36; i++) {\r\n                if (!uuid[i]) {\r\n                    r = 0 | Math.random() * 16;\r\n                    uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n                }\r\n            }\r\n        }\r\n\r\n        return uuid.join('');\r\n    };\r\n\r\n    // A more performant, but slightly bulkier, RFC4122v4 solution.  We boost performance\r\n    // by minimizing calls to random()\r\n    Math.uuidFast = function () {\r\n        var chars = CHARS, uuid = new Array(36), rnd = 0, r;\r\n        for (var i = 0; i < 36; i++) {\r\n            if (i == 8 || i == 13 || i == 18 || i == 23) {\r\n                uuid[i] = '-';\r\n            } else if (i == 14) {\r\n                uuid[i] = '4';\r\n            } else {\r\n                if (rnd <= 0x02) rnd = 0x2000000 + (Math.random() * 0x1000000) | 0;\r\n                r = rnd & 0xf;\r\n                rnd = rnd >> 4;\r\n                uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n            }\r\n        }\r\n        return uuid.join('');\r\n    };\r\n\r\n    // A more compact, but less performant, RFC4122v4 solution:\r\n    Math.uuidCompact = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n})();\n/* \r\n * Field: String - font-icon picker\r\n */\r\n\r\nangular.module(\"sxcFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"fieldWrappersWithPreview\", function (formlyConfigProvider, fieldWrappersWithPreview) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"string-font-icon-picker\",\r\n            templateUrl: \"fields/string/string-font-icon-picker.html\",\r\n            wrapper: fieldWrappersWithPreview,\r\n            controller: \"FieldTemplate-String-Font-Icon-Picker as vm\"\r\n        });\r\n\r\n    }])\r\n    /*@ngInject*/\r\n    .controller(\"FieldTemplate-String-Font-Icon-Picker\", [\"$scope\", \"debugState\", \"$ocLazyLoad\", \"appRoot\", function ($scope, debugState, $ocLazyLoad, appRoot) {\r\n        var vm = angular.extend(this, {\r\n            iconFilter: \"\", // used for in-line search\r\n            prefix: \"\", // used to find the right css-classes\r\n            previewPrefix: \"\", // used to preview the icon, in addition to the built-in class\r\n            icons: [], // list of icons, to be filled\r\n            useTestValues: false, // to prefill with test-values, in case needed\r\n            selectorIsOpen: false\r\n    });\r\n\r\n\r\n        //#region icon css-class-methods\r\n        function getIconClasses(className) {\r\n            var charcount = className.length, foundList = [], duplicateDetector = {};\r\n            if (!className) return foundList;\r\n            for (var ssSet = 0; ssSet < document.styleSheets.length; ssSet++) {\r\n                var classes = document.styleSheets[ssSet].rules || document.styleSheets[ssSet].cssRules;\r\n                if(classes)\r\n                    for (var x = 0; x < classes.length; x++)\r\n                        if (classes[x].selectorText && classes[x].selectorText.substring(0, charcount) === className) {\r\n                            // prevent duplicate-add...\r\n                            var txt = classes[x].selectorText,\r\n                                icnClass = txt.substring(0, txt.indexOf(\":\")).replace(\".\", \"\");\r\n                            if (!duplicateDetector[icnClass]) {\r\n                                foundList.push({ rule: classes[x], 'class': icnClass });\r\n                                duplicateDetector[icnClass] = true;\r\n                            }\r\n                        }\r\n            }\r\n            return foundList;\r\n        }\r\n\r\n//#endregion\r\n\r\n        //#region load additional resources\r\n        function loadAdditionalResources(files) {\r\n            files = files || \"\";\r\n            var mapped = files.replace(\"[App:Path]\", appRoot)\r\n                .replace(/([\\w])\\/\\/([\\w])/g,   // match any double // but not if part of https or just \"//\" at the beginning\r\n                \"$1/$2\");\r\n            var fileList = mapped ? mapped.split(\"\\n\") : [];\r\n            return $ocLazyLoad.load(fileList);\r\n        }\r\n        //#endregion\r\n\r\n        vm.setIcon = function(newValue) {\r\n            $scope.value.Value = newValue;\r\n            vm.selectorIsOpen = false;\r\n            //$scope.status.isopen = false;\r\n            $scope.form.$setDirty();\r\n        };\r\n\r\n        vm.activate = function() {\r\n            // get configured\r\n            var controlSettings = $scope.to.settings[\"string-font-icon-picker\"];\r\n            vm.files = (controlSettings) ? controlSettings.Files || \"\" : \"\";\r\n            vm.prefix = (controlSettings) ? controlSettings.CssPrefix || \"\" : \"\";\r\n            vm.previewPrefix = (controlSettings) ? controlSettings.PreviewCss || \"\" : \"\";\r\n\r\n            if (vm.useTestValues)\r\n                angular.extend(vm, {\r\n                    iconFilter: \"\",\r\n                    prefix: \".glyphicon-\",\r\n                    previewPrefix: \"glyphicon\",\r\n                });\r\n\r\n            // load all additional css, THEN load the icons\r\n            loadAdditionalResources(vm.files).then(function() {\r\n                // load the icons\r\n                vm.icons = getIconClasses(vm.prefix);\r\n\r\n            });\r\n\r\n            vm.debug = debugState;\r\n            if (debugState.on) console.log($scope.options.templateOptions);\r\n        };\r\n\r\n        vm.activate();\r\n    }]);\n// This isn't fully nice, but it's the code used by the template picker elements\r\n// it's outsourced here, to ensure that code revisions are clear and api consistent\r\n// because the previous version had the code inside the field-config\r\n// and was highly dependent on the angular/formly API, which changes a bit from time to time\r\n// this makes it easier to keep it in sync\r\n\r\n// I'll have to think of a better way to provide/inject this in the future...\r\n\r\n// must find out if we're in App or Content before we do more...\r\n\r\n(function () {\r\n    var cs = {\r\n        init: function(context) {\r\n            cs.context = context;\r\n\r\n            // get angular injector to get a service\r\n            var inj = context.$injector;\r\n\r\n            var appDialogConfigSvc = inj.get(\"appDialogConfigSvc\");\r\n\r\n            appDialogConfigSvc.getDialogSettings().then(function(result) {\r\n                var config = result.data;\r\n                // if this is a content-app, disable two fields\r\n                if (config.IsContent) {\r\n                    //disable current field\r\n                    context.formVm.formFields[context.field.SortOrder].templateOptions.disabled = true;\r\n                    // do the same for the data-field (field 20)\r\n                    context.formVm.formFields[20].templateOptions.disabled = true;\r\n                }\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    window[\"2sxc-template-picker-custom-script-for-name-field\"] = cs;\r\n})();\n/* \r\n * Field: String - Dropdown\r\n */\r\n\r\nangular.module(\"sxcFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function(formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"string-template-picker\",\r\n            templateUrl: \"fields/string/string-template-picker.html\",\r\n            wrapper: defaultFieldWrappers,\r\n            controller: \"FieldTemplate-String-TemplatePicker\"\r\n        });\r\n\r\n    }])\r\n    /*@ngInject*/\r\n    .controller(\"FieldTemplate-String-TemplatePicker\", [\"$scope\", \"appAssetsSvc\", \"appId\", \"fieldMask\", function ($scope, appAssetsSvc, appId, fieldMask) {\r\n\r\n        function activate() {\r\n            // ensure settings are merged\r\n            if (!$scope.to.settings.merged)\r\n                $scope.to.settings.merged = {};\r\n\r\n            $scope.setFileConfig(\"Token\"); // use token setting as default, till the UI tells us otherwise\r\n\r\n            // clean up existing paths, because some used \"/\" and some \"\\\" for paths, so it wouldn't match in the drop-down\r\n            if ($scope.options && $scope.options.value())\r\n                angular.forEach($scope.options.value().Values, function(v, i) {\r\n                    v.Value = v.Value.replace(\"\\\\\", \"/\");\r\n                });\r\n            \r\n\r\n            // set change-watchers to the other values\r\n            $scope.typeWatcher = fieldMask(\"[Type]\", $scope, $scope.setFileConfig);\r\n            $scope.locWatcher = fieldMask(\"[Location]\", $scope, $scope.onLocationChange);\r\n\r\n            // create initial list for binding\r\n            $scope.templates = [];\r\n\r\n            $scope.svcApp = appAssetsSvc(appId, false);\r\n            $scope.svcGlobal = appAssetsSvc(appId, true);\r\n\r\n            $scope.onLocationChange(); // set initial file list\r\n            //$scope.templates = $scope.svcApp.liveList();\r\n        }\r\n\r\n        $scope.readyToUse = function() {\r\n            return $scope.typeWatcher.value && $scope.locWatcher.value; // check if these have real values inside\r\n        };\r\n\r\n        $scope.setFileConfig = function (type) {\r\n            var specs = {\r\n                \"Token\": { ext: \".html\", prefix: \"\", suggestion: \"yourfile.html\", body: \"<p>You successfully created your own template. Start editing it by hovering the \\\"Manage\\\" button and opening the \\\"Edit Template\\\" dialog.</p>\" },\r\n                \"C# Razor\": { ext: \".cshtml\", prefix: \"_\", suggestion: \"_yourfile.cshtml\", body: \"<p>You successfully created your own template. Start editing it by hovering the \\\"Manage\\\" button and opening the \\\"Edit Template\\\" dialog.</p>\" }\r\n            };\r\n            $scope.file = specs[type];\r\n\r\n        };\r\n\r\n        // when the watcher says the location changed, reset stuff\r\n        $scope.onLocationChange = function(loc) {\r\n            $scope.svcCurrent = (loc === \"Host File System\") \r\n                ? $scope.svcGlobal\r\n                : $scope.svcApp;\r\n\r\n            $scope.templates = $scope.svcCurrent.liveList();\r\n        };\r\n\r\n        // ask for a new file name and \r\n        $scope.add = function() {\r\n            var fileName = prompt(\"enter new file name\", $scope.file.suggestion); // todo: i18n\r\n\r\n            if (!fileName)\r\n                return;\r\n\r\n            // 1. check for folders\r\n            var path = \"\";\r\n            fileName = fileName.replace(\"\\\\\", \"/\");\r\n            var foundSlash = fileName.lastIndexOf(\"/\");\r\n            if (foundSlash > -1) {\r\n                path = fileName.substring(0, foundSlash + 1); // path with slash\r\n                fileName = fileName.substring(foundSlash + 1);\r\n            }\r\n\r\n            // 2. check if extension already provided, otherwise or if not perfect, just attach default\r\n            if (!fileName.endsWith($scope.file.ext))// fileName.indexOf($scope.fileExt) !== fileName.length - $scope.fileExt.length)\r\n                fileName += $scope.file.ext;\r\n\r\n            // 3. check if cshtmls have a \"_\" in the file name (not folder, must be the file name part)\r\n            if ($scope.file.prefix !== \"\" && fileName[0] !== $scope.file.prefix)\r\n                fileName = $scope.file.prefix + fileName;\r\n\r\n            var fullPath = path + fileName;\r\n            console.log(fullPath);\r\n\r\n            // 4. tell service to create it\r\n            $scope.svcCurrent.create(fullPath, $scope.file.body)\r\n                .then(function() {\r\n                    $scope.value.Value = fullPath; // set the dropdown to the new file\r\n                });\r\n        };\r\n\r\n        activate();\r\n\r\n    }])\r\n\r\n    // filter to only show files which are applicable to this\r\n    .filter(\"isValidFile\", function() {\r\n\r\n        // Create the return function\r\n        // set the required parameter name to **number**\r\n        return function(paths, ext) {\r\n            var out = [];\r\n            angular.forEach(paths, function(path) {\r\n                if (path.slice(path.length - ext.length) === ext)\r\n                    out.push(path);\r\n            });\r\n            return out;\r\n        };\r\n    });\r\n\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\t/* This app registers all field templates for 2sxc in the angularjs sxcFieldTemplates app */\r\n\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function(formlyConfigProvider) {\r\n\r\n            // for now identical with -adv, but later will change\r\n            formlyConfigProvider.setType({\r\n                name: \"string-wysiwyg-adv\",\r\n                templateUrl: \"fields/string/string-wysiwyg-adv.html\",\r\n                // todo: check if we could use the defaultFieldWrappers instead\r\n                wrapper: [\"eavLabel\", \"bootstrapHasError\", \"eavLocalization\", \"collapsible\"]\r\n            });\r\n\r\n\r\n        }]);\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\t/* This app registers all field templates for 2sxc in the angularjs sxcFieldTemplates app */\r\n\r\n\tangular.module(\"sxcFieldTemplates\")\r\n\r\n    .config([\"formlyConfigProvider\", function (formlyConfigProvider) {\r\n\r\n        // for now identical with -adv, but later will change\r\n\t\tformlyConfigProvider.setType({\r\n\t\t\tname: \"string-wysiwyg-dnn\",\r\n\t\t\ttemplateUrl: \"fields/string/string-wysiwyg-dnn.html\",\r\n\t\t    // todo: check if we could use the defaultFieldWrappers instead\r\n\t\t\twrapper: [\"eavLabel\", \"bootstrapHasError\", \"eavLocalization\", \"collapsible\"],\r\n\t\t\tcontroller: \"FieldTemplate-WysiwygCtrl as vm\"\r\n\t\t});\r\n\r\n        \r\n\t}])\r\n\r\n\r\n    /*@ngInject*/\r\n\t.controller(\"FieldTemplate-WysiwygCtrl\", [\"$scope\", function ($scope) {\r\n\r\n\t\tvar vm = this;\r\n\r\n\t\t// Everything the WebForms bridge (iFrame) should have access to\r\n\t\tvm.bridge = {\r\n\t\t    initialValue: \"\",\r\n            initialReadOnly: false,\r\n\t\t    onChanged: function (newValue) {\r\n\t\t\t\t$scope.$apply(function () {\r\n\t\t\t\t\t$scope.value.Value = newValue;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tsetValue: function (value) { vm.bridge.initialValue = value; },\r\n\t\t\tsetReadOnly: function(readOnly) { vm.bridge.initialReadOnly = readOnly; }\r\n\t\t};\r\n\r\n\t\t$scope.$watch(\"value.Value\", function (newValue, oldValue) {\r\n\t\t\tif (newValue !== oldValue)\r\n\t\t\t\tvm.bridge.setValue(newValue);\r\n\t\t});\r\n\r\n\t\t$scope.$watch(\"to.disabled\", function (newValue, oldValue) {\r\n\t\t\tif (newValue !== oldValue)\r\n\t\t\t\tvm.bridge.setReadOnly(newValue);\r\n\t\t});\r\n\r\n\t}]);\r\n\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n    // Register in Angular Formly\r\n    FieldWysiwygTinyMceController.$inject = [\"$scope\", \"languages\", \"tinyMceHelpers\", \"tinyMceToolbars\", \"tinyMceConfig\", \"tinyMceAdam\", \"tinyMceDnnBridge\", \"featuresSvc\"];\r\n    angular.module(\"sxcFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n            formlyConfigProvider.setType({\r\n                name: \"string-wysiwyg-tinymce\",\r\n                templateUrl: \"fields/string/string-wysiwyg-tinymce.html\",\r\n                wrapper: defaultFieldWrappers, \r\n                controller: \"FieldWysiwygTinyMce as vm\"\r\n            });\r\n        }])\r\n\r\n        .controller(\"FieldWysiwygTinyMce\", FieldWysiwygTinyMceController);\r\n\r\n    /*@ngInject*/\r\n    function FieldWysiwygTinyMceController($scope, languages, tinyMceHelpers, tinyMceToolbars, tinyMceConfig, tinyMceAdam, tinyMceDnnBridge, featuresSvc) {\r\n        var vm = this;\r\n        vm.enableContentBlocks = true;\r\n\r\n        var settings = {\r\n            enableContentBlocks : false\r\n        };\r\n\r\n        vm.adamModeConfig = {\r\n            usePortalRoot: false\r\n        };\r\n\r\n        vm.activate = function () {\r\n\r\n            enableContentBlocksIfPossible(settings);\r\n\r\n            // initialize options and wire-up init-callback\r\n            $scope.tinymceOptions = angular.extend(tinyMceConfig.getDefaultOptions(settings), {\r\n                setup: tinyMceInitCallback\r\n            });\r\n\r\n            // add paste wysiwyg ability feature if enabled\r\n            featuresSvc.enabled('1b13e0e6-a346-4454-a1e6-2fb18c047d20').then(\r\n                function (enabled) {\r\n                    if (enabled) {\r\n                        $scope.tinymceOptions = angular.extend($scope.tinymceOptions, tinyMceConfig.getPasteWysiwygAbilityOption);\r\n                    }\r\n                }\r\n            ).catch(function () {\r\n                // failed\r\n            }).then(function () {\r\n                // always do this\r\n\r\n                // add ADAM definition, so that the callback will be able to link up to this\r\n                tinyMceAdam.attachAdam(vm, $scope);\r\n\r\n                // add DNN Bridge, needed for webforms dnn-dialogs\r\n                tinyMceDnnBridge.attach(vm, $scope);\r\n\r\n                // check if it's an additionally translated language and load the translations\r\n                var lang2 = /* \"de\" */ languages.currentLanguage.substr(0, 2);\r\n                if (tinyMceConfig.languages.indexOf(lang2) >= 0)\r\n                    angular.extend($scope.tinymceOptions, {\r\n                        language: lang2,\r\n                        language_url: \"../i18n/lib/tinymce/\" + lang2 + \".js\"\r\n                    });\r\n\r\n                watchDisabled($scope);\r\n            });\r\n        };\r\n\r\n        vm.activate();\r\n\r\n        // callback event which tinyMce will execute when it's built the editor\r\n        function tinyMceInitCallback(editor) {\r\n            vm.editor = editor;\r\n            if ($scope.tinymceOptions.language)\r\n                tinyMceHelpers.addTranslations(editor, $scope.tinymceOptions.language);\r\n\r\n            tinyMceToolbars.addButtons(vm);\r\n            tinyMceAdam.addButtons(vm);\r\n\r\n            enableContentBlocksIfPossible(editor);\r\n        }\r\n\r\n        function watchDisabled(ngscope) {\r\n            // Monitor for changes on Disabled\r\n            ngscope.$watch(\"to.disabled\", function(newValue, oldValue) {\r\n                if (newValue !== oldValue && vm.editor !== null) {\r\n                    ngscope.tinymceOptions.readonly = newValue;\r\n                    ngscope.$broadcast(\"$tinymce:refresh\"); // Refresh tinymce instance to pick-up new readonly value\r\n                }\r\n            });\r\n        }\r\n\r\n        function enableContentBlocksIfPossible(settings) {\r\n            // quit if there are no following fields\r\n            if ($scope.fields.length === $scope.index + 1)\r\n                return;\r\n\r\n            var nextField = $scope.fields[$scope.index + 1];\r\n            if (nextField.type === \"entity-content-blocks\")\r\n                settings.enableContentBlocks = true;\r\n        }\r\n    }\r\n\r\n\r\n\r\n})();\r\n\r\n\r\n\nangular.module('sxcFieldTemplates')\r\n    /*@ngInject*/\r\n    .factory('tinyMceAdam', function () {\r\n        return {\r\n            attachAdam: attachAdam,\r\n            addButtons: addAdamButtons\r\n        };\r\n\r\n        function attachAdam(vm, $scope) {\r\n            vm.registerAdam = function (adam) {\r\n                vm.adam = adam;\r\n            };\r\n\r\n            vm.setValue = function (fileItem, modeImage) {\r\n\r\n                if (modeImage === undefined) // if not supplied, use the setting in the adam\r\n                    modeImage = vm.adamModeImage;\r\n                var fileName = fileItem.Name.substr(0, fileItem.Name.lastIndexOf('.'));\r\n\r\n                var content = modeImage\r\n                    ? '<img src=\"' + fileItem.fullPath + '\" + alt=\"' + fileName + '\">'\r\n                    : '<a href=\"' + fileItem.fullPath + '\">' + fileName + '</a>';\r\n\r\n                vm.editor.insertContent(content);\r\n            };\r\n\r\n            // this is the event called by dropzone as something is dropped\r\n            $scope.afterUpload = function (fileItem) {\r\n                vm.setValue(fileItem, fileItem.Type === 'image');\r\n            };\r\n\r\n            vm.toggleAdam = function toggle(imagesOnly, usePortalRoot) {\r\n                vm.adamModeImage = imagesOnly;\r\n                vm.adam.toggle({\r\n                    showImagesOnly: imagesOnly,\r\n                    usePortalRoot: usePortalRoot\r\n                });\r\n                $scope.$apply();\r\n            };\r\n        }\r\n\r\n        function addAdamButtons(vm) {\r\n            var e = vm.editor;\r\n            // group with adam-link, dnn-link\r\n            e.addButton('linkfiles', {\r\n                type: 'splitbutton',\r\n                icon: ' eav-icon-file-pdf',\r\n                title: 'Link.AdamFile.Tooltip',\r\n                onclick: function () {\r\n                    vm.toggleAdam(false);\r\n                },\r\n                menu: [\r\n                    {\r\n                        text: 'Link.AdamFile',\r\n                        tooltip: 'Link.AdamFile.Tooltip',\r\n                        icon: ' eav-icon-file-pdf',\r\n                        onclick: function () {\r\n                            vm.toggleAdam(false, false);\r\n                        }\r\n                    }, {\r\n                        text: 'Link.DnnFile',\r\n                        tooltip: 'Link.DnnFile.Tooltip',\r\n                        icon: ' eav-icon-file',\r\n                        onclick: function () {\r\n                            vm.toggleAdam(false, true);\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n\r\n            // group with images (adam) - only in PRO mode\r\n            e.addButton('images', {\r\n                type: 'splitbutton',\r\n                text: '',\r\n                icon: 'image',\r\n                onclick: function () {\r\n                    vm.toggleAdam(true);\r\n                },\r\n                menu: [\r\n                    {\r\n                        text: 'Image.AdamImage',\r\n                        tooltip: 'Image.AdamImage.Tooltip',\r\n                        icon: 'image',\r\n                        onclick: function () { vm.toggleAdam(true); }\r\n                    }, {\r\n                        text: 'Image.DnnImage',\r\n                        tooltip: 'Image.DnnImage.Tooltip',\r\n                        icon: 'image',\r\n                        onclick: function () { vm.toggleAdam(true, true); }\r\n                    }, {\r\n                        text: 'Insert\\/edit image', // i18n tinyMce standard\r\n                        icon: 'image',\r\n                        onclick: function () { e.execCommand('mceImage'); }\r\n\r\n                    },\r\n                    // note: all these use i18n from tinyMce standard\r\n                    { icon: 'alignleft', tooltip: 'Align left', onclick: function () { e.execCommand('JustifyLeft'); } },\r\n                    { icon: 'aligncenter', tooltip: 'Align center', onclick: function () { e.execCommand('JustifyCenter'); } },\r\n                    { icon: 'alignright', tooltip: 'Align right', onclick: function () { e.execCommand('JustifyRight'); } }\r\n                ]\r\n            });\r\n\r\n        }\r\n    });\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceConfig\", [\"beta\", function (beta) {\r\n\r\n        var svc = {\r\n            // cdn root\r\n            cdnRoot: \"//cdn.tinymce.com/4\",\r\n            // these are the sizes we can auto-resize to\r\n            imgSizes: [100, 75, 70, 66, 60, 50, 40, 33, 30, 25, 10],\r\n\r\n            // the default language, in which we have all labels/translations\r\n            defaultLanguage: \"en\",\r\n\r\n            // all other languages\r\n            languages: \"de,es,fr,it,uk,nl\".split(\",\"),\r\n\r\n            // tinyMCE plugins we're using\r\n            plugins: [\r\n                \"code\", // allow view / edit source\r\n                \"contextmenu\", // right-click menu for things like insert, etc.\r\n                \"autolink\", // automatically convert www.xxx links to real links\r\n                \"tabfocus\", // get in an out of the editor with tab\r\n                \"image\", // image button and image-settings\r\n                \"link\", // link button + ctrl+k to add link\r\n                // \"autosave\",     // temp-backups the content in case the browser crashes, allows restore\r\n                \"paste\", // enables paste as text from word etc. https://www.tinymce.com/docs/plugins/paste/\r\n                \"anchor\", // allows users to set an anchor inside the text\r\n                \"charmap\", // character map https://www.tinymce.com/docs/plugins/visualchars/\r\n                \"hr\", // hr\r\n                \"media\", // video embed\r\n                \"nonbreaking\", // add button to insert &nbsp; https://www.tinymce.com/docs/plugins/nonbreaking/\r\n                \"searchreplace\", // search/replace https://www.tinymce.com/docs/plugins/searchreplace/\r\n                \"table\", // https://www.tinymce.com/docs/plugins/searchreplace/\r\n                \"lists\", // should fix bug with fonts in list-items (https://github.com/tinymce/tinymce/issues/2330),\r\n                \"textpattern\" // enable typing like \"1. text\" to create lists etc.\r\n            ],\r\n            \r\n            validateAlso: '@[class]' // allow classes on all elements, \r\n                    + ',i' // allow i elements (allows icon-font tags like <i class=\"fa fa-...\">)\r\n                    + \",hr[sxc|guid]\" // experimental: allow inline content-blocks\r\n        };\r\n\r\n        function buildModes(settings) {\r\n            // the WYSIWYG-modes we offer, standard with simple toolbar and advanced with much more\r\n            modes = {\r\n                standard: {\r\n                    menubar: false,\r\n                    toolbar: \" undo redo removeformat \"\r\n                        + \"| bold formatgroup \"\r\n                        + \"| h1 h2 hgroup \"\r\n                        + \"| listgroup \"\r\n                        + \"| linkfiles linkgroup \"\r\n                        + \"| \" + (settings.enableContentBlocks ? \" addcontentblock \" : \"\")+ \"modeadvanced \",\r\n                    contextmenu: \"charmap hr\" + (settings.enableContentBlocks ? \" addcontentblock\" : \"\")\r\n                },\r\n                advanced: {\r\n                    menubar: true,\r\n                    toolbar: \" undo redo removeformat \"\r\n                        + \"| styleselect \"\r\n                        + \"| bold italic \"\r\n                        + \"| h1 h2 hgroup \"\r\n                        + \"| bullist numlist outdent indent \"\r\n                        + \"| images linkfiles linkgrouppro \"\r\n                        + \"| code modestandard \",\r\n                    contextmenu: \"link image | charmap hr adamimage\"\r\n                }\r\n            };\r\n            return modes;\r\n        }\r\n\r\n        svc.getDefaultOptions = function (settings) {\r\n            var modes = buildModes(settings);\r\n            return {\r\n                baseURL: svc.cdnRoot,\r\n                inline: true, // use the div, not an iframe\r\n                automatic_uploads: false, // we're using our own upload mechanism\r\n                modes: modes, // for later switch to another mode\r\n                menubar: modes.standard.menubar, // basic menu (none)\r\n                toolbar: modes.standard.toolbar, // basic toolbar\r\n                plugins: svc.plugins.join(\" \"),\r\n                contextmenu: modes.standard.contextmenu, //\"link image | charmap hr adamimage\",\r\n                autosave_ask_before_unload: false,\r\n                extended_valid_elements: svc.validateAlso,\r\n                //'@[class]' // allow classes on all elements, \r\n                //+ ',i' // allow i elements (allows icon-font tags like <i class=\"fa fa-...\">)\r\n                //+ \",hr[sxc|guid]\", // experimental: allow inline content-blocks\r\n                custom_elements: \"hr\",\r\n\r\n                // Url Rewriting in images and pages\r\n                //convert_urls: false,  // don't use this, would keep the domain which is often a test-domain\r\n                relative_urls: false, // keep urls with full path so starting with a \"/\" - otherwise it would rewrite them to a \"../../..\" syntax\r\n                default_link_target: \"_blank\", // auto-use blank as default link-target\r\n                object_resizing: false, // don't allow manual scaling of images\r\n\r\n                // General looks\r\n                skin: \"lightgray\",\r\n                theme: \"modern\",\r\n                // statusbar: true,    // doesn't work in inline :(\r\n\r\n                language: svc.defaultLanguage,\r\n\r\n                debounce: false, // DONT slow-down model updates - otherwise we sometimes miss the last changes\r\n\r\n                paste_as_text: true\r\n            };\r\n        };\r\n\r\n        // add paste wysiwyg ability feature if enabled\r\n        svc.getPasteWysiwygAbilityOption = {\r\n            paste_as_text: false,\r\n            paste_enable_default_filters: true,\r\n            paste_create_paragraphs: true,\r\n            paste_create_linebreaks: false,\r\n            paste_force_cleanup_wordpaste: true,\r\n            paste_use_dialog: true,\r\n            paste_auto_cleanup_on_paste: true,\r\n            paste_convert_middot_lists: true,\r\n            paste_convert_headers_to_strong: false,\r\n            paste_remove_spans: true,\r\n            paste_remove_styles: true,\r\n\r\n            paste_postprocess: function (plugin, args) {\r\n                try {\r\n                    var anchors = args.node.getElementsByTagName('a');\r\n                    for (var i = 0; i < anchors.length; i++) {\r\n                        if (anchors[i].hasAttribute('target') === false) {\r\n                            anchors[i].setAttribute('target', '_blank');\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    console.error('error in paste postprocess - will only log but not throw', e);\r\n                }\r\n            }\r\n        };\r\n\r\n        return svc;\r\n    }]);\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceDnnBridge\", [\"dnnBridgeSvc\", function (dnnBridgeSvc) {\r\n        return {\r\n            attach: attach\r\n        };\r\n\r\n        function attach(vm, $scope) {\r\n\r\n            // the callback when something was selected\r\n            vm.processResultOfDnnBridge = function (value) {\r\n                $scope.$apply(function () {\r\n                    if (!value) return;\r\n\r\n                    var previouslySelected = vm.editor.selection.getContent();\r\n                    \r\n                    var promise = dnnBridgeSvc.getUrlOfId(\"page:\" + (value.id || value.FileId)); // id on page, FileId on file\r\n                    return promise.then(function (result) {\r\n                        vm.editor.insertContent(\"<a href=\\\"\" + result.data + \"\\\">\" + (previouslySelected || value.name) + \"</a>\");\r\n                    });\r\n\r\n                });\r\n            };\r\n\r\n            // open the dialog - note: strong dependency on the buttons, not perfect here\r\n            vm.openDnnDialog = function (type) {\r\n                dnnBridgeSvc.open(\"\", { Paths: null, FileFilter: null }, vm.processResultOfDnnBridge);\r\n            };\r\n\r\n        }\r\n\r\n    }]);\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceHelpers\", [\"$translate\", \"tinyMceConfig\", function ($translate, tinyMceConfig) {\r\n        var svc = {\r\n            addTranslations: initLangResources\r\n        };\r\n\r\n        // Initialize the tinymce resources which we translate ourselves\r\n        function initLangResources(editor, language) {\r\n            var primaryLan = tinyMceConfig.defaultLanguage;\r\n            var keys = [], mceTranslations = {}, prefix = \"Extension.TinyMce.\", pLen = prefix.length;\r\n\r\n            // find all relevant keys by querying the primary language\r\n            var all = $translate.getTranslationTable(primaryLan);\r\n            // ReSharper disable once MissingHasOwnPropertyInForeach\r\n            for (var key in all)\r\n                if (key.indexOf(prefix) === 0)\r\n                    keys.push(key);\r\n\r\n            var translations = $translate.instant(keys);\r\n\r\n            for (var k = 0; k < keys.length; k++)\r\n                mceTranslations[keys[k].substring(pLen)] = translations[keys[k]];\r\n            tinymce.addI18n(language, mceTranslations);\r\n        }\r\n        return svc;\r\n    }]);\nangular.module(\"sxcFieldTemplates\")\r\n    /*@ngInject*/\r\n    .factory(\"tinyMceToolbars\", [\"tinyMceConfig\", function (tinyMceConfig) {\r\n        var svc = {\r\n            addButtons: addTinyMceToolbarButtons\r\n        };\r\n\r\n        function addTinyMceToolbarButtons(vm) {\r\n            var editor = vm.editor;\r\n            //#region helpers like initOnPostRender(name)\r\n\r\n            // helper function to add activate/deactivate to buttons like alignleft, alignright etc.\r\n            function initOnPostRender(name) { // copied/modified from https://github.com/tinymce/tinymce/blob/ddfa0366fc700334f67b2c57f8c6e290abf0b222/js/tinymce/classes/ui/FormatControls.js#L232-L249\r\n                return function () {\r\n                    var self = this; // keep ref to the current button?\r\n\r\n                    function watchChange() {\r\n                        editor.formatter.formatChanged(name, function (state) {\r\n                            self.active(state);\r\n                        });\r\n                    }\r\n\r\n                    if (editor.formatter)\r\n                        watchChange();\r\n                    else\r\n                        editor.on(\"init\", watchChange());\r\n                };\r\n            }\r\n\r\n            //#endregion\r\n\r\n            //#region register formats\r\n\r\n            // the method that will register all formats - like img-sizes\r\n            function registerTinyMceFormats(editor, vm) {\r\n                var imgformats = {};\r\n                for (var is = 0; is < tinyMceConfig.imgSizes.length; is++)\r\n                    imgformats[\"imgwidth\" + tinyMceConfig.imgSizes[is]] = [{ selector: \"img\", collapsed: false, styles: { 'width': tinyMceConfig.imgSizes[is] + \"%\" } }];\r\n                editor.formatter.register(imgformats);\r\n            }\r\n\r\n            // call register once the editor-object is ready\r\n            editor.on('init', function () {\r\n                registerTinyMceFormats(editor, vm);\r\n            });\r\n\r\n            //#endregion\r\n\r\n            //// group with adam-link, dnn-link\r\n            //editor.addButton(\"linkfiles\", {\r\n            //    type: \"splitbutton\",\r\n            //    icon: \" eav-icon-file-pdf\",\r\n            //    title: \"Link.AdamFile.Tooltip\",\r\n            //    onclick: function () {\r\n            //        vm.toggleAdam(false);\r\n            //    },\r\n            //    menu: [\r\n            //        {\r\n            //            text: \"Link.AdamFile\",\r\n            //            tooltip: \"Link.AdamFile.Tooltip\",\r\n            //            icon: \" eav-icon-file-pdf\",\r\n            //            onclick: function () {\r\n            //                vm.toggleAdam(false);\r\n            //            }\r\n            //        }, {\r\n            //            text: \"Link.DnnFile\",\r\n            //            tooltip: \"Link.DnnFile.Tooltip\",\r\n            //            icon: \" eav-icon-file\",\r\n            //            onclick: function () {\r\n            //                vm.openDnnDialog(\"documentmanager\");\r\n            //            }\r\n            //        }\r\n            //    ]\r\n            //});\r\n\r\n            //#region link group with web-link, page-link, unlink, anchor\r\n            var linkgroup = {\r\n                type: \"splitbutton\",\r\n                icon: \"link\",\r\n                title: \"Link\",\r\n                onPostRender: initOnPostRender(\"link\"),\r\n                onclick: function () {\r\n                    editor.execCommand(\"mceLink\");\r\n                },\r\n\r\n                menu: [\r\n                { icon: \"link\", text: \"Link\", onclick: function () { editor.execCommand(\"mceLink\"); } },\r\n                {\r\n                    text: \"Link.Page\",\r\n                    tooltip: \"Link.Page.Tooltip\",\r\n                    icon: \" eav-icon-sitemap\",\r\n                    onclick: function () {\r\n                        vm.openDnnDialog(\"pagepicker\");\r\n                    }\r\n                }\r\n                ]\r\n            };\r\n            var linkgroupPro = angular.copy(linkgroup);\r\n            linkgroupPro.menu.push({ icon: \" eav-icon-anchor\", text: \"Anchor\", tooltip: \"Link.Anchor.Tooltip\", onclick: function () { editor.execCommand(\"mceAnchor\"); } });\r\n            editor.addButton(\"linkgroup\", linkgroup);\r\n            editor.addButton(\"linkgrouppro\", linkgroupPro);\r\n            //#endregion\r\n\r\n            // group with images (adam) - only in PRO mode\r\n            editor.addButton(\"images\", {\r\n                type: \"splitbutton\",\r\n                text: \"\",\r\n                icon: \"image\",\r\n                onclick: function () {\r\n                    vm.toggleAdam(true);\r\n                },\r\n                menu: [\r\n                    {\r\n                        text: \"Image.AdamImage\",\r\n                        tooltip: \"Image.AdamImage.Tooltip\",\r\n                        icon: \"image\",\r\n                        onclick: function () { vm.toggleAdam(true); }\r\n                    }, {\r\n                        text: \"Image.DnnImage\",\r\n                        tooltip: \"Image.DnnImage.Tooltip\",\r\n                        icon: \"image\",\r\n                        onclick: function () { vm.toggleAdam(true, true); }\r\n                    }, {\r\n                        text: \"Insert\\/edit image\", // i18n tinyMce standard\r\n                        icon: \"image\",\r\n                        onclick: function () { editor.execCommand(\"mceImage\"); }\r\n\r\n                    },\r\n                    // note: all these use i18n from tinyMce standard\r\n                    { icon: \"alignleft\", tooltip: \"Align left\", onclick: function () { editor.execCommand(\"JustifyLeft\"); } },\r\n                    { icon: \"aligncenter\", tooltip: \"Align center\", onclick: function () { editor.execCommand(\"JustifyCenter\"); } },\r\n                    { icon: \"alignright\", tooltip: \"Align right\", onclick: function () { editor.execCommand(\"JustifyRight\"); } }\r\n                ]\r\n            });\r\n\r\n            // drop-down with italic, strikethrough, ...\r\n            editor.addButton(\"formatgroup\", {\r\n                type: \"splitbutton\",\r\n                tooltip: \"Italic\",  // will be autotranslated\r\n                text: \"\",\r\n                icon: \"italic\",\r\n                cmd: \"italic\",\r\n                onPostRender: initOnPostRender(\"italic\"),\r\n                menu: [\r\n                    { icon: \"strikethrough\", text: \"Strikethrough\", onclick: function () { editor.execCommand(\"strikethrough\"); } },\r\n                    { icon: \"superscript\", text: \"Superscript\", onclick: function () { editor.execCommand(\"superscript\"); } },\r\n                    { icon: \"subscript\", text: \"Subscript\", onclick: function () { editor.execCommand(\"subscript\"); } }\r\n                ]\r\n\r\n            });\r\n\r\n            // drop-down with italic, strikethrough, ...\r\n            editor.addButton(\"listgroup\", {\r\n                type: \"splitbutton\",\r\n                tooltip: \"Numbered list\",  // official tinymce key\r\n                text: \"\",\r\n                icon: \"numlist\",\r\n                cmd: \"InsertOrderedList\",\r\n                onPostRender: initOnPostRender(\"numlist\"),  // for unknown reasons, this just doesn't activate correctly :( - neither does the bullist\r\n                menu: [\r\n                    { icon: \"bullist\", text: \"Bullet list\", onPostRender: initOnPostRender(\"bullist\"), onclick: function () { editor.execCommand(\"InsertUnorderedList\"); } },\r\n                    { icon: \"outdent\", text: \"Outdent\", onclick: function () { editor.execCommand(\"Outdent\"); } },\r\n                    { icon: \"indent\", text: \"Indent\", onclick: function () { editor.execCommand(\"Indent\"); } }\r\n                ]\r\n\r\n            });\r\n\r\n            //#region mode switching and the buttons for it\r\n            function switchModes(mode) {\r\n                editor.settings.toolbar = editor.settings.modes[mode].toolbar;\r\n                editor.settings.menubar = editor.settings.modes[mode].menubar;\r\n                // editor.settings.contextmenu = editor.settings.modes[mode].contextmenu; - doesn't work at the moment\r\n\r\n                editor.theme.panel.remove();    // kill current toolbar\r\n                editor.theme.renderUI(editor);\r\n                editor.execCommand(\"mceFocus\");\r\n\r\n                // focus away...\r\n                document.getElementById(\"dummyfocus\").focus();\r\n\r\n                // ...and focus back a bit later\r\n                setTimeout(function () {\r\n                    editor.focus();\r\n                }, 100);\r\n            }\r\n\r\n            editor.addButton(\"modestandard\", {\r\n                icon: \" eav-icon-cancel\",\r\n                tooltip: \"SwitchMode.Standard\",\r\n                onclick: function () { switchModes(\"standard\"); }\r\n            });\r\n\r\n            editor.addButton(\"modeadvanced\", {\r\n                icon: \" eav-icon-pro\",\r\n                tooltip: \"SwitchMode.Pro\",\r\n                onclick: function () { switchModes(\"advanced\"); }\r\n            });\r\n            //#endregion\r\n\r\n            //#region h1, h2, etc. buttons, inspired by http://blog.ionelmc.ro/2013/10/17/tinymce-formatting-toolbar-buttons/\r\n            // note that the complex array is needede because auto-translate only happens if the string is identical\r\n            [[\"pre\", \"Preformatted\", \"Preformatted\"],\r\n                [\"p\", \"Paragraph\", \"Paragraph\"],\r\n                [\"code\", \"Code\", \"Code\"],\r\n                [\"h1\", \"Heading 1\", \"H1\"],\r\n                [\"h2\", \"Heading 2\", \"H2\"],\r\n                [\"h3\", \"Heading 3\", \"H3\"],\r\n                [\"h4\", \"Heading 4\", \"Heading 4\"],\r\n                [\"h5\", \"Heading 5\", \"Heading 5\"],\r\n                [\"h6\", \"Heading 6\", \"Heading 6\"]].forEach(function (tag) {\r\n                    editor.addButton(tag[0], {\r\n                        tooltip: tag[1],\r\n                        text: tag[2],\r\n                        onclick: function () { editor.execCommand(\"mceToggleFormat\", false, tag[0]); },\r\n                        onPostRender: function () {\r\n                            var self = this,\r\n                                setup = function () {\r\n                                    editor.formatter.formatChanged(tag[0], function (state) {\r\n                                        self.active(state);\r\n                                    });\r\n                                };\r\n                            var x = editor.formatter ? setup() : editor.on(\"init\", setup);\r\n                        }\r\n                    });\r\n                });\r\n\r\n            // group of buttons with an h3 to start and showing h4-6 + p\r\n            editor.addButton(\"hgroup\", angular.extend({}, editor.buttons.h3,\r\n            {\r\n                type: \"splitbutton\",\r\n                menu: [\r\n                    editor.buttons.h4,\r\n                    editor.buttons.h5,\r\n                    editor.buttons.h6,\r\n                    editor.buttons.p\r\n                ]\r\n            }));\r\n            //#endregion\r\n\r\n            // #region inside content\r\n            editor.addButton(\"addcontentblock\", {\r\n                icon: \" eav-icon-content-block\",\r\n                classes: \"btn-addcontentblock\",\r\n                tooltip: \"ContentBlock.Add\",\r\n                onclick: function() {\r\n                    var guid = Math.uuid().toLowerCase(); // requires the uuid-generator to be included\r\n                    \r\n                    vm.editor.insertContent(\"<hr sxc=\\\"sxc-content-block\\\" guid=\\\"\" + guid + \"\\\" />\");\r\n                }\r\n            });\r\n            // #endregion\r\n\r\n            //#region image alignment / size buttons\r\n            editor.addButton(\"alignimgleft\", { icon: \" eav-icon-align-left\", tooltip: \"Align left\", cmd: \"JustifyLeft\", onPostRender: initOnPostRender(\"alignleft\") });\r\n            editor.addButton(\"alignimgcenter\", { icon: \" eav-icon-align-center\", tooltip: \"Align center\", cmd: \"justifycenter\", onPostRender: initOnPostRender(\"aligncenter\") });\r\n            editor.addButton(\"alignimgright\", { icon: \" eav-icon-align-right\", tooltip: \"Align right\", cmd: \"justifyright\", onPostRender: initOnPostRender(\"alignright\") });\r\n\r\n            var imgMenuArray = [];\r\n            function makeImgFormatCall(size) { return function () { editor.formatter.apply(\"imgwidth\" + size); }; }\r\n            for (var is = 0; is < tinyMceConfig.imgSizes.length; is++) {\r\n                var config = {\r\n                    icon: \" eav-icon-resize-horizontal\",\r\n                    tooltip: tinyMceConfig.imgSizes[is] + \"%\",\r\n                    text: tinyMceConfig.imgSizes[is] + \"%\",\r\n                    onclick: makeImgFormatCall(tinyMceConfig.imgSizes[is]),\r\n                    onPostRender: initOnPostRender(\"imgwidth\" + tinyMceConfig.imgSizes[is])\r\n                };\r\n                editor.addButton(\"imgresize\" + tinyMceConfig.imgSizes[is], config);\r\n                imgMenuArray.push(config);\r\n            }\r\n\r\n            editor.addButton(\"resizeimg100\", {\r\n                icon: \" eav-icon-resize-horizontal\", tooltip: \"100%\",\r\n                onclick: function () { editor.formatter.apply(\"imgwidth100\"); },\r\n                onPostRender: initOnPostRender(\"imgwidth100\")\r\n            });\r\n\r\n            // group of buttons to resize an image 100%, 50%, etc.\r\n            editor.addButton(\"imgresponsive\", angular.extend({}, editor.buttons.resizeimg100,\r\n            { type: \"splitbutton\", menu: imgMenuArray }));\r\n            //#endregion\r\n\r\n            //#region my context toolbars for links, images and lists (ul/li)\r\n            function makeTagDetector(tagWeNeedInTheTagPath) {\r\n                return function tagDetector(currentElement) {\r\n                    // check if we are in a tag within a specific tag\r\n                    var selectorMatched = editor.dom.is(currentElement, tagWeNeedInTheTagPath) && editor.getBody().contains(currentElement);\r\n                    return selectorMatched;\r\n                };\r\n            }\r\n\r\n            editor.addContextToolbar(makeTagDetector(\"a\"), \"link unlink\");\r\n            editor.addContextToolbar(makeTagDetector(\"img\"), \"image | alignimgleft alignimgcenter alignimgright imgresponsive | removeformat | remove\");\r\n            editor.addContextToolbar(makeTagDetector(\"li,ol,ul\"), \"bullist numlist | outdent indent\");\r\n            //#endregion\r\n        }\r\n\r\n        return svc;\r\n    }]);\nangular.module(\"SxcEditTemplates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"adam/adam-hint.html\",\"<div class=\\\"small pull-right\\\">\\r\\n    <span style=\\\"opacity: 0.5\\\">drop files here -</span>\\r\\n    <a href=\\\"http://2sxc.org/help?tag=adam\\\" target=\\\"_blank\\\" uib-tooltip=\\\"ADAM is the Automatic Digital Assets Manager - click to discover more\\\">\\r\\n        <i class=\\\"eav-icon-apple\\\"></i>\\r\\n        Adam\\r\\n    </a>\\r\\n    <span style=\\\"opacity: 0.5\\\"> is sponsored with\\r\\n    <i class=\\\"eav-icon-heart\\\"></i> by\\r\\n    <a tabindex=\\\"-1\\\" href=\\\"http://2sic.com/\\\" target=\\\"_blank\\\">\\r\\n        2sic.com\\r\\n    </a>\\r\\n    </span>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"adam/browser.html\",\"<div ng-if=\\\"vm.show\\\" ng-class=\\\"\\'adam-scope-\\' + (vm.adamModeConfig.usePortalRoot ? \\'site\\' : field)\\\">\\r\\n    <!-- info for dropping stuff here -->\\r\\n    <div ng-show=\\\"vm.allowEdit()\\\" class=\\\"dz-preview dropzone-adam\\\" ng-disabled=\\\"vm.disabled\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.AdamUploadLabel\\' | translate }}\\\" ng-click=\\\"vm.openUpload()\\\">\\r\\n        <div class=\\\"dz-image adam-browse-background-icon adam-browse-background\\\" xstyle=\\\"background-color: whitesmoke\\\">\\r\\n            <i class=\\\"eav-icon-up-circled2\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">upload to<i ng-class=\\\"vm.adamModeConfig.usePortalRoot ? \\'eav-icon-globe\\' : \\'eav-icon-apple\\'\\\" style=\\\"font-size: larger\\\"></i></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- info for paste image from clipboard here -->\\r\\n    <div ng-show=\\\"!vm.clipboardPasteImageFunctionalityDisabled && vm.allowEdit()\\\" class=\\\"dz-preview dropzone-adam paste-image\\\" ng-disabled=\\\"vm.clipboardPasteImageFunctionalityDisabled\\\" uib-tooltip=\\\"click here and press [Ctrl]+[V] to paste image from clipboard\\\">\\r\\n        <div class=\\\"dz-image adam-browse-background-icon adam-browse-background\\\" xstyle=\\\"background-color: whitesmoke\\\">\\r\\n            <i class=\\\"eav-icon-file-image\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">paste image</div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- add folder - not always shown -->\\r\\n    <div ng-show=\\\"vm.allowCreateFolder() || vm.debug.on\\\" class=\\\"dz-preview\\\" ng-disabled=\\\"vm.disabled\\\" ng-click=\\\"vm.addFolder()\\\">\\r\\n        <div class=\\\"dz-image adam-browse-background-icon adam-browse-background\\\">\\r\\n            <div class=\\\"\\\">\\r\\n                <i class=\\\"eav-icon-folder-empty\\\"></i>\\r\\n                <div class=\\\"adam-short-label\\\">new folder</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"adam-background adam-browse-background-icon\\\">\\r\\n            <i class=\\\"eav-icon-plus\\\" style=\\\"font-size: 2em; top: 13px; position: relative;\\\"></i>\\r\\n        </div>\\r\\n        <div class=\\\"dz-details\\\" style=\\\"opacity: 1\\\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- browse up a folder - not always shown -->\\r\\n    <div ng-show=\\\"vm.showFolders || vm.debug.on\\\" class=\\\"dz-preview\\\" ng-disabled=\\\"vm.disabled\\\" ng-if=\\\"vm.folders.length > 0\\\" ng-click=\\\"vm.goUp()\\\">\\r\\n        <div class=\\\"dz-image  adam-browse-background-icon adam-browse-background\\\">\\r\\n            <i class=\\\"eav-icon-folder-empty\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">up</div>\\r\\n        </div>\\r\\n        <div class=\\\"adam-background adam-browse-background-icon\\\">\\r\\n            <i class=\\\"eav-icon-level-up\\\" style=\\\"font-size: 2em; top: 13px; position: relative;\\\"></i>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- folder list - not always shown -->\\r\\n    <div ng-show=\\\"vm.showFolders || vm.debug.on\\\" class=\\\"dz-preview\\\"\\r\\n         ng-repeat=\\\"item in vm.items | filter: { IsFolder: true } | filter: { Name: \\'!.\\' } | filter: { Name: \\'!2sxc\\' } | filter: { Name: \\'!adam\\' } | orderBy:\\'Name\\'\\\"\\r\\n         ng-click=\\\"vm.goIntoFolder(item)\\\">\\r\\n        <div class=\\\"dz-image adam-blur adam-browse-background-icon adam-browse-background\\\">\\r\\n            <i class=\\\"eav-icon-folder-empty\\\"></i>\\r\\n            <div class=\\\"short-label\\\">{{ item.Name }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"dz-details file-type-{{item.Type}}\\\">\\r\\n            <span ng-show=\\\"vm.allowEdit()\\\" ng-click=\\\"vm.del(item)\\\" stop-event=\\\"click\\\" class=\\\"adam-delete-button\\\"><i class=\\\"eav-icon-cancel\\\"></i></span>\\r\\n            <span ng-show=\\\"vm.allowEdit()\\\" ng-click=\\\"vm.rename(item)\\\" stop-event=\\\"click\\\" class=\\\"adam-rename-button\\\"><i class=\\\"eav-icon-pencil\\\"></i></span>\\r\\n            <div class=\\\"adam-full-name-area\\\">\\r\\n                <div class=\\\"adam-full-name\\\">{{ item.Name }}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <span class=\\\"adam-tag\\\" ng-class=\\\"{\\'metadata-exists\\': item.MetadataId > 0}\\\"\\r\\n              ng-click=\\\"vm.editMetadata(item)\\\"\\r\\n              ng-if=\\\"vm.getMetadataType(item)\\\"\\r\\n              stop-event=\\\"click\\\"\\r\\n              uib-tooltip=\\\"{{vm.getMetadataType(item)}}:{{item.MetadataId}}\\\">\\r\\n            <i class=\\\"eav-icon-tag\\\" style=\\\"font-size: larger\\\"></i>\\r\\n        </span>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- files -->\\r\\n    <div class=\\\"dz-preview\\\" ng-class=\\\"{ \\'dz-success\\': value.Value.toLowerCase() == \\'file:\\' + item.Id }\\\"\\r\\n        ng-repeat=\\\"item in (vm.items | filter: vm.fileEndingFilter | filter: { IsFolder: false }) | filter: (vm.showImagesOnly ? {Type: \\'image\\'} : {})  | orderBy:\\'Name\\'\\\"\\r\\n        ng-click=\\\"vm.select(item)\\\"\\r\\n        ng-disabled=\\\"vm.disabled || !vm.enableSelect\\\">\\r\\n        <div ng-if=\\\"item.Type !== \\'image\\'\\\" class=\\\"dz-image adam-blur  adam-browse-background-icon adam-browse-background\\\">\\r\\n            <i ng-class=\\\"vm.icon(item)\\\"></i>\\r\\n            <div class=\\\"adam-short-label\\\">{{ item.Name }}</div>\\r\\n        </div>\\r\\n        <div ng-if=\\\"item.Type === \\'image\\'\\\" class=\\\"dz-image\\\">\\r\\n            <img data-dz-thumbnail=\\\"\\\" alt=\\\"{{ item.Id + \\':\\' + item.Name\\r\\n}}\\\" ng-src=\\\"{{ item.fullPath + \\'?w=120&h=120&mode=crop\\' }}\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"dz-details file-type-{{item.Type}}\\\">\\r\\n            <span ng-show=\\\"vm.allowEdit()\\\" ng-click=\\\"vm.del(item)\\\" stop-event=\\\"click\\\" class=\\\"adam-delete-button\\\"><i class=\\\"eav-icon-cancel\\\"></i></span>\\r\\n            <span ng-show=\\\"vm.allowEdit()\\\" ng-click=\\\"vm.rename(item)\\\" stop-event=\\\"click\\\" class=\\\"adam-rename-button\\\"><i class=\\\"eav-icon-pencil\\\"></i></span>\\r\\n            <div class=\\\"adam-full-name-area\\\">\\r\\n                <div class=\\\"adam-full-name\\\">{{ item.Name }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"dz-filename adam-short-label\\\">\\r\\n                <span>#{{ item.Id }} - {{ (item.Size / 1024).toFixed(0) }} kb</span>\\r\\n            </div>\\r\\n            <a class=\\\"adam-link-button\\\" target=\\\"_blank\\\" ng-href=\\\"{{ item.fullPath }}\\\">\\r\\n                <i class=\\\"eav-icon-link-ext\\\" style=\\\"font-size: larger\\\"></i>\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <span class=\\\"adam-tag\\\" ng-class=\\\"{\\'metadata-exists\\': item.MetadataId > 0}\\\"\\r\\n              ng-click=\\\"vm.editMetadata(item)\\\"\\r\\n              ng-if=\\\"vm.getMetadataType(item)\\\"\\r\\n              stop-event=\\\"click\\\"\\r\\n              uib-tooltip=\\\"{{vm.getMetadataType(item)}}:{{item.MetadataId}}\\\">\\r\\n            <i class=\\\"eav-icon-tag\\\" style=\\\"font-size: larger\\\"></i>\\r\\n        </span>\\r\\n\\r\\n\\r\\n        <div class=\\\"dz-success-mark\\\">\\r\\n            <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\r\\n                <title>Check</title>\\r\\n                <defs></defs>\\r\\n                <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\r\\n                    <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\r\\n                </g>\\r\\n            </svg>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\");\n$templateCache.put(\"adam/dropzone-upload-preview.html\",\"<div ng-show=\\\"uploading\\\">\\r\\n    <div class=\\\"dropzone-previews\\\">\\r\\n    </div>\\r\\n    <span class=\\\"invisible-clickable\\\" data-note=\\\"just a fake, invisible area for dropzone\\\"></span>\\r\\n</div>\");\n$templateCache.put(\"fields/dnn-bridge/hyperlink-default-pagepicker.html\",\"<div>\\r\\n\t<div class=\\\"modal-header\\\">\\r\\n\t\t<h3 class=\\\"modal-title\\\" translate=\\\"Edit.Fields.Hyperlink.PagePicker.Title\\\"></h3>\\r\\n\t</div>\\r\\n\t<div class=\\\"modal-body\\\" style=\\\"height:370px; width:600px\\\">\\r\\n\t\t<iframe style=\\\"width:100%; height: 350px; border: 0;\\\" web-forms-bridge=\\\"bridge\\\" bridge-type=\\\"pagepicker\\\" bridge-sync-height=\\\"false\\\"></iframe>\\r\\n\t</div>\\r\\n\t<div class=\\\"modal-footer\\\"></div>\\r\\n</div>\");\n$templateCache.put(\"fields/hyperlink/hyperlink-default.html\",\"<div class=\\\"dropzone\\\">\\r\\n    <div class=\\\"clearfix\\\">\\r\\n        <div ng-if=\\\"value.Value && vm.isImage()\\\"\\r\\n             class=\\\"thumbnail-before-input\\\"\\r\\n             ng-style=\\\"{ \\'background-image\\': \\'url(\\' + vm.thumbnailUrl(1, true) + \\')\\' }\\\"\\r\\n             ng-mouseover=\\\"vm.showPreview = true\\\"\\r\\n             ng-mouseleave=\\\"vm.showPreview = false\\\">\\r\\n        </div>\\r\\n\\r\\n        <div ng-if=\\\"value.Value && !vm.isImage()\\\"\\r\\n           class=\\\"thumbnail-before-input icon-before-input\\\">\\r\\n            <a href=\\\"{{vm.testLink}}\\\"\\r\\n               target=\\\"_blank\\\" tabindex=\\\"-1\\\"\\r\\n               tooltip-html=\\\"{{vm.tooltipUrl(vm.testLink)}}\\\"\\r\\n               tooltip-placement=\\\"right\\\"\\r\\n               ng-class=\\\"vm.icon()\\\">\\r\\n            </a>            \\r\\n        </div>\\r\\n        <div ng-if=\\\"!value.Value\\\"\\r\\n             class=\\\"thumbnail-before-input empty-placeholder\\\">\\r\\n        </div>\\r\\n        <div class=\\\"after-preview\\\">\\r\\n            <div class=\\\"input-group\\\" uib-dropdown>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control input-lg\\\" ng-model=\\\"value.Value\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.Tooltip1\\' | translate }}\\r\\n{{\\'Edit.Fields.Hyperlink.Default.Tooltip2\\' | translate }}\\r\\nADAM - sponsored with ♥ by 2sic.com\\\">\\r\\n                <span class=\\\"input-group-btn\\\" style=\\\"vertical-align: top;\\\">\\r\\n                    <div style=\\\"width: 6px;\\\"></div>\\r\\n                    <button ng-if=\\\"to.settings[\\'merged\\'].Buttons.indexOf(\\'adam\\') > -1\\\" type=\\\"button\\\" class=\\\"btn btn-default icon-field-button\\\" ng-disabled=\\\"to.disabled\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.AdamUploadLabel\\' | translate }}\\\" ng-click=\\\"vm.toggleAdam()\\\">\\r\\n                        <i class=\\\"eav-icon-apple\\\"></i>\\r\\n                    </button>\\r\\n                    <button ng-if=\\\"to.settings[\\'merged\\'].Buttons.indexOf(\\'page\\') > -1\\\" type=\\\"button\\\" class=\\\"btn btn-default icon-field-button\\\" ng-disabled=\\\"to.disabled\\\" uib-tooltip=\\\"{{\\'Edit.Fields.Hyperlink.Default.PageLabel\\' | translate }}\\\" ng-click=\\\"vm.openPageDialog()\\\">\\r\\n                        <i class=\\\"eav-icon-sitemap\\\"></i>\\r\\n                    </button>\\r\\n                    <button ng-if=\\\"to.settings[\\'merged\\'].Buttons.indexOf(\\'more\\') > -1\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" class=\\\"btn btn-default uib-dropdown-toggle icon-field-button\\\" uib-dropdown-toggle ng-disabled=\\\"to.disabled\\\">\\r\\n                        <i class=\\\"eav-icon-options\\\"></i>\\r\\n                    </button>\\r\\n                </span>\\r\\n                <ul class=\\\"dropdown-menu pull-right\\\" uib-dropdown-menu role=\\\"menu\\\">\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowAdam\\\"><a class=\\\"dropzone-adam\\\" ng-click=\\\"vm.toggleAdam(false)\\\" href=\\\"javascript:void(0);\\\"><i class=\\\"eav-icon-apple\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuAdam\\\"></span></a></li>\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowPagePicker\\\"><a ng-click=\\\"vm.openPageDialog()\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"eav-icon-sitemap\\\" xicon=\\\"home\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuPage\\\"></span></a></li>\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowImageManager\\\"><a ng-click=\\\"vm.toggleAdam(true, true)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"eav-icon-file-image\\\" xicon=\\\"picture\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuImage\\\"></span></a></li>\\r\\n                    <li role=\\\"menuitem\\\" ng-if=\\\"to.settings[\\'merged\\'].ShowFileManager\\\"><a ng-click=\\\"vm.toggleAdam(true, false)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"eav-icon-file\\\" xicon=\\\"file\\\"></i> <span translate=\\\"Edit.Fields.Hyperlink.Default.MenuDocs\\\"></span></a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n            <div ng-if=\\\"vm.showPreview\\\" style=\\\"position: relative\\\">\\r\\n                <div style=\\\"position: absolute; z-index: 100; background: white; top: 10px; text-align: center; left: 0; right: 0;\\\">\\r\\n                    <img ng-src=\\\"{{vm.thumbnailUrl(2)}}\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <adam-hint class=\\\"field-hints\\\"></adam-hint>\\r\\n            <div ng-if=\\\"value.Value\\\" class=\\\"field-hints\\\">\\r\\n                <a href=\\\"{{vm.testLink}}\\\" target=\\\"_blank\\\" tabindex=\\\"-1\\\" tooltip-html=\\\"{{vm.tooltipUrl(vm.testLink)}}\\\">\\r\\n                    <span>&nbsp;... {{vm.testLink.substr(vm.testLink.lastIndexOf(\\\"/\\\"), 100)}}</span>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <!-- The ADAM file browser, requires the uploader wrapped around it -->\\r\\n        <adam-browser content-type-name=\\\"to.header.ContentTypeName\\\"\\r\\n                      entity-guid=\\\"to.header.Guid\\\"\\r\\n                      field-name=\\\"options.key\\\"\\r\\n                      auto-load=\\\"false\\\"\\r\\n                      folder-depth=\\\"0\\\"\\r\\n                      sub-folder=\\\"to.settings[\\'merged\\'].Paths\\\"\\r\\n                      update-callback=\\\"vm.setValue\\\"\\r\\n                      register-self=\\\"vm.registerAdam\\\"\\r\\n                      adam-mode-config=\\\"vm.adamModeConfig\\\"\\r\\n                      ng-disabled=\\\"to.disabled\\\"\\r\\n                      file-filter=\\\"to.settings[\\'merged\\'].FileFilter\\\"></adam-browser>\\r\\n\\r\\n        <!-- the preview of the uploader -->\\r\\n        <dropzone-upload-preview></dropzone-upload-preview>\\r\\n\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/hyperlink/hyperlink-library.html\",\"<div>\\r\\n    <div class=\\\"dropzone\\\">\\r\\n        <!-- The ADAM file browser, requires the uploader wrapped around it -->\\r\\n        <adam-browser\\r\\n            content-type-name=\\\"to.header.ContentTypeName\\\"\\r\\n            entity-guid=\\\"to.header.Guid\\\"\\r\\n            field-name=\\\"options.key\\\"\\r\\n            auto-load=\\\"true\\\"\\r\\n            sub-folder=\\\"\\\"\\r\\n            folder-depth=\\\"to.settings.merged.FolderDepth\\\"\\r\\n            metadata-content-types=\\\"to.settings.merged.MetadataContentTypes\\\"\\r\\n            allow-assets-in-root=\\\"to.settings.merged.allowAssetsInRoot\\\"\\r\\n            enable-select=\\\"false\\\"\\r\\n            update-callback=\\\"vm.setValue\\\"\\r\\n            register-self=\\\"vm.registerAdam\\\"\\r\\n            adam-mode-config=\\\"vm.adamModeConfig\\\">\\r\\n        </adam-browser>\\r\\n\\r\\n\\r\\n        <!-- the preview of the uploader -->\\r\\n        <dropzone-upload-preview></dropzone-upload-preview>\\r\\n\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/string/string-font-icon-picker.html\",\"<div>\\r\\n    <div uib-dropdown uib-keyboard-nav auto-close=\\\"outsideClick\\\" is-open=\\\"vm.selectorIsOpen\\\">\\r\\n        <div class=\\\"thumbnail-before-input icon-preview\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"\\\" uib-tooltip=\\\"{{value.Value}}\\\" uib-dropdown-toggle>\\r\\n                <i class=\\\"{{vm.previewPrefix}} {{value.Value}}\\\" ng-show=\\\"value.Value\\\"></i>\\r\\n                <span ng-show=\\\"!value.Value\\\">&nbsp;&nbsp;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"input-group\\\" uib-dropdown-toggle>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-lg\\\" ng-model=\\\"value.Value\\\" ng-disabled=\\\"false\\\" >\\r\\n        </div>\\r\\n        <!-- the search ui -->\\r\\n        <ul class=\\\"dropdown-menu icons-menu-columns\\\" role=\\\"menu\\\" uib-dropdown-menu>\\r\\n            <li class=\\\"input-group\\\">\\r\\n                <span class=\\\"input-group-addon btn-default btn\\\" ng-click=\\\"vm.selectorIsOpen = false; value.Value = \\'\\'\\\">\\r\\n                    <i class=\\\"eav-icon-cancel\\\"></i>\\r\\n                </span>\\r\\n                <input type=\\\"search\\\" ng-model=\\\"vm.iconFilter\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"search...\\\" />\\r\\n            </li>\\r\\n\\r\\n            <li ng-repeat=\\\"icn in vm.icons\\\" role=\\\"menuitem\\\"\\r\\n                ng-show=\\\"icn.class.indexOf(vm.iconFilter) !== -1\\\">\\r\\n                <a ng-click=\\\"vm.setIcon(icn.class)\\\" xng-click=\\\"value.Value = icn.class; vm.selectorIsOpen = false;\\\">\\r\\n                    <i class=\\\"{{vm.previewPrefix}} {{icn.class}}\\\"></i> <span uib-tooltip=\\\"{{icn.class}}\\\">...{{icn.class.substring(vm.prefix.length-1,25)}}</span>\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div ng-if=\\\"vm.debug.on\\\">Infos: found {{vm.icons.length}} items for prefix \\\"{{vm.prefix}}\\\" and will use \\\"{{vm.previewPrefix}}\\\" as a preview class. Selected is \\\"{{value.Value}}\\\" and files are: {{vm.files}}</div>\\r\\n</div> \");\n$templateCache.put(\"fields/string/string-template-picker.html\",\"<div>\\r\\n    <div class=\\\"input-group\\\">\\r\\n\\r\\n        <select class=\\\"form-control input-material material\\\"\\r\\n                ng-model=\\\"value.Value\\\"\\r\\n                ng-disabled=\\\"!readyToUse()\\\">\\r\\n            <option value=\\\"\\\">(no file selected)</option>\\r\\n            <option ng-repeat=\\\"item in templates | isValidFile:file.ext\\\"\\r\\n                    ng-selected=\\\"{{item == value.Value}}\\\"\\r\\n                    value=\\\"{{item}}\\\">\\r\\n                {{item}}\\r\\n            </option>\\r\\n        </select>\\r\\n        <span class=\\\"input-group-btn\\\" style=\\\"vertical-align: top;\\\">\\r\\n            <button class=\\\"btn btn-default icon-field-button\\\" type=\\\"button\\\" ng-click=\\\"add()\\\" ng-disabled=\\\"!readyToUse()\\\">\\r\\n                <span class=\\\"eav-icon-plus\\\"></span>\\r\\n            </button>\\r\\n        </span>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/string/string-wysiwyg-adv.html\",\"<div>\\r\\n    this would be an advanced, configurable WYSIWYG. It does not exist yet :). \\r\\n</div>\");\n$templateCache.put(\"fields/string/string-wysiwyg-dnn.html\",\"<iframe style=\\\"width:100%; border: 0;\\\" web-forms-bridge=\\\"vm.bridge\\\" bridge-type=\\\"wysiwyg\\\" bridge-sync-height=\\\"true\\\"></iframe>\");\n$templateCache.put(\"fields/string/string-wysiwyg-tinymce.html\",\"<div>\\r\\n    <div class=\\\"dropzone\\\">\\r\\n        <div> <!-- needed because after a refresh, the editor can\\'t be placed at the same location -->\\r\\n            <div ui-tinymce=\\\"tinymceOptions\\\" ng-model=\\\"value.Value\\\" class=\\\"field-string-wysiwyg-mce-box\\\"></div>\\r\\n        </div>\\r\\n\\r\\n        <!-- the ADAM file browser requires the uploader wrapped around it -->\\r\\n        <adam-browser content-type-name=\\\"to.header.ContentTypeName\\\"\\r\\n                      entity-guid=\\\"to.header.Guid\\\"\\r\\n                      field-name=\\\"options.key\\\"\\r\\n                      auto-load=\\\"false\\\"\\r\\n                      folder-depth=\\\"0\\\"\\r\\n                      sub-folder=\\\"\\\"\\r\\n                      update-callback=\\\"vm.setValue\\\"\\r\\n                      register-self=\\\"vm.registerAdam\\\"\\r\\n                      show-images-only=\\\"vm.adamModeImage\\\"\\r\\n                      ng-disabled=\\\"to.disabled\\\" adam-mode-config=\\\"vm.adamModeConfig\\\"></adam-browser>\\r\\n\\r\\n        <!-- dummy item to set focus on in script-->\\r\\n        <span id=\\\"dummyfocus\\\" tabindex=\\\"-1\\\"></span>\\r\\n\\r\\n        <!-- the preview of the uploader -->\\r\\n        <dropzone-upload-preview></dropzone-upload-preview>\\r\\n        <adam-hint class=\\\"field-hints\\\"></adam-hint>\\r\\n\\r\\n    </div>\\r\\n</div>\");}]);"],"sourceRoot":"/source/"}