{"version":3,"sources":["inpage-dialogs.min.js"],"names":["processInstallMessage","event","modId","progressIndicator","$http","regExToCheckOrigin","test","origin","console","error","data","JSON","parse","Number","moduleId","action","packages","packagesDisplayNames","i","length","displayName","confirm","show","label","runOneInstallJob","resizeIFrame","height","document","getElementById","style","currentPackage","log","get","params","packageUrl","url","then","response","alert","window","top","location","reload","xhr","errorMessage","status","responseText","messages","Message","angular","module","config","$translatePartialLoaderProvider","addPart","factory","getSelectableApps","setAppId","appId","getSelectableContentTypes","result","forEach","value","key","Label","Metadata","Name","getSelectableTemplates","gettingStartedUrl","dialog","vm","iframe","frameElement","dialogContainer","parent","sxc","contentBlock","manage","dashInfo","getAdditionalDashboardConfig","controller","$scope","$interval","moduleApiService","AppInstanceId","$filter","$q","$window","$translate","$sce","contentBlockLink","enableProgressIndicator","updater","cViewWithoutContent","cAppActionImport","realScope","svc","this","apps","contentTypes","templates","wrapper","di","isContentApp","isContent","supportsAjax","showAdvanced","user","canDesign","templateId","undoTemplateId","contentTypeId","undoContentTypeId","savedAppId","showRemoteInstaller","remoteInstallerUrl","loading","filteredTemplates","condition","IsHidden","extend","ContentTypeStaticName","reloadTemplatesAndContentTypes","getContentTypes","getTemplates","all","res","unhideUsedContentType","filter","found","item","StaticName","TemplateId","tmpl","le","instant","push","$watch","newTemplateId","oldTemplateId","renderTemplate","persistTemplate","newContentTypeId","oldContentTypeId","firstTemplateId","newAppId","oldAppId","appImport","newApp","AppId","SupportsAjaxReload","reInitAll","manageApps","run","appSettings","cancelTemplateChange","_cancelTemplateChange","reloadAndReInitialize","appStore","open","stateChange","undefined","templateChooserVisible","promises","loadApps","externalInstaller","showIfConfigIsEmpty","showAutoInstaller","appCount","setup","configureCallback","addEventListener","trustAsResourceUrl","toggle","activate","$templateCache","put"],"mappings":"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","file":"inpage-dialogs.min.js","sourcesContent":["\r\n// note: this is code which still uses jQuery etc., so it's not really clean\r\n// because of this we're including it as simple code and not packaging it as a service quite yet...\r\n\r\nfunction processInstallMessage(event, modId, progressIndicator, $http) {\r\n    var regExToCheckOrigin = /^(http|https):\\/\\/((gettingstarted|[a-z]*)\\.)?(2sexycontent|2sxc)\\.org(\\/.*)?$/gi;\r\n    if (!regExToCheckOrigin.test(event.origin)) {\r\n        console.error(\"can't execute, wrong source domain\");\r\n        return;\r\n    }\r\n\r\n    // Data is sent as text because IE8 and 9 cannot send objects through postMessage\r\n    var data = JSON.parse(event.data);\r\n\r\n    modId = Number(modId);\r\n    // If message does not belong to this module, return\r\n    if (data.moduleId !== modId)\r\n        return;\r\n\r\n    if (data.action === \"install\") {\r\n        // var sf = $.ServicesFramework(modId);\r\n\r\n        var packages = data.packages;\r\n        var packagesDisplayNames = \"\";\r\n\r\n        // Loop all packages to install\r\n        for (var i = 0; i < packages.length; i++) {\r\n            packagesDisplayNames += \"- \" + packages[i].displayName + \"\\n\";\r\n        }\r\n\r\n        if (confirm(\"Do you want to install these packages?\\n\\n\"\r\n            + packagesDisplayNames + \"\\nThis could take 10 to 60 seconds per package, \"\r\n            + \"please don't reload the page while it's installing. \"\r\n            + \"You will see a message once it's done and progess is logged to the JS-console.\")) {\r\n\r\n            progressIndicator.show = true;\r\n            progressIndicator.label = \".....\";\r\n\r\n            runOneInstallJob(packages, 0, progressIndicator, $http);\r\n        }\r\n\r\n    }\r\n    else if (data.action === \"resize\")\r\n        resizeIFrame(modId, data.height);\r\n}\r\n\r\nfunction resizeIFrame(modId, height) {\r\n    document.getElementById(\"frGettingStarted\").style.height = (height + 10) + \"px\";\r\n}\r\n\r\nfunction runOneInstallJob(packages, i, progressIndicator, $http) {\r\n    var currentPackage = packages[i];\r\n    console.log(currentPackage.displayName + \"(\" + i + \") started\");\r\n    progressIndicator.label = currentPackage.displayName;\r\n    return $http.get(\"app/installer/installpackage\",\r\n        { params: { \"packageUrl\": currentPackage.url } })\r\n\r\n\r\n    .then(function (response) {\r\n        console.log(currentPackage.displayName + \"(\" + i + \") completed\");\r\n        if (i + 1 < packages.length) {\r\n            runOneInstallJob(packages, i + 1, progressIndicator, $http);\r\n        } else {\r\n            alert(\"Done installing. If you saw no errors, everything worked.\");\r\n            window.top.location.reload();\r\n        }\r\n    }, function (xhr) {\r\n        var errorMessage = \"Something went wrong while installing '\" + currentPackage.displayName + \"': \" + status;\r\n        if (xhr.responseText && xhr.responseText !== \"\") {\r\n            var response = JSON.parse(xhr.responseText);\r\n            if (response.messages)\r\n                errorMessage = errorMessage + \" - \" + response.messages[0].Message;\r\n            else if (response.Message)\r\n                errorMessage = errorMessage + \" - \" + response.Message;\r\n        }\r\n        errorMessage += \" (you might find more informations about the error in the DNN event log).\";\r\n        alert(errorMessage);\r\n    });\r\n}\n(function () {\r\n    var module = angular.module(\"2sxc.view\", [\r\n            \"2sxc4ng\",\r\n            \"EavAdminUi\", // dialog (modal) controller\r\n            \"pascalprecht.translate\",\r\n            \"SxcInpageTemplates\",\r\n            \"EavConfiguration\",\r\n            \"ui.bootstrap\"\r\n        ])\r\n        /*@ngInject*/\r\n        .config([\"$translatePartialLoaderProvider\", function ($translatePartialLoaderProvider) {\r\n            $translatePartialLoaderProvider.addPart(\"sxc-admin\");\r\n        }])\r\n    ;\r\n\r\n})();\n(function () {\r\n    var module = angular.module(\"2sxc.view\");\r\n\r\n    /*@ngInject*/\r\n    module.factory(\"moduleApiService\", [\"$http\", function ($http) {\r\n        return {\r\n\r\n            //saveTemplate: function (templateId, forceCreateContentGroup, newTemplateChooserState) {\r\n            //    return $http.get(\"View/Module/SaveTemplateId\", { params: {\r\n            //        templateId: templateId,\r\n            //        forceCreateContentGroup: forceCreateContentGroup,\r\n            //        newTemplateChooserState: newTemplateChooserState\r\n            //    } });\r\n            //},\r\n\r\n            //addItem: function(sortOrder) {\r\n            //    return $http.get(\"View/Module/AddItem\", { params: { sortOrder: sortOrder } });\r\n            //},\r\n\r\n            getSelectableApps: function() {\r\n                return $http.get(\"View/Module/GetSelectableApps\");\r\n            },\r\n\r\n            setAppId: function(appId) {\r\n                return $http.get(\"View/Module/SetAppId\", { params: { appId: appId } });\r\n            },\r\n\r\n            getSelectableContentTypes: function() {\r\n                return $http.get(\"View/Module/GetSelectableContentTypes\")\r\n                    .then(function(result) {\r\n                        if (result.data && result.data.length) {\r\n                            angular.forEach(result.data, function(value, key) {\r\n                                value.Label = (value.Metadata && value.Metadata.Label)\r\n                                    ? value.Metadata.Label\r\n                                    : value.Name;\r\n                            });\r\n                        }\r\n                        return result;\r\n                    });\r\n            },\r\n\r\n            getSelectableTemplates: function() {\r\n                return $http.get(\"View/Module/GetSelectableTemplates\");\r\n            },\r\n\r\n            //setTemplateChooserState: function(state) {\r\n            //    return $http.get(\"View/Module/SetTemplateChooserState\", { params: { state: state } });\r\n            //},\r\n\r\n            //renderTemplate: function(templateId, lang) {\r\n            //    return $http.get(\"View/Module/RenderTemplate\", { params: { templateId: templateId, lang: lang } });\r\n            //},\r\n\r\n            //changeOrder: function(sortOrder, destinationSortOrder) {\r\n            //    return $http.get(\"View/Module/ChangeOrder\",\r\n            //    { params: { sortOrder: sortOrder, destinationSortOrder: destinationSortOrder } });\r\n            //},\r\n\r\n            //publish: function(part, sortOrder) {\r\n            //    return $http.get(\"view/module/publish\", { params: { part: part, sortOrder: sortOrder } });\r\n            //},\r\n\r\n            //removeFromList: function(sortOrder) {\r\n            //    return $http.get(\"View/Module/RemoveFromList\", { params: { sortOrder: sortOrder } });\r\n            //},\r\n\r\n            gettingStartedUrl: function() {\r\n                return $http.get(\"View/Module/RemoteInstallDialogUrl\", { params: { dialog: \"gettingstarted\"} });\r\n            }\r\n        };\r\n    }]);\r\n\r\n})();\n(function () {\r\n    var module = angular.module(\"2sxc.view\");\r\n\r\n    /*@ngInject*/\r\n    module.factory(\"contentBlockLink\", function () {\r\n        return function (vm) {\r\n            // will generate an object necessary to communicate with the outer system\r\n            var iframe = window.frameElement;\r\n            iframe.vm = vm;\r\n\r\n            return {\r\n                dialogContainer: iframe,\r\n                window: window.parent, \r\n                sxc: iframe.sxc,\r\n                contentBlock: iframe.sxc.manage.contentBlock,\r\n                // getManageInfo: iframe.getManageInfo,\r\n                dashInfo: iframe.getAdditionalDashboardConfig\r\n            };\r\n        };\r\n    });\r\n\r\n    /*@ngInject*/\r\n    module.controller(\"TemplateSelectorCtrl\", [\"$scope\", \"$interval\", \"moduleApiService\", \"AppInstanceId\", \"sxc\", \"$filter\", \"$q\", \"$window\", \"$translate\", \"$sce\", \"contentBlockLink\", \"$http\", function ($scope, $interval, moduleApiService, AppInstanceId, sxc, $filter, $q, $window, $translate, $sce, contentBlockLink, $http) {\r\n        //#region constants\r\n        var cViewWithoutContent = \"_LayoutElement\"; // needed to differentiate the \"select item\" from the \"empty-is-selected\" which are both empty\r\n        var cAppActionManage = -2, cAppActionImport = -1, cAppActionCreate = -3;\r\n        //#endregion\r\n\r\n        var realScope = $scope;\r\n        var svc = moduleApiService;\r\n\r\n        //#region vm and basic values / variables attached to vm\r\n        var vm = this;\r\n        vm.apps = [];\r\n        vm.contentTypes = [];\r\n        vm.templates = [];\r\n        var wrapper = contentBlockLink(vm);\r\n\r\n        var di = vm.dashInfo = wrapper.dashInfo();\r\n        vm.isContentApp = di.isContent;\r\n        vm.supportsAjax = vm.isContentApp || di.supportsAjax;\r\n        vm.showAdvanced = di.user.canDesign;\r\n        vm.templateId = di.templateId;\r\n        vm.undoTemplateId = di.templateId;\r\n        vm.contentTypeId = di.contentTypeId;\r\n        vm.undoContentTypeId = vm.contentTypeId;\r\n\r\n        vm.appId = vm.dashInfo.appId !== 0 ? vm.dashInfo.appId : null;\r\n        vm.savedAppId = vm.dashInfo.appId;\r\n\r\n\r\n        vm.showRemoteInstaller = false;\r\n        vm.remoteInstallerUrl = \"\";\r\n\r\n        vm.loading = 0;\r\n        vm.progressIndicator = {\r\n            show: false,\r\n            label: \"...\"\r\n        };\r\n        //#endregion\r\n\r\n        //#region installer\r\n        function enableProgressIndicator() {\r\n            vm.progressIndicator.updater = $interval(function() {\r\n                // don't do anything, this is just to ensure the digest happens\r\n            }, 200);\r\n        }\r\n        //#endregion\r\n\r\n\r\n        vm.filteredTemplates = function (contentTypeId) {\r\n            if (vm.templates.length === 0)  // skip any filters if we don't have anything to go on yet\r\n                return vm.templates;\r\n\r\n            // filters for \"normal\" content - applies to everything\r\n            // note that if a template is hidden by config but is curretly used here, the UI thinks it's not hidden, so the filter won't break anything\r\n            var condition = { IsHidden: false };\r\n\r\n            // 2016-11-09 disable don't filter on app, because even in this case there may already be data stored which is viewspecific\r\n            // so it should only allow switching to views which have the same data-type\r\n            // Don't filter on App - so just return all\r\n            //if (!vm.isContentApp)\r\n            //    return vm.templates;\r\n            \r\n            // add more conditions if in Content-Mode (which has a type-selector)\r\n            if (vm.isContentApp)\r\n                condition = angular.extend(condition, {\r\n                    ContentTypeStaticName: (contentTypeId === cViewWithoutContent) ? \"\" : contentTypeId\r\n                });\r\n            var result = $filter(\"filter\")(vm.templates, condition, true);\r\n            return result;\r\n        };\r\n\r\n\r\n        vm.reloadTemplatesAndContentTypes = function() {\r\n\r\n            vm.loading++;\r\n            var getContentTypes = svc.getSelectableContentTypes();\r\n            var getTemplates = svc.getSelectableTemplates();\r\n\r\n            return $q.all([getContentTypes, getTemplates])\r\n                .then(function (res) {\r\n                    // map to view-model\r\n                    vm.contentTypes = res[0].data || [];\r\n                    vm.templates = res[1].data || [];\r\n\r\n                    // if the currently selected content-type/template is configured to hidden, \r\n                    // re-show it, so that it can be used in the selectors\r\n                    function unhideUsedContentType(filter) {\r\n                        var found = vm.contentTypes.filter(filter);\r\n                        if (found && found[0] && found[0].IsHidden) found[0].IsHidden = false;\r\n                    }\r\n                    unhideUsedContentType(function (item) { return item.StaticName === vm.contentTypeId; });\r\n                    unhideUsedContentType(function(item) { return item.TemplateId === vm.templateId; });\r\n\r\n                    // unhide the currently used template\r\n                    var tmpl = $filter(\"filter\")(vm.templates, { TemplateId: vm.templateId }, true);\r\n                    if (tmpl && tmpl[0]) tmpl[0].IsHidden = false;\r\n\r\n                    // Add option for no content type if there are templates without\r\n                    if ($filter(\"filter\")(vm.templates, { ContentTypeStaticName: \"\" }, true).length > 0) {\r\n                        var le = { StaticName: cViewWithoutContent, Name: $translate.instant(\"TemplatePicker.LayoutElement\"), IsHidden: false };\r\n                        le.Label = le.Name;\r\n                        vm.contentTypes.push(le);\r\n                    }\r\n\r\n                    // sort them now\r\n                    vm.contentTypes = $filter(\"orderBy\")(vm.contentTypes, \"Name\");\r\n\r\n                    vm.loading--;\r\n                });\r\n        };\r\n\r\n        realScope.$watch(\"vm.templateId\", function (newTemplateId, oldTemplateId) {\r\n            if (newTemplateId === oldTemplateId)\r\n                return;\r\n\r\n            // Content (ajax, don't save the changed value)\r\n            if (vm.supportsAjax)\r\n                return vm.renderTemplate(newTemplateId);\r\n\r\n            // ToDo: Not sure why we need to set this value before calling persistTemplate. Clean up\r\n            wrapper.contentBlock.templateId = vm.templateId;\r\n\r\n            // App\r\n            vm.persistTemplate(false)\r\n                .then(function() {\r\n                    return wrapper.window.location.reload(); //note: must be in a function, as the reload is a method of the location object\r\n                });\r\n        });\r\n\r\n        // Auto-set view-dropdown if content-type changed\r\n        realScope.$watch(\"vm.contentTypeId\", function (newContentTypeId, oldContentTypeId) {\r\n        \tif (newContentTypeId === oldContentTypeId)\r\n        \t\treturn;\r\n        \t// Select first template if contentType changed\r\n        \tvar firstTemplateId = vm.filteredTemplates(newContentTypeId)[0].TemplateId; \r\n        \tif (vm.templateId !== firstTemplateId && firstTemplateId !== null)\r\n        \t\tvm.templateId = firstTemplateId;\r\n        });\r\n\r\n        // Save/reload on app-change or show import-window\r\n        realScope.$watch(\"vm.appId\", function (newAppId, oldAppId) {\r\n            if (newAppId === oldAppId || newAppId === null)\r\n                return;\r\n\r\n            // special case: add app\r\n            if (newAppId === cAppActionImport) {\r\n                return vm.appImport();\r\n            }\r\n\r\n            // find new app specs\r\n            var newApp = $filter('filter')(vm.apps, { AppId: newAppId })[0];\r\n\r\n            svc.setAppId(newAppId)\r\n                .then(function() {\r\n                    if (newApp.SupportsAjaxReload) {\r\n                        vm.reInitAll(true); // special code to force app-change/reload\r\n                    } else\r\n                        wrapper.window.location.reload();\r\n                });\r\n        });\r\n\r\n        vm.manageApps = function() {    wrapper.sxc.manage.run(\"zone\");    };\r\n        vm.appSettings = function() {   wrapper.sxc.manage.run(\"app\");     };\r\n        vm.appImport = function() {   wrapper.sxc.manage.run(\"app-import\");     };\r\n\r\n        // Cancel and reset back to original state\r\n        vm.cancelTemplateChange = wrapper.contentBlock._cancelTemplateChange;\r\n\r\n        // store the template state to the server, optionally force create of content, and hide the selector\r\n        vm.persistTemplate = wrapper.contentBlock.persistTemplate;\r\n        vm.renderTemplate = wrapper.contentBlock.reload;  // just map to that method\r\n        vm.reInitAll = wrapper.contentBlock.reloadAndReInitialize;  // just map to that method\r\n\r\n        vm.appStore = function() {\r\n            window.open(\"http://2sxc.org/en/apps\");\r\n        };\r\n\r\n        // Optionally change the show state, then \r\n        // check if it should be shown and load/show\r\n        vm.show = function (stateChange) {\r\n            // todo 8.4 disabled this, as this info should never be set from here again...\r\n            if (stateChange !== undefined)  // optionally change the show-state\r\n                vm.dashInfo.templateChooserVisible = stateChange;\r\n\r\n            if (vm.dashInfo.templateChooserVisible) {\r\n                var promises = [];\r\n                if (vm.appId !== null) // if an app had already been chosen OR the content-app (always chosen)\r\n                    promises.push(vm.reloadTemplatesAndContentTypes()); \r\n\r\n                // if it's the app-dialog and the app's haven't been loaded yet...\r\n                if (!vm.isContentApp && vm.apps.length === 0)\r\n                    promises.push(vm.loadApps());\r\n                $q.all(promises).then(vm.externalInstaller.showIfConfigIsEmpty);\r\n            }\r\n        };\r\n\r\n        //#region some *Installer* helpers to show the i-frame and link up the ablity to then install stuff\r\n        vm.externalInstaller = {\r\n            // based on situation, decide if we should show the auto-install IFrame\r\n            showIfConfigIsEmpty: function () {\r\n                var showAutoInstaller = (vm.isContentApp) \r\n                    ? vm.templates.length === 0 \r\n                    : vm.appCount === 0;\r\n\r\n                if (showAutoInstaller)\r\n                    vm.externalInstaller.setup();\r\n            },\r\n\r\n            configureCallback: function setupCallback() {\r\n                window.addEventListener(\"message\", function forwardMessage(event) {\r\n                    processInstallMessage(event, AppInstanceId, vm.progressIndicator, $http); // this calls an external, non-angular method to handle resizing & installation...\r\n                }, false);\r\n            },\r\n\r\n            setup: function() {\r\n                svc.gettingStartedUrl().then(function (result) {\r\n                    if (result.data) {  // only show getting started if it's really still a blank system, otherwise the server will return null, then don't do anything\r\n                        vm.externalInstaller.configureCallback();\r\n                        vm.showRemoteInstaller = true;\r\n                        enableProgressIndicator();\r\n                        vm.remoteInstallerUrl = $sce.trustAsResourceUrl(result.data);\r\n                        console.log(result.data);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        //#endregion\r\n\r\n        // todo 8.4 - this should re-load state if re-shown\r\n        vm.toggle = function () {\r\n            if (vm.dashInfo.templateChooserVisible)\r\n                vm.cancelTemplateChange();\r\n            else {\r\n                vm.show(true);\r\n            }\r\n        };\r\n\r\n        vm.loadApps = function() {\r\n            return svc.getSelectableApps()\r\n                .then(function(data) {\r\n                    vm.apps = data.data;\r\n                    vm.appCount = data.data.length; // needed in the future to check if it shows getting started\r\n\r\n                    if (vm.showAdvanced) {\r\n                        vm.apps.push({ Name: \"TemplatePicker.Install\", AppId: cAppActionImport });\r\n                        //vm.apps.push({ Name: \"create your own app...\", AppId: cAppActionCreate }); // todo: i18n\r\n                        //vm.apps.push({ Name: \"manage apps...\", AppId: cAppActionManage }); // todo: i18n\r\n                    }\r\n                });\r\n        };\r\n\r\n        //#region initialize this\r\n\r\n        vm.activate = function() {\r\n            vm.show(true); \r\n        };\r\n\r\n        vm.activate();\r\n\r\n        //#endregion\r\n\r\n    }]);\r\n\r\n\r\n})();\nangular.module(\"SxcInpageTemplates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"template-selector/template-selector.html\",\"\\r\\n\\r\\n<div class=\\\"sc-selectors-wrapper\\\">\\r\\n    <div class=\\\"sc-selectors\\\">\\r\\n        <!-- App Selector - only relevant in App-Mode -->\\r\\n        <div ng-show=\\\"!vm.isContentApp\\\" style=\\\"overflow:hidden;\\\">\\r\\n            <select ng-model=\\\"vm.appId\\\" class=\\\"sc-selector-app input-lg pull-left\\\"\\r\\n                    ng-options=\\\"a.AppId as (a.Name.indexOf(\\'TemplatePicker.\\') === 0 ? \\'[+] \\' + (a.Name | translate) : a.Name) for a in vm.apps\\\"\\r\\n                    ng-disabled=\\\"vm.dashInfo.hasContent\\\">\\r\\n                <option value=\\\"\\\" ng-disabled=\\\"vm.appId != null\\\" translate=\\\"TemplatePicker.AppPickerDefault\\\"></option>\\r\\n            </select>\\r\\n            <span>\\r\\n                    <span ng-if=\\\"vm.showAdvanced && !vm.isContentApp\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\"\\r\\n                                ng-show=\\\"vm.appId != null\\\"\\r\\n                                ng-click=\\\"vm.appSettings();\\\"\\r\\n                                title=\\\"{{ \\'TemplatePicker.App\\' | translate }}\\\">\\r\\n                            <i class=\\\"icon-eav-settings\\\"></i>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\"\\r\\n                                ng-click=\\\"vm.appImport();\\\"\\r\\n                                title=\\\"{{ \\'TemplatePicker.Install\\' | translate }}\\\">\\r\\n                            <i class=\\\"icon-eav-plus\\\"></i>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\"\\r\\n                                ng-click=\\\"vm.appStore();\\\"\\r\\n                                title=\\\"{{ \\'TemplatePicker.Catalog\\' | translate }}\\\">\\r\\n                            <i class=\\\"icon-eav-cart-arrow-down\\\"></i>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\"\\r\\n                                ng-click=\\\"vm.manageApps();\\\"\\r\\n                                title=\\\"{{ \\'TemplatePicker.Zone\\' | translate }}\\\">\\r\\n                            <i class=\\\"icon-eav-manage\\\"></i>\\r\\n                        </button>\\r\\n\\r\\n                    </span>\\r\\n                </span>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- Content Type selector, only for Content-Mode -->\\r\\n        <select ng-show=\\\"vm.isContentApp\\\" ng-model=\\\"vm.contentTypeId\\\"\\r\\n                class=\\\"input-lg\\\"\\r\\n                ng-options=\\\"c.StaticName as c.Label for c in vm.contentTypes | filter: { IsHidden : false } | orderBy: \\'Label\\'\\\"\\r\\n                ng-disabled=\\\"vm.dashInfo.hasContent || vm.dashInfo.isList\\\">\\r\\n            <option ng-disabled=\\\"vm.contentTypeId != \\'\\'\\\" value=\\\"\\\" translate=\\\"TemplatePicker.ContentTypePickerDefault\\\"></option>\\r\\n        </select>\\r\\n\\r\\n        <!-- View / template selector -->\\r\\n        <div>\\r\\n            <select ng-show=\\\"vm.isContentApp ? vm.contentTypeId != 0 : (vm.savedAppId != null)\\\" \\r\\n                    x=\\\"( && vm.filteredTemplates().length > 1)\\\"\\r\\n                    ng-disabled=\\\"vm.templateId && vm.filteredTemplates().length <= 1\\\"\\r\\n                    class=\\\"input-lg pull-left\\\"\\r\\n                    ng-model=\\\"vm.templateId\\\"\\r\\n                    ng-options=\\\"t.TemplateId as t.Name for t in vm.filteredTemplates(vm.contentTypeId)\\\"></select>\\r\\n\\r\\n            <button ng-show=\\\"vm.templateId != null && vm.savedTemplateId != vm.templateId\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    ng-click=\\\"vm.persistTemplate(false, false);\\\"\\r\\n                    title=\\\"{{ \\'TemplatePicker.Save\\' | translate }}\\\"\\r\\n                    type=\\\"button\\\">\\r\\n                <i class=\\\"icon-eav-ok\\\"></i>\\r\\n            </button>\\r\\n            <button ng-show=\\\"vm.undoTemplateId != null\\\"\\r\\n                    class=\\\"btn btn-default\\\"\\r\\n                    ng-click=\\\"vm.cancelTemplateChange();\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    title=\\\"{{ \\'TemplatePicker.\\' + (vm.isContentApp ? \\'Cancel\\' : \\'Close\\') | translate }}\\\">\\r\\n                <i class=\\\"icon-eav-cancel\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"sc-loading\\\" ng-show=\\\"vm.loading\\\">\\r\\n        <i class=\\\"icon-eav-spinner animate-spin\\\"></i>\\r\\n    </div>\\r\\n\\r\\n    <!-- the auto-installer IFrame, with spinner and everything -->\\r\\n    <div style=\\\"position: relative;\\\" ng-if=\\\"vm.showRemoteInstaller\\\">\\r\\n        <iframe id=\\\"frGettingStarted\\\" ng-src=\\\"{{vm.remoteInstallerUrl}}\\\" width=\\\"100%\\\" height=\\\"300px\\\"></iframe>\\r\\n        <div class=\\\"sc-loading\\\" id=\\\"pnlLoading\\\" ng-if=\\\"vm.progressIndicator.show\\\">\\r\\n            <i class=\\\"icon-eav-spinner animate-spin\\\"></i>\\r\\n            <br/>\\r\\n            <br/>\\r\\n            <span class=\\\"sc-loading-label\\\">\\r\\n                    installing <span id=\\\"packageName\\\">{{vm.progressIndicator.label}}</span>\\r\\n                </span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\");}]);"],"sourceRoot":"/source/"}