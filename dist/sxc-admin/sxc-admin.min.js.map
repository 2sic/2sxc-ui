{"version":3,"sources":["sxc-admin.min.js"],"names":["MainController","eavAdminDialogs","eavConfig","appId","debugState","appDialogConfigSvc","$uibModalInstance","vm","this","debug","view","getDialogSettings","then","result","config","data","close","dismiss","$inject","angular","module","$translatePartialLoaderProvider","addPart","controller","AppSettingsController","appSettings","svc","items","liveList","ready","length","staticName","openConfig","edit","editPackage","permissions","openPermissions","metadataOfApp","AppListController","appsSvc","sxcDialogs","zoneId","$window","$translate","featuresConfigSvc","blankCallback","refresh","liveListReload","add","prompt","instant","create","tryToDelete","item","name","Name","id","Id","alert","manage","url","window","location","href","replace","RegExp","AppRoot","openTotal","featureConfigService","loadFeatures","featuresShow","features","Promise","resolve","getManageFeaturesUrl","response","indexOf","manageFeaturesUrl","error","console","log","addEventListener","event","origin","endsWith","featuresCallback","featuresString","JSON","stringify","saveFeatures","e","browseCatalog","open","openAppImport","CreateResolve","OpenModal","languages","openLanguages","preLoadAgGrid","$ocLazyLoad","load","DialogHostController","$2sxc","dialog","contentTypeName","initialDialog","closeThis","openEditItems","partOfPage","urlParams","get","publishing","openZoneMain","openAppMain","openReplaceContent","openManageContentList","parts","getUrl","openDevelop","openContentTypeFieldsOfItems","openContentItems","constant","filter","$sce","val","trustAsResourceUrl","text","trustAsHtml","ExportAppController","ExportAppService","activate","getAppInfo","AppInfo","exportApp","IsExporting","IncludeContentGroups","ResetAppGuid","exportGit","exportForVersionControl","$http","$q","getUrlPrefix","params","includeContentGroups","resetAppGuid","when","srvc","factory","ExportContentController","ExportContentService","$filter","getContentInfo","ExportScope","ContentInfo","exportContent","contentTypeIds","selectedContentTypes","map","templateIds","selectedTemplates","entityIds","selectedEntities","concat","ContentTypes","_export","entities","forEach","Entities","templates","Templates","TemplatesWithoutContentTypes","changeExportScope","newExportScope","Object","assign","scope","join","ImportAppController","ImportAppService","importApp","IsImporting","ImportFile","ImportResult","file","method","headers","Content-Type","undefined","transformRequest","formData","FormData","append","AppId","ZoneId","File","ImportContentController","ImportContentService","importContent","FileReadDirective","sxcFileRead","link","element","attributes","bind","target","files","fileReader","FileReader","onload","$apply","Data","readAsDataURL","FileInputDirective","sxcFileInput","directive","IntroController","exportAll","LanguagesSettingsController","languagesSvc","toggle","save","ManageContentController","contentGroupSvc","header","contentGroup","EntityId","guid","Group","Guid","part","Part","index","Index","reload","getList","reloadHeader","getHeader","ok","saveList","editHeader","push","Add","Title","openItemEditWithEntityId","ReplaceContentController","options","getItems","Items","SelectedId","saveItem","convertToInt","parseInt","copySelected","DuplicateEntity","reloadAfterCopy","copy","keys","svcCreator","global","extend","implementLiveList","withSubfolders","path","content","post","contentTypeSvc","contentItemsSvc","promise","afterEvent","found","StaticName","openContentTypeFields","contentSvc","callback","entityId","resortedList","websiteRoot","parse","cultureCode","Code","enable","IsEnabled","$uibModal","closeCallback","totalPopup","service","browserFixUrlCaching","urlCheck","match","Date","getTime","openModalComponent","mask","run","$templateCache","put","TemplateListController","templatesSvc","openItemNew","openPermissionsForGuid","confirm","title","WebApiMainController","webApiSvc"],"mappings":"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","file":"sxc-admin.min.js","sourcesContent":["(function() { \r\n\r\n    MainController.$inject = [\"eavAdminDialogs\", \"eavConfig\", \"appId\", \"debugState\", \"appDialogConfigSvc\", \"$uibModalInstance\"];\r\n    angular.module(\"MainSxcApp\", [\r\n            \"EavConfiguration\", // config\r\n            \"SxcTemplates\", // inline templates\r\n            \"EavAdminUi\", // dialog (modal) controller\r\n            \"EavServices\", // multi-language stuff\r\n            \"SxcFilters\", // for inline unsafe urls\r\n            \"ContentTypesApp\",\r\n            \"PipelineManagement\",\r\n            \"TemplatesApp\",\r\n            \"ImportExport\",\r\n            \"AppSettingsApp\",\r\n            \"SystemSettingsApp\",\r\n            \"WebApiApp\",\r\n            \"SxcServices\"\r\n        ])\r\n        /*@ngInject*/\r\n        .config([\"$translatePartialLoaderProvider\", function ($translatePartialLoaderProvider) {\r\n            // ensure the language pack is loaded\r\n            $translatePartialLoaderProvider.addPart(\"sxc-admin\");\r\n        }])\r\n        .controller(\"AppMain\", MainController)\r\n    ;\r\n\r\n    /*@ngInject*/\r\n    function MainController(eavAdminDialogs, eavConfig, appId, debugState, appDialogConfigSvc, $uibModalInstance) {\r\n        var vm = this;\r\n        vm.debug = debugState;\r\n        vm.view = \"start\";\r\n\r\n        appDialogConfigSvc.getDialogSettings().then(function (result) {\r\n            vm.config = result.data;\r\n        });\r\n\r\n        vm.close = function () {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        };\r\n    }\r\n\r\n} ());\n(function() { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n  AppSettingsController.$inject = [\"appSettings\", \"appId\", \"eavAdminDialogs\", \"eavConfig\"];\r\n  angular.module('AppSettingsApp',\r\n      [\r\n        'EavConfiguration', // \r\n        'EavServices',\r\n        'SxcServices',\r\n        'SxcTemplates', // inline templates\r\n        'EavAdminUi', // dialog (modal) controller\r\n      ])\r\n    .controller('AppSettings', AppSettingsController);\r\n\r\n  /*@ngInject*/\r\n  function AppSettingsController(appSettings, appId, eavAdminDialogs, eavConfig) {\r\n    var vm = this;\r\n    var svc = appSettings(appId);\r\n    vm.items = svc.liveList();\r\n\r\n    vm.ready = function ready() {\r\n      return vm.items.length > 0;\r\n    };\r\n\r\n    // Open a content-type configuration dialog for a type (for settings / resources) \r\n    vm.config = function openConf(staticName) {\r\n      return svc.openConfig(staticName);\r\n    };\r\n\r\n    vm.edit = function edit(staticName) {\r\n      return svc.edit(staticName);\r\n    };\r\n\r\n    vm.editPackage = svc.editPackage;\r\n\r\n    vm.permissions = function permissions() {\r\n      return eavAdminDialogs.openPermissions(appId, eavConfig.metadataOfApp, 'number', appId);\r\n    };\r\n\r\n  }\r\n\r\n}());\n(function () { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    AppListController.$inject = [\"appsSvc\", \"eavAdminDialogs\", \"sxcDialogs\", \"eavConfig\", \"appSettings\", \"appId\", \"zoneId\", \"$uibModalInstance\", \"$window\", \"$translate\", \"featuresConfigSvc\"];\r\n    angular.module(\"AppsManagementApp\", [\r\n        \"EavServices\",\r\n        \"EavConfiguration\",\r\n        \"SxcServices\",\r\n        \"SxcTemplates\",         // inline templates\r\n        \"EavAdminUi\",           // dialog (modal) controller\r\n        \"SxcAdminUi\"\r\n    ])\r\n        /*@ngInject*/\r\n        .config([\"$translatePartialLoaderProvider\", function ($translatePartialLoaderProvider) {\r\n            // ensure the language pack is loaded\r\n            $translatePartialLoaderProvider.addPart(\"sxc-admin\");\r\n        }])\r\n\r\n        .controller(\"AppList\", AppListController)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function AppListController(appsSvc, eavAdminDialogs, sxcDialogs, eavConfig, appSettings, appId, zoneId, $uibModalInstance, $window, $translate, featuresConfigSvc) {\r\n        var vm = this;\r\n\r\n        function blankCallback() { }\r\n\r\n        var svc = appsSvc(zoneId);\r\n        vm.items = svc.liveList();\r\n        vm.refresh = svc.liveListReload;\r\n\r\n        vm.add = function add() {\r\n            var result = prompt($translate.instant(\"AppManagement.Prompt.NewApp\"));\r\n            if (result)\r\n                svc.create(result);\r\n        };\r\n\r\n\r\n        vm.tryToDelete = function tryToDelete(item) {\r\n            var result = prompt($translate.instant(\"AppManagement.Prompt.DeleteApp\", { name: item.Name, id: item.Id }));\r\n            //prompt(\"This cannot be undone. To really delete this app, type (or copy/past) the app-name here: Delete '\" + item.Name + \"' (\" + item.Id + \") ?\");\r\n            if (result === null)\r\n                return;\r\n            if (result === item.Name)\r\n                svc.delete(item.Id);\r\n            else\r\n                alert($translate.instant(\"AppManagement.Prompt.FailedDelete\"));\r\n        };\r\n\r\n        // note that manage MUST open in a new iframe, to give the entire application \r\n        // a new initial context. otherwise we get problems with AppId and similar\r\n        vm.manage = function manage(item) {\r\n            var url = window.location.href;\r\n            url = url\r\n                .replace(new RegExp(\"appid=[0-9]*\", \"i\"), \"appid=\" + item.Id) // note: sometimes it doesn't have an appid, so it's [0-9]* instead of [0-9]+\r\n                .replace(/approot=[^&]*/, \"approot=\" + item.AppRoot + \"/\")\r\n                .replace(\"dialog=zone\", \"dialog=app\");\r\n\r\n            sxcDialogs.openTotal(url, svc.liveListReload);\r\n        };\r\n\r\n\r\n        // when the user changes to the settings-tab\r\n        // it should load the features and show in the table\r\n        // call app-sys/system/features\r\n        var featureConfigService = featuresConfigSvc();\r\n        vm.loadFeatures = featureConfigService.liveList();\r\n\r\n\r\n        vm.featuresShow = true; // initially shows table with list of features and hides iframe (until manage Features button is clicked)\r\n\r\n        // todo STV\r\n        vm.features = function features() {\r\n\r\n            Promise.resolve(featureConfigService.getManageFeaturesUrl())\r\n            .then(function(response) {\r\n                var url = response.data;\r\n                if (url.indexOf(\"error: user needs host permissions\") === -1) {\r\n                    vm.manageFeaturesUrl = url;\r\n                } else {\r\n                    throw \"User needs host permissions!\";\r\n                }\r\n            }).then(function() {\r\n                vm.featuresShow = false;\r\n            }).catch(function(error) {\r\n                console.log('error', error);\r\n                alert(error);\r\n            });\r\n\r\n            // also register this \r\n        };\r\n\r\n        // event to receive message from iframe\r\n        $window.addEventListener('message', function(event) {\r\n            if (typeof (event.data) !== 'undefined') {\r\n                // handle message   \r\n                debugger;\r\n                console.log('stv: event', event);\r\n                if (event.origin.endsWith('2sxc.org') === false) {\r\n                    // something from an unknown domain, let's ignore it\r\n                    return;\r\n                }\r\n                vm.featuresCallback(event.data);\r\n            }\r\n        });\r\n\r\n        // todo STV\r\n        vm.featuresCallback = function (features) {\r\n            // this should await callbacks from the iframe\r\n            try {\r\n                // and if it gets a valid callback containing a json, it should send it to the server\r\n                var featuresString = JSON.stringify(features);\r\n                // call: app-sys/system/savefeatures\r\n                featureConfigService.saveFeatures(featuresString);                \r\n            } catch (e) {} \r\n            // you can find examples how this is done in the app/content installer, where the iframe also gives back data to the page\r\n        };\r\n\r\n\r\n        vm.browseCatalog = function () {\r\n            window.open(\"http://2sxc.org/apps\");\r\n        };\r\n\r\n\r\n        vm.import = function imp() {\r\n            sxcDialogs.openAppImport(vm.refresh);\r\n        };\r\n\r\n        // export is disabled for now, because it actually doesn't use the id given here, but the \r\n        // original appId - part of #887\r\n        vm.export = function exp(item) {\r\n            var resolve = eavAdminDialogs.CreateResolve({\r\n                appId: item.Id\r\n            });\r\n            return eavAdminDialogs.OpenModal(\r\n                \"importexport/export-app.html\",\r\n                \"ExportApp as vm\",\r\n                \"lg\",\r\n                resolve, blankCallback);\r\n        };\r\n\r\n        vm.languages = function languages() {\r\n            sxcDialogs.openLanguages(zoneId, vm.refresh);\r\n        };\r\n\r\n        vm.close = function () { $uibModalInstance.dismiss(\"cancel\"); };\r\n    }\r\n\r\n}());\n(function () {\r\n    DialogHostController.$inject = [\"zoneId\", \"appId\", \"items\", \"$2sxc\", \"dialog\", \"sxcDialogs\", \"contentTypeName\", \"eavAdminDialogs\", \"$ocLazyLoad\"];\r\n    angular\r\n        .module(\"DialogHost\", [\r\n            \"SxcAdminUi\",\r\n            \"EavAdminUi\",\r\n            \"oc.lazyLoad\",\r\n\r\n            \"eavEditEntity\" // new it must be added here, so it's available in the entire application - not good architecture, must fix someday\r\n        ])\r\n        .controller(\"DialogHost\", DialogHostController);\r\n\r\n    function preLoadAgGrid($ocLazyLoad) {\r\n        return $ocLazyLoad.load([\r\n            \"../lib/ag-grid/ag-grid.min.js\",\r\n            \"../lib/ag-grid/ag-grid.min.css\"\r\n        ]);\r\n    }\r\n\r\n    /*@ngInject*/\r\n    function DialogHostController(zoneId, appId, items, $2sxc, dialog, sxcDialogs, contentTypeName, eavAdminDialogs, $ocLazyLoad) {\r\n        var vm = this;\r\n        vm.dialog = dialog;\r\n        var initialDialog = dialog;\r\n\r\n        vm.close = function close() {\r\n            sxcDialogs.closeThis();\r\n        };\r\n\r\n        switch (initialDialog) {\r\n            case \"edit\":\r\n                eavAdminDialogs.openEditItems(items, vm.close, {\r\n                    partOfPage: $2sxc.urlParams.get('partOfPage'),\r\n                    publishing: $2sxc.urlParams.get('publishing')\r\n                });\r\n                break;\r\n            case \"zone\":\r\n                // this is the zone-config dialog showing mainly all the apps\r\n                sxcDialogs.openZoneMain(zoneId, vm.close);\r\n                break;\r\n            case \"app\":\r\n                // this opens the manage-an-app with content-types, views, etc.\r\n                preLoadAgGrid($ocLazyLoad).then(function () {\r\n                    sxcDialogs.openAppMain(appId, vm.close);\r\n                });\r\n                break;\r\n            case \"app-import\":\r\n                // this is the zone-config dialog showing mainly all the apps\r\n                sxcDialogs.openAppImport(vm.close);\r\n                break;\r\n            case \"replace\":\r\n                // this is the \"replace item in a list\" dialog\r\n                sxcDialogs.openReplaceContent(items[0], vm.close);\r\n                break;\r\n            case \"instance-list\":\r\n                sxcDialogs.openManageContentList(items[0], vm.close);\r\n                break;\r\n            case \"develop\":\r\n                // lazy load this to ensure the module is \"registered\" inside 2sxc\r\n                $ocLazyLoad.load([\r\n                        $2sxc.parts.getUrl(\"../sxc-develop/sxc-develop.min.js\")\r\n                    ])\r\n                    .then(function () {\r\n                        sxcDialogs.openDevelop(items[0], vm.close);\r\n                    });\r\n                break;\r\n            case \"contenttype\":\r\n                eavAdminDialogs.openContentTypeFieldsOfItems(items, vm.close);\r\n                break;\r\n            case \"contentitems\":\r\n                preLoadAgGrid($ocLazyLoad).then(function () {\r\n                    eavAdminDialogs.openContentItems(appId, contentTypeName, contentTypeName, vm.close);\r\n                });\r\n                break;\r\n            case \"pipeline-designer\":\r\n                // Don't do anything, as the template already loads the app in fullscreen-mode\r\n                // eavDialogs.editPipeline(appId, pipelineId, closeCallback);\r\n                break;\r\n            default:\r\n                alert(\"Trying to open an unknown dialog (\" + initialDialog + \"). Will close again.\");\r\n                vm.close();\r\n                throw \"Trying to open a dialog, don't know which one\";\r\n        }\r\n    }\r\n\r\n}());\n(function () { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    angular.module(\"SxcFilters\", [])\r\n        .constant(\"createdBy\", \"2sic\") // just a demo how to use constant or value configs in AngularJS\r\n        .constant(\"license\", \"MIT\") // these wouldn't be necessary, just added for learning exprience\r\n        /*@ngInject*/\r\n        .filter('trustAsResourceUrl', [\"$sce\", function ($sce) {\r\n            return function(val) {\r\n                return $sce.trustAsResourceUrl(val);\r\n            };\r\n        }])\r\n        /*@ngInject*/\r\n        .filter('trustHtml', [\"$sce\", function ($sce) {\r\n            return function(text) {\r\n                return $sce.trustAsHtml(text);\r\n            };\r\n        }]);\r\n\r\n} ());\n(function () { \r\n\r\n    angular.module(\"ImportExport\", [\r\n        \"EavConfiguration\", // Config\r\n        \"SxcTemplates\",     // Inline templates\r\n        \"EavAdminUi\",       // Dialog (modal) controller\r\n        \"EavServices\",      // Multi-language stuff\r\n        \"SxcServices\"\r\n    ]);\r\n} ());\n(function () {\r\n\r\n    ExportAppController.$inject = [\"ExportAppService\", \"eavAdminDialogs\", \"debugState\", \"eavConfig\", \"$uibModalInstance\"];\r\n    angular.module(\"ImportExport\")\r\n        .controller(\"ExportApp\", ExportAppController)\r\n        ;\r\n  \r\n\r\n    /*@ngInject*/\r\n    function ExportAppController(ExportAppService, eavAdminDialogs, debugState, eavConfig, $uibModalInstance) {\r\n        var vm = this;\r\n        vm.debug = debugState;\r\n\r\n        vm.IsExporting = false;\r\n\r\n        vm.IncludeContentGroups = false;\r\n        vm.ResetAppGuid = false;\r\n\r\n        vm.AppInfo = {};\r\n\r\n        vm.getAppInfo = getAppInfo;\r\n        vm.exportApp = exportApp;\r\n        vm.exportGit = exportGit;\r\n        vm.close = close;\r\n\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            getAppInfo();\r\n        }\r\n\r\n        // retrieve additional statistics & metadata about this app\r\n        function getAppInfo() {\r\n            return ExportAppService.getAppInfo().then(function (result) {\r\n                vm.AppInfo = result;\r\n            });\r\n        }\r\n\r\n        // this will call the export-app on the server\r\n        function exportApp() {\r\n            vm.IsExporting = true;\r\n            return ExportAppService.exportApp(vm.IncludeContentGroups, vm.ResetAppGuid).then(function () {\r\n                vm.IsExporting = false;\r\n            }).catch(function () {\r\n                vm.IsExporting = false;\r\n            });\r\n        }\r\n\r\n        // this will tell the server to export the data in the DB so it can be used in version control\r\n        function exportGit() {\r\n            vm.IsExporting = true;\r\n            return ExportAppService.exportForVersionControl(vm.IncludeContentGroups, vm.ResetAppGuid).then(function () {\r\n                vm.IsExporting = false;\r\n                alert(\"done - please check you '.data' folder\");\r\n            }).catch(function () {\r\n                vm.IsExporting = false;\r\n            });\r\n        }\r\n\r\n        function close() {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        }\r\n    }\r\n}());\n(function () {\r\n    ExportAppService.$inject = [\"appId\", \"zoneId\", \"eavConfig\", \"$http\", \"$q\"];\r\n    angular.module(\"ImportExport\")\r\n        .factory(\"ExportAppService\", ExportAppService)\r\n    ;\r\n\r\n\r\n    /*@ngInject*/\r\n    function ExportAppService(appId, zoneId, eavConfig, $http, $q) {\r\n        var srvc = {\r\n            getAppInfo: getAppInfo,\r\n            exportApp: exportApp,\r\n            exportForVersionControl: exportForVersionControl\r\n        };\r\n        return srvc;\r\n\r\n        function getAppInfo() {\r\n            return $http.get(eavConfig.getUrlPrefix(\"api\") + \"/app-sys/ImportExport/GetAppInfo\", { params: { appId: appId, zoneId: zoneId } }).then(function (result) { return result.data; });\r\n        }\r\n\r\n        function exportApp(includeContentGroups, resetAppGuid) {\r\n            window.open(eavConfig.getUrlPrefix(\"api\") + \"/app-sys/ImportExport/ExportApp?appId=\" + appId + \"&zoneId=\" + zoneId + \"&includeContentGroups=\" + includeContentGroups + \"&resetAppGuid=\" + resetAppGuid, \"_self\", \"\");\r\n            return $q.when(true);\r\n        }\r\n\r\n        function exportForVersionControl(includeContentGroups, resetAppGuid) {\r\n            // todo: put params in nice params object\r\n            return $http.get(\"app-sys/ImportExport/ExportForVersionControl?appId=\" + appId + \"&zoneId=\" + zoneId + \"&includeContentGroups=\" + includeContentGroups + \"&resetAppGuid=\" + resetAppGuid);\r\n\r\n        }\r\n    }\r\n}());\n(function () {\r\n\r\n    ExportContentController.$inject = [\"ExportContentService\", \"eavAdminDialogs\", \"eavConfig\", \"debugState\", \"$uibModalInstance\", \"$filter\"];\r\n    angular.module(\"ImportExport\")\r\n        .controller(\"ExportContent\", ExportContentController)\r\n        ;\r\n\r\n\r\n    /*@ngInject*/\r\n    function ExportContentController(ExportContentService, eavAdminDialogs, eavConfig, debugState, $uibModalInstance, $filter) {\r\n        var vm = Object.assign(this,\r\n            {\r\n                debug: debugState,\r\n                IsExporting: false,\r\n                ExportScope: \"2SexyContent\",\r\n                ContentInfo: null,\r\n                getContentInfo: getContentInfo,\r\n                exportContent: exportContent,\r\n                changeExportScope: changeExportScope,\r\n                close: close\r\n            });\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            getContentInfo();\r\n        }\r\n\r\n\r\n        function getContentInfo() {\r\n            return ExportContentService.getContentInfo(vm.ExportScope).then(function (result) { vm.ContentInfo = result; });\r\n        }\r\n\r\n        function exportContent() {     \r\n            var contentTypeIds = selectedContentTypes().map(function (item) { return item.Id; });\r\n            var templateIds = selectedTemplates().map(function (item) { return item.Id; });\r\n            var entityIds = selectedEntities().map(function (item) { return item.Id; });\r\n            entityIds = entityIds.concat(templateIds);\r\n            \r\n            vm.IsExporting = true;\r\n            return ExportContentService.exportContent(contentTypeIds, entityIds, templateIds).then(function () {\r\n                vm.IsExporting = false;\r\n            }).catch(function () {\r\n                vm.IsExporting = false;\r\n            });\r\n        }\r\n\r\n        function selectedContentTypes() {\r\n            return $filter(\"filter\")(vm.ContentInfo.ContentTypes, { _export: true });\r\n        }\r\n\r\n        function selectedEntities() {\r\n            var entities = [];\r\n            angular.forEach(vm.ContentInfo.ContentTypes, function (item) {\r\n                entities = entities.concat(\r\n                    $filter(\"filter\")(item.Entities, { _export: true })\r\n                );\r\n            });\r\n            return entities;\r\n        }\r\n\r\n        function selectedTemplates() {\r\n            // The ones with...\r\n            var templates = [];\r\n            angular.forEach(vm.ContentInfo.ContentTypes, function (item) {\r\n                templates = templates.concat(\r\n                    $filter(\"filter\")(item.Templates, { _export: true })\r\n                );\r\n            });\r\n            // ...and without content types\r\n            templates = templates.concat($filter(\"filter\")(vm.ContentInfo.TemplatesWithoutContentTypes, { _export: true }));\r\n            return templates;\r\n        }\r\n\r\n        function changeExportScope() {\r\n            var newExportScope = prompt(\"Enter an new dcope for export\");\r\n            if (newExportScope) {\r\n                vm.ExportScope = newExportScope;\r\n            }\r\n            return getContentInfo();\r\n        }\r\n\r\n        function close() {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        }\r\n    }\r\n\r\n}());\n(function () {\r\n\r\n    ExportContentService.$inject = [\"appId\", \"zoneId\", \"eavConfig\", \"$http\", \"$q\"];\r\n    angular.module(\"ImportExport\")\r\n        .factory(\"ExportContentService\", ExportContentService)\r\n    ;\r\n\r\n\r\n    /*@ngInject*/\r\n    function ExportContentService(appId, zoneId, eavConfig, $http, $q) {\r\n        return {\r\n            getContentInfo: getContentInfo,\r\n            exportContent: exportContent\r\n        };\r\n\r\n        function getContentInfo(scope) {\r\n            return $http.get(eavConfig.getUrlPrefix(\"api\") + \"/app-sys/ImportExport/GetContentInfo\", { params: { appId: appId, zoneId: zoneId, scope: scope || \"2SexyContent\" } }).then(function (result) { return result.data; });\r\n        }\r\n\r\n        function exportContent(contentTypeIds, entityIds, templateIds) {\r\n            window.open(eavConfig.getUrlPrefix(\"api\") + \"/app-sys/ImportExport/ExportContent?appId=\" + appId + \"&zoneId=\" + zoneId + \"&contentTypeIdsString=\" + contentTypeIds.join(\";\") + \"&entityIdsString=\" + entityIds.join(\";\") + \"&templateIdsString=\" + templateIds.join(\";\"), \"_self\", \"\");\r\n            return $q.when(true);\r\n        }\r\n\r\n    }\r\n\r\n}());\n(function () {\r\n\r\n    ImportAppController.$inject = [\"ImportAppService\", \"eavAdminDialogs\", \"eavConfig\", \"$uibModalInstance\"];\r\n    angular.module(\"ImportExport\")\r\n        .controller(\"ImportApp\", ImportAppController)\r\n    ;\r\n\r\n    /*@ngInject*/\r\n    function ImportAppController(ImportAppService, eavAdminDialogs, eavConfig, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.IsImporting = false;\r\n\r\n        vm.ImportFile = {};\r\n        vm.ImportResult = {};\r\n\r\n        vm.importApp = importApp;\r\n\r\n        vm.close = close;\r\n\r\n\r\n        function importApp() {\r\n            vm.IsImporting = true;\r\n            return ImportAppService.importApp(vm.ImportFile).then(function (result) {\r\n                vm.ImportResult = result.data;\r\n                vm.IsImporting = false;\r\n            }).catch(function (error) {\r\n                vm.IsImporting = false;\r\n            });\r\n        }\r\n\r\n        function close() {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        }\r\n    }\r\n}());\n(function () {\r\n\r\n    ImportAppService.$inject = [\"appId\", \"zoneId\", \"eavConfig\", \"$http\", \"$q\"];\r\n    angular.module(\"ImportExport\")\r\n        .factory(\"ImportAppService\", ImportAppService)\r\n    ;\r\n\r\n\r\n    function ImportAppService(appId, zoneId, eavConfig, $http, $q) {\r\n        var srvc = {\r\n            importApp: importApp,\r\n        };\r\n        return srvc;\r\n\r\n\r\n        function importApp(file) {\r\n            return $http({\r\n                method: \"POST\",\r\n                url: \"app-sys/ImportExport/ImportApp\",\r\n                headers: { \"Content-Type\": undefined },\r\n                transformRequest: function (data) {\r\n                    var formData = new FormData();\r\n                    formData.append(\"AppId\", data.AppId);\r\n                    formData.append(\"ZoneId\", data.ZoneId);\r\n                    formData.append(\"File\", data.File);\r\n                    return formData;\r\n                },\r\n                data: { AppId: appId, ZoneId: zoneId, File: file }\r\n            });\r\n        }\r\n    }\r\n}());\n(function () {\r\n\r\n    ImportContentController.$inject = [\"ImportContentService\", \"eavAdminDialogs\", \"eavConfig\", \"$uibModalInstance\"];\r\n    angular.module(\"ImportExport\")\r\n        .controller(\"ImportContent\", ImportContentController)\r\n    ;\r\n\r\n\r\n    /*@ngInject*/\r\n    function ImportContentController(ImportContentService, eavAdminDialogs, eavConfig, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.IsImporting = false;\r\n\r\n        vm.ImportFile = {};\r\n        vm.ImportResult = {};\r\n\r\n        vm.importContent = importContent;\r\n\r\n        vm.close = close;\r\n\r\n\r\n        function importContent() {\r\n            vm.IsImporting = true;\r\n            return ImportContentService.importContent(vm.ImportFile).then(function (result) {\r\n                vm.ImportResult = result.data;\r\n                vm.IsImporting = false;\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n                vm.IsImporting = false;\r\n            });\r\n        }\r\n\r\n        function close() {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        }\r\n    }\r\n}());\n(function () {\r\n\r\n    ImportContentService.$inject = [\"appId\", \"zoneId\", \"eavConfig\", \"$http\", \"$q\"];\r\n    angular.module(\"ImportExport\")\r\n        .factory(\"ImportContentService\", ImportContentService)\r\n    ;\r\n\r\n\r\n    /*@ngInject*/\r\n    function ImportContentService(appId, zoneId, eavConfig, $http, $q) {\r\n        var srvc = {\r\n            importContent: importContent\r\n        };\r\n        return srvc;\r\n\r\n\r\n        function importContent(file) {\r\n            return $http({\r\n                method: \"POST\",\r\n                url: \"app-sys/ImportExport/ImportContent\",\r\n                headers: { \"Content-Type\": undefined },\r\n                transformRequest: function (data) {\r\n                    var formData = new FormData();\r\n                    formData.append(\"AppId\", data.AppId);\r\n                    formData.append(\"ZoneId\", data.ZoneId);\r\n                    formData.append(\"File\", data.File);\r\n                    return formData;\r\n                },\r\n                data: { AppId: appId, ZoneId: zoneId, File: file }\r\n            });\r\n        }\r\n    }\r\n\r\n}());\n(function () {\r\n\r\n    angular.module(\"ImportExport\")\r\n        .directive(\"sxcFileRead\", FileReadDirective)\r\n        .directive(\"sxcFileInput\", FileInputDirective)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function FileReadDirective() {\r\n        return {\r\n            scope: {\r\n                sxcFileRead: \"=\"\r\n            },\r\n            link: function (scope, element, attributes) {\r\n\r\n                element.bind(\"change\", function (e) {\r\n                    var file = e.target.files[0];\r\n                    var fileReader = new FileReader();\r\n                    fileReader.onload = function (e) {\r\n                        scope.$apply(function () {\r\n                            scope.sxcFileRead = {\r\n                                Name: file.name,\r\n                                Data: e.target.result\r\n                            };\r\n                        });\r\n                    };\r\n                    fileReader.readAsDataURL(file);\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    function FileInputDirective() {\r\n        return {\r\n            scope: {\r\n                sxcFileInput: \"=\"\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                element.bind(\"change\", function (e) {\r\n                    scope.sxcFileInput = e.target.files[0];\r\n                    scope.$apply();\r\n                });\r\n            }\r\n        };\r\n    }\r\n}());\n(function () { \r\n\r\n    IntroController.$inject = [\"eavAdminDialogs\", \"eavConfig\", \"appId\"];\r\n    angular.module(\"ImportExport\")\r\n        .controller(\"ImportExportIntro\", IntroController)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function IntroController(eavAdminDialogs, eavConfig, appId) {\r\n        var vm = this;\r\n        function blankCallback() { }\r\n\r\n        vm.exportAll = function exp() {\r\n            var resolve = eavAdminDialogs.CreateResolve({\r\n                appId: appId\r\n            });\r\n            return eavAdminDialogs.OpenModal(\r\n                \"importexport/export-app.html\",\r\n                \"ExportApp as vm\",\r\n                \"lg\",\r\n                resolve, blankCallback);\r\n\r\n        };\r\n\r\n        vm.import = function () {\r\n            var resolve = eavAdminDialogs.CreateResolve({\r\n                appId: appId\r\n            });\r\n            return eavAdminDialogs.OpenModal(\r\n                \"importexport/import-content.html\",\r\n                \"ImportContent as vm\",\r\n                \"lg\",\r\n                resolve, blankCallback);\r\n        };\r\n\r\n        vm.export = function () {\r\n            var resolve = eavAdminDialogs.CreateResolve({\r\n                appId: appId\r\n            });\r\n            return eavAdminDialogs.OpenModal(\r\n                \"importexport/export-content.html\",\r\n                \"ExportContent as vm\",\r\n                \"lg\",\r\n                resolve, blankCallback);\r\n        };\r\n    }\r\n\r\n} ());\n(function () { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    LanguagesSettingsController.$inject = [\"languagesSvc\", \"eavConfig\", \"appId\"];\r\n    angular.module(\"SystemSettingsApp\", [\r\n        \"EavConfiguration\",     // \r\n        \"EavServices\",\r\n        \"SxcServices\",\r\n        \"SxcTemplates\",         // inline templates\r\n//        \"EavAdminUi\",           // dialog (modal) controller\r\n    ])\r\n\r\n        .controller(\"LanguageSettings\", LanguagesSettingsController)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function LanguagesSettingsController(languagesSvc, eavConfig, appId) {\r\n        var vm = this;\r\n        var svc = languagesSvc();\r\n        vm.items = svc.liveList();\r\n\r\n        // vm.refresh = \r\n        vm.ready = function ready() {\r\n            return vm.items.length > 0;\r\n        };\r\n\r\n        vm.toggle = svc.toggle;\r\n\r\n        vm.save = svc.save;\r\n    }\r\n\r\n} ());\n(function () {\r\n\r\n    ManageContentController.$inject = [\"appId\", \"item\", \"contentGroupSvc\", \"eavAdminDialogs\", \"$uibModalInstance\", \"$translate\"];\r\n    angular.module(\"ReorderContentApp\", [\r\n            \"SxcServices\",\r\n            \"EavAdminUi\" // dialog (modal) controller\r\n    ])\r\n\r\n        /*@ngInject*/\r\n        .config([\"$translatePartialLoaderProvider\", function ($translatePartialLoaderProvider) {\r\n            // ensure the language pack is loaded\r\n            $translatePartialLoaderProvider.addPart(\"inpage\");\r\n        }])\r\n\r\n        .controller(\"ManageContentList\", ManageContentController);\r\n\r\n    /*@ngInject*/\r\n    function ManageContentController(appId, item, contentGroupSvc, eavAdminDialogs, $uibModalInstance, $translate) {\r\n        var vm = this;\r\n        vm.items = [];\r\n        vm.header = {};\r\n        vm.contentGroup = {\r\n            id: item.EntityId,\r\n            guid: item.Group.Guid,\r\n            part: item.Group.Part,\r\n            index: item.Group.Index\r\n        };\r\n\r\n        var svc = contentGroupSvc(appId);\r\n\r\n        vm.reload = function () {\r\n            return svc.getList(vm.contentGroup).then(function (result) {\r\n                vm.items = result.data;\r\n            });\r\n        };\r\n        vm.reload();\r\n\r\n        vm.reloadHeader = function() {\r\n            return svc.getHeader(vm.contentGroup).then(function(result) {\r\n                vm.header = result.data;\r\n            });\r\n        };\r\n        vm.reloadHeader();\r\n\r\n        vm.ok = function ok() {\r\n            svc.saveList(vm.contentGroup, vm.items).then(vm.close);\r\n        };\r\n        \r\n        // note: not perfect yet - won't edit presentation of header\r\n        vm.editHeader = function editHeader() {\r\n            var items = [];\r\n            items.push({\r\n                Group: {\r\n                    Guid: vm.contentGroup.guid,\r\n                    Index: 0,\r\n                    Part: \"listcontent\",\r\n                    Add: vm.header.Id === \"0\"\r\n                },\r\n                Title: $translate.instant(\"EditFormTitle.ListContent\")\r\n            });\r\n            items.push({\r\n                Group: {\r\n                    Guid: vm.contentGroup.guid,\r\n                    Index: 0,\r\n                    Part: \"listpresentation\",\r\n                    Add: vm.header.Id === \"0\"\r\n                },\r\n                Title: $translate.instant(\"EditFormTitle.ListPresentation\")\r\n            });\r\n            eavAdminDialogs.openEditItems(items, vm.reloadHeader, { partOfPage: $2sxc.urlParams.get('partOfPage'), publishing: $2sxc.urlParams.get('publishing') });\r\n\r\n        };\r\n\r\n        vm.edit = function (id) {\r\n            if (id === null || id === 0)\r\n                return alert('no can do'); // todo: i18n\r\n            //var entities = $filter(\"filter\")($scope.availableEntities, { Value: itemGuid });\r\n            //var id = entities[0].Id;\r\n\r\n            eavAdminDialogs.openItemEditWithEntityId(id, vm.reload);\r\n        };\r\n\r\n        vm.close = function () { $uibModalInstance.dismiss(\"cancel\"); };\r\n\r\n    }\r\n\r\n} ());\n(function () { \r\n\r\n    ReplaceContentController.$inject = [\"appId\", \"item\", \"contentGroupSvc\", \"eavAdminDialogs\", \"$uibModalInstance\", \"$filter\"];\r\n    angular.module(\"ReplaceContentApp\", [\r\n            \"SxcServices\",\r\n            \"EavAdminUi\"         // dialog (modal) controller\r\n        ])\r\n        .controller(\"ReplaceDialog\", ReplaceContentController);\r\n\r\n    /*@ngInject*/\r\n    function ReplaceContentController(appId, item, contentGroupSvc, eavAdminDialogs, $uibModalInstance, $filter) {\r\n        var vm = this;\r\n        vm.options = [];\r\n        vm.item = {\r\n            id: item.EntityId,\r\n            guid: item.Group.Guid,\r\n            part: item.Group.Part,\r\n            index: item.Group.Index\r\n        };\r\n\r\n        var svc = contentGroupSvc(appId);\r\n\r\n        vm.reload = function() {\r\n            return svc.getItems(vm.item).then(function(result) {\r\n                vm.options = result.data.Items;\r\n                vm.item.id = result.data.SelectedId;\r\n            });\r\n        };\r\n        vm.reload();\r\n\r\n        vm.ok = function ok() {\r\n            svc.saveItem(vm.item).then(vm.close);\r\n        };\r\n        \r\n        vm.close = function () { $uibModalInstance.dismiss(\"cancel\"); };\r\n\r\n        vm.convertToInt = function (id) {\r\n            return parseInt(id);\r\n        };\r\n\r\n        vm.copySelected = function copySelected() {\r\n            var selectedId = vm.item.id;\r\n            var items = [\r\n                {\r\n                    //ContentTypeName: contentType,\r\n                    DuplicateEntity: vm.item.id\r\n                }\r\n            ];\r\n            eavAdminDialogs.openEditItems(items, vm.reloadAfterCopy);\r\n            // todo: on re-load a select would be nice\r\n        };\r\n\r\n        vm.reloadAfterCopy = function reloadAfterCopy(result) {\r\n            var copy = result.data;\r\n            vm.reload().then(function() {\r\n                vm.item.id = copy[Object.keys(copy)[0]]; // get id of first item\r\n            });\r\n        };\r\n    }\r\n\r\n} ());\n// Init the main eav services module\r\nangular.module(\"SxcServices\", [\r\n    \"ng\",                   // Angular for $http etc.\r\n    \"EavConfiguration\",     // global configuration\r\n\t\"EavServices\",\r\n    \"InitSxcParametersFromUrl\",\r\n    \"InitParametersFromUrl\"\r\n//    \"pascalprecht.translate\",\r\n]);\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"appDialogConfigSvc\", [\"appId\", \"$http\", function (appId, $http) {\r\n        var svc = {};\r\n\r\n        // this will retrieve an advanced getting-started url to use in an the iframe\r\n        svc.getDialogSettings = function gettingStartedUrl() {\r\n            return $http.get(\"app-sys/system/dialogsettings\", { params: { appId: appId } });\r\n        };\r\n        return svc;\r\n    }]);\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"appAssetsSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", function ($http, eavConfig, svcCreator) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(appId, global) {\r\n            var svc = {\r\n                params: {\r\n                    appId: appId,\r\n                    global: global || false\r\n                }\r\n            };\r\n\r\n            // ReSharper disable once UseOfImplicitGlobalInFunctionScope\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(\"app-sys/appassets/list\", { params: angular.extend({}, svc.params, { withSubfolders: true }) });\r\n            }));\r\n\r\n            svc.create = function create(path, content) {\r\n                return $http.post(\"app-sys/appassets/create\", { content: content || \"\" }, { params: angular.extend({}, svc.params, { path: path }) })\r\n                    .then(function(result) {\r\n                        if (result.data === false) // must check for an explicit false, to avoid undefineds\r\n                            alert(\"server reported that create failed - the file probably already exists\"); // todo: i18n\r\n                        return result;\r\n                    })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            //// delete, then reload, for now must use httpget because delete sometimes causes issues\r\n            //svc.delete = function del(id) {\r\n            //    return $http.get(\"app-sys/template/delete\", {params: {appId: svc.appId, Id: id }})\r\n            //        .then(svc.liveListReload);\r\n            //};\r\n            return svc;\r\n        };\r\n    }]);\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"appSettings\", [\"$http\", \"eavConfig\", \"svcCreator\", \"contentTypeSvc\", \"contentItemsSvc\", \"eavAdminDialogs\", \"$filter\", function ($http, eavConfig, svcCreator, contentTypeSvc, contentItemsSvc, eavAdminDialogs, $filter) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(appId) {\r\n            var svc = contentTypeSvc(appId, \"2SexyContent-App\");\r\n            //svc.appId = appId;\r\n            svc.promise = svc.liveListReload(); // try to load the data..\r\n\r\n            svc.openConfig = function openConf(staticName, afterEvent) {\r\n                return svc.promise.then(function() {\r\n                    var items = svc.liveList();\r\n                    var found = $filter(\"filter\")(items, { StaticName: staticName }, true);\r\n                    if (found.length !== 1)\r\n                        throw \"Found too many settings for the type \" + staticName;\r\n                    var item = found[0];\r\n                    return eavAdminDialogs.openContentTypeFields(item, afterEvent);\r\n                });\r\n            };\r\n\r\n            svc.edit = function edit(staticName, afterEvent) {\r\n                return svc.promise.then(function() {\r\n                    var contentSvc = contentItemsSvc(svc.appId, staticName);\r\n                    return contentSvc.liveListReload().then(function(result) {\r\n                        var found = result.data;\r\n                        if (found.length !== 1)\r\n                            throw \"Found too many settings for the type \" + staticName;\r\n                        var item = found[0];\r\n                        return eavAdminDialogs.openItemEditWithEntityId(item.Id, afterEvent);\r\n                    });\r\n                });\r\n            };\r\n\r\n            svc.editPackage = function editPackage(callback) {\r\n                return svc.edit(\"2SexyContent-App\", callback);\r\n            };\r\n\r\n            return svc;\r\n        };\r\n    }]);\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"appsSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", function ($http, eavConfig, svcCreator) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(zoneId) {\r\n            var svc = {\r\n                zoneId: zoneId\r\n            };\r\n            \r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(\"app-sys/system/apps\", { params: { zoneId: svc.zoneId } });\r\n            }));\r\n\r\n            svc.create = function create(name) {\r\n                return $http.post(\"app-sys/system/app\", {}, { params: { zoneId: svc.zoneId, name: name } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            // delete, then reload\r\n            // for unclear reason, the verb DELETE fails, so I'm using get for now\r\n            svc.delete = function del(appId) {\r\n                return $http.get(\"app-sys/system/deleteapp\", {params: { zoneId: svc.zoneId, appId: appId } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            return svc;\r\n        };\r\n    }]);\n\r\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"contentGroupSvc\", [\"$http\", function ($http) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(appId) {\r\n            var svc = {\r\n                getItems: function(item) {\r\n                    return $http.get(\"app-sys/contentgroup/replace\", { params: { appId: appId, guid: item.guid, part: item.part, index: item.index } });\r\n                },\r\n                saveItem: function(item) {\r\n                    return $http.post(\"app-sys/contentgroup/replace\", {}, { params: { guid: item.guid, part: item.part, index: item.index, entityId: item.id } });\r\n                },\r\n\r\n                getList: function (contentGroup) {\r\n                    return $http.get(\"app-sys/contentgroup/itemlist\", { params: { appId: appId, guid: contentGroup.guid } });\r\n                },\r\n\r\n                saveList: function (contentGroup, resortedList) {\r\n                    return $http.post(\"app-sys/contentgroup/itemlist\", resortedList, { params: { appId: appId, guid: contentGroup.guid } });\r\n                },\r\n\r\n                getHeader: function (contentGroup) {\r\n                    return $http.get(\"app-sys/contentgroup/header\", { params: { appId: appId, guid: contentGroup.guid } });\r\n                }\r\n\r\n\r\n            };\r\n\r\n            return svc;\r\n        };\r\n    }]);\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"featuresConfigSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", function ($http, eavConfig, svcCreator) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc() {\r\n            var svc = {};\r\n            \r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(\"app-sys/system/features\");\r\n            }));\r\n\r\n            // this will retrieve an advanced getting-started url to use in an the iframe\r\n            svc.getManageFeaturesUrl = function gettingManageFeaturesUrl() {\r\n                return $http.get(\"app-sys/system/managefeaturesurl\");\r\n            };\r\n\r\n            svc.saveFeatures = function saveFeatures(features) {\r\n                return $http.post(\"app-sys/system/SaveFeatures\", features )\r\n                    .then(function (result) {\r\n                        if (result.data === false) // must check for an explicit false, to avoid undefineds\r\n                            alert(\"server reported that save feature failed\"); // todo: i18n\r\n                        return result;\r\n                    })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            return svc;\r\n        };\r\n    }]);\n// By default, eav-controls assume that all their parameters (appId, etc.) are instantiated by the bootstrapper\r\n// but the \"root\" component must get it from the url\r\n// Since different objects could be the root object (this depends on the initial loader), the root-one must have\r\n// a connection to the Url, but only when it is the root\r\n// So the trick is to just include this file - which will provide values for the important attribute\r\n//\r\n// As of now, it supplies\r\n// - dialog -> which dialog to show\r\n// - tabid -> the url tab id\r\n// - items - list of items to edit\r\n\r\n//(function () {\r\n    angular.module(\"InitSxcParametersFromUrl\", [\"2sxc4ng\"])\r\n        /*@ngInject*/\r\n        .factory(\"dialog\", [\"$2sxc\", function ($2sxc) {\r\n            return $2sxc.urlParams.get(\"dialog\");\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"tabId\", [\"$2sxc\", function ($2sxc) {\r\n            return $2sxc.urlParams.get(\"tid\");\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"websiteRoot\", [\"$2sxc\", function ($2sxc) {\r\n            return $2sxc.urlParams.get(\"websiteroot\");\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"systemRoot\", [\"websiteRoot\", function (websiteRoot) {\r\n            return websiteRoot + \"desktopmodules/tosic_sexycontent/\";\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"portalRoot\", [\"$2sxc\", function ($2sxc) {\r\n            return $2sxc.urlParams.get(\"portalroot\");\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"appRoot\", [\"$2sxc\", function ($2sxc) {\r\n                return $2sxc.urlParams.get(\"appRoot\");\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"items\", [\"$2sxc\", function ($2sxc) {\r\n                var found = $2sxc.urlParams.get(\"items\");\r\n                if (found)\r\n                    return (found) ? JSON.parse(found) : null;\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"beta\", [\"$2sxc\", function ($2sxc) {\r\n            return $2sxc.urlParams.get(\"beta\");\r\n        }])\r\n    ;\r\n\r\n\r\n\r\n// }());\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"languagesSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", function ($http, eavConfig, svcCreator) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(appId) {\r\n            var svc = {\r\n                appId: appId\r\n            };\r\n\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(\"app-sys/system/getlanguages\");//, { params: { appId: svc.appId } });\r\n            }));\r\n\r\n            // delete, then reload\r\n            svc.toggle = function toggle(item) {\r\n                return $http.get(\"app-sys/system/switchlanguage\", {params: {cultureCode: item.Code, enable: !item.IsEnabled }})\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            svc.save = function save(item) {\r\n                return $http.get(\"app-sys/system/switchlanguage\", { params: { cultureCode: item.Code, enable: item.IsEnabled } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            return svc;\r\n        };\r\n    }]);\n/*  this file contains a service to handle open/close of dialogs\r\n*/\r\n\r\nangular.module(\"SxcAdminUi\", [\r\n    \"ng\",\r\n    \"ui.bootstrap\", // for the $uibModal etc.\r\n    \"MainSxcApp\",\r\n    \"AppsManagementApp\",\r\n    \"ReplaceContentApp\",\r\n    \"ReorderContentApp\",\r\n    \"SystemSettingsApp\",\r\n    \"SxcTemplates\",\r\n    \"SxcEditTemplates\",\r\n    \"sxcFieldTemplates\",\r\n    \"EavAdminUi\", // dialog (modal) controller\r\n])\r\n\r\n    /*@ngInject*/\r\n    .factory(\"sxcDialogs\", [\"$uibModal\", \"eavAdminDialogs\", function ($uibModal, eavAdminDialogs) {\r\n        var service = {\r\n            openZoneMain: openZoneMain,\r\n            openAppMain: openAppMain,\r\n            openAppImport: openAppImport,\r\n            openTotal: openTotal,\r\n            browserFixUrlCaching: browserFixUrlCaching,\r\n            closeThis: closeThis,\r\n            openReplaceContent: openReplaceContent,\r\n            openManageContentList: openManageContentList,\r\n            openDevelop: openDevelop,\r\n            openLanguages: openLanguages\r\n        };\r\n        \r\n        return service;\r\n        \r\n        // the portal-level dialog showing all apps\r\n        function openZoneMain(zoneId, closeCallback) {\r\n            var resolve = eavAdminDialogs.CreateResolve({ zoneId: zoneId });\r\n            return eavAdminDialogs.OpenModal(\"apps-management/apps.html\", \"AppList as vm\", \"xlg\", resolve, closeCallback);\r\n        }\r\n\r\n        // the app-level dialog showing all app content-items, templates, web-api etc.\r\n        function openAppMain(appId, closeCallback) {\r\n            var resolve = eavAdminDialogs.CreateResolve({ appId: appId });\r\n            return eavAdminDialogs.OpenModal(\"app-main/app-main.html\", \"AppMain as vm\", \"xlg\", resolve, closeCallback);\r\n        }\r\n\r\n        // the app-level dialog showing all app content-items, templates, web-api etc.\r\n        function openAppImport(closeCallback) {\r\n            var resolve = eavAdminDialogs.CreateResolve({}); // { appId: appId }});\r\n            return eavAdminDialogs.OpenModal(\"importexport/import-app.html\", \"ImportApp as vm\", \"lg\", resolve, closeCallback);\r\n        }\r\n\r\n        //#region Total-Popup open / close\r\n        function openTotal(url, callback) {\r\n            return $2sxc.totalPopup.open(service.browserFixUrlCaching(url), callback);\r\n        }\r\n\r\n        function browserFixUrlCaching(url) {\r\n            // this fixes a caching issue on IE and FF - see https://github.com/2sic/2sxc/issues/444\r\n            // by default I only need to do this on IE and FF, but to remain consistent, I always do it\r\n            var urlCheck = /(\\/ui.html\\?sxcver=[0-9\\.]*)((&time=)([0-9]*))*/gi;\r\n            if (url.match(urlCheck))\r\n                url = url.replace(urlCheck, \"$1&time=\" + new Date().getTime());\r\n            return url;\r\n        }\r\n\r\n        function closeThis() {\r\n            return $2sxc.totalPopup.closeThis();\r\n        }\r\n        //#endregion\r\n\r\n        // the replace-content item\r\n        function openReplaceContent(item, closeCallback) {\r\n            var resolve = eavAdminDialogs.CreateResolve({ item: item });\r\n            return eavAdminDialogs.OpenModal(\"replace-content/replace-content.html\", \"ReplaceDialog as vm\", \"lg\", resolve, closeCallback);\r\n        }\r\n\r\n        function openManageContentList(item, closeCallback) {\r\n            var resolve = eavAdminDialogs.CreateResolve({ item: item });\r\n            return eavAdminDialogs.OpenModal(\"manage-content-list/manage-content-list.html\", \"ManageContentList as vm\", \"\", resolve, closeCallback);\r\n        }\r\n\r\n        function openDevelop(item, closeCallback) {\r\n            eavAdminDialogs.openModalComponent(\"editor\", \"max\", { item: item }, closeCallback);\r\n            //var resolve = eavAdminDialogs.CreateResolve({ item: item });\r\n            //return eavAdminDialogs.OpenModal(\"source-editor/editor.html\", \"Editor as vm\", \"max\", resolve, closeCallback);\r\n        }\r\n\r\n        function openLanguages(zoneId, closeCallback) {\r\n            var resolve = eavAdminDialogs.CreateResolve({ zoneId: zoneId });\r\n            return eavAdminDialogs.OpenModal(\"language-settings/languages.html\", \"LanguageSettings as vm\", \"lg\", resolve, closeCallback);\r\n        }\r\n    }]);\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"templatesSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", function ($http, eavConfig, svcCreator) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(appId) {\r\n            var svc = {\r\n                appId: appId\r\n            };\r\n\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(\"app-sys/template/getall\", { params: { appId: svc.appId } });\r\n            }));\r\n            \r\n            // delete, then reload, for now must use httpget because delete sometimes causes issues\r\n            svc.delete = function del(id) {\r\n                return $http.get(\"app-sys/template/delete\", {params: {appId: svc.appId, Id: id }})\r\n                    .then(svc.liveListReload);\r\n            };\r\n            return svc;\r\n        };\r\n    }]);\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"webApiSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", function ($http, eavConfig, svcCreator) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(appId) {\r\n            var svc = {\r\n                appId: appId\r\n            };\r\n\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(\"app-sys/appassets/list\", { params: { appId: svc.appId, path: \"api\", mask: \"*.cs\" } });\r\n            }));\r\n\r\n            return svc;\r\n        };\r\n    }]);\nangular.module(\"SxcTemplates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app-main/app-main.html\",\"<div ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\">\\r\\n            <i icon=\\\"remove\\\"></i>\\r\\n        </button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"Main.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div>\\r\\n            <uib-tabset>\\r\\n                <uib-tab>\\r\\n                    <uib-tab-heading>\\r\\n                        <span uib-tooltip=\\\"{{\\'Main.Tab.GettingStarted\\' | translate }}\\\">\\r\\n                            <i icon=\\\"home\\\"></i> {{\\'Main.Tab.GS\\' | translate | trustHtml }}\\r\\n                        </span>\\r\\n                    </uib-tab-heading>\\r\\n\\r\\n                    <iframe ng-src=\\\"{{ vm.config.GettingStartedUrl | trustAsResourceUrl }}\\\" style=\\\"border: none; width: 100%; height: 500px\\\"></iframe>\\r\\n                    \\r\\n                    <div ng-hide=\\\"true\\\">\\r\\n                        original script, maybe we need it\\r\\n                        $(document).ready(function () {\\r\\n                        $(window).bind(\\\"resize\\\", function () {\\r\\n                        var GettingStartedFrame = $(\\\".sc-iframe-gettingstarted\\\");\\r\\n                        GettingStartedFrame.height($(window).height() - 50);\\r\\n                        });\\r\\n\\r\\n                        $(window).trigger(\\\"resize\\\");\\r\\n                        });\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n                <uib-tab select=\\\"vm.view=\\'content\\'\\\">\\r\\n                    <uib-tab-heading>\\r\\n                        <span icon=\\\"list\\\" uib-tooltip=\\\"{{\\'Main.Tab.ContentData\\' | translate }}\\\"></span> {{\\'Main.Tab.CD\\' | translate }}\\r\\n                    </uib-tab-heading>\\r\\n                    <div ng-if=\\\"vm.view == \\'content\\'\\\">\\r\\n                        <div ng-controller=\\\"List as vm\\\" ng-include=\\\"\\'content-types/content-types.html\\'\\\"></div>\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n\\r\\n                <uib-tab select=\\\"vm.view=\\'query\\'\\\" ng-if=\\\"!vm.config.IsContent\\\">\\r\\n                    <uib-tab-heading>\\r\\n                        <span icon=\\\"filter\\\" uib-tooltip=\\\"{{\\'Main.Tab.Query\\' | translate }}\\\"></span> {{\\'Main.Tab.Q\\' | translate }}\\r\\n                    </uib-tab-heading>\\r\\n                    <div ng-if=\\\"vm.view == \\'query\\'\\\">\\r\\n                        <div ng-controller=\\\"PipelineManagement as vm\\\" ng-include=\\\"\\'pipelines/pipelines.html\\'\\\"></div>\\r\\n\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n                <uib-tab select=\\\"vm.view=\\'view\\'\\\">\\r\\n                    <uib-tab-heading>\\r\\n                        <span icon=\\\"picture\\\" uib-tooltip=\\\"{{\\'Main.Tab.ViewsTemplates\\' | translate }}\\\"></span> {{\\'Main.Tab.VT\\' | translate }}\\r\\n                    </uib-tab-heading>\\r\\n                    <div ng-if=\\\"vm.view == \\'view\\'\\\">\\r\\n                        <div ng-controller=\\\"TemplateList as vm\\\" ng-include=\\\"\\'templates/templates.html\\'\\\"></div>\\r\\n\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <uib-tab select=\\\"vm.view=\\'webapi\\'\\\" ng-if=\\\"!vm.config.IsContent\\\">\\r\\n                    <uib-tab-heading>\\r\\n                        <span icon=\\\"flash\\\" uib-tooltip=\\\"{{\\'Main.Tab.WebApi\\' | translate }}\\\"></span> {{\\'Main.Tab.WA\\' | translate }}\\r\\n                    </uib-tab-heading>\\r\\n                    <div ng-if=\\\"vm.view == \\'webapi\\'\\\">\\r\\n                        <div ng-controller=\\\"WebApiMain as vm\\\" ng-include=\\\"\\'web-api/web-api.html\\'\\\"></div>\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n\\r\\n                <uib-tab select=\\\"vm.view=\\'app\\'\\\">\\r\\n                    <uib-tab-heading>\\r\\n                        <span icon=\\\"unchecked\\\" uib-tooltip=\\\"{{\\'Main.Tab.AppSettings\\' | translate }}\\\"></span> {{\\'Main.Tab.AS\\' | translate }}\\r\\n                    </uib-tab-heading>\\r\\n                    <div ng-if=\\\"vm.view == \\'app\\'\\\">\\r\\n                        <div ng-if=\\\"!vm.config.IsContent\\\">\\r\\n                            <div ng-controller=\\\"AppSettings as vm\\\" ng-include=\\\"\\'app-settings/app-settings.html\\'\\\"></div>\\r\\n                            <br />                            \\r\\n                        </div>\\r\\n                        <div ng-controller=\\\"ImportExportIntro as vm\\\" ng-include=\\\"\\'importexport/intro.html\\'\\\"></div>\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n                <uib-tab select=\\\"vm.view=\\'portal\\'\\\">\\r\\n                    <uib-tab-heading>\\r\\n                        <span icon=\\\"globe\\\" uib-tooltip=\\\"{{\\'Main.Tab.PortalLanguages\\' | translate }}\\\"></span> {{\\'Main.Tab.PL\\' | translate }}\\r\\n                    </uib-tab-heading>\\r\\n                    <div ng-if=\\\"vm.view == \\'portal\\'\\\">\\r\\n                        <h3 translate=\\\"Main.Portal.Title\\\"></h3>\\r\\n                        <div translate=\\\"Main.Portal.Intro\\\"></div>\\r\\n                        <div ng-controller=\\\"LanguageSettings as vm\\\" ng-include=\\\"\\'language-settings/languages.html\\'\\\"></div>\\r\\n\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n            </uib-tabset>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <show-debug-availability class=\\\"pull-right\\\"></show-debug-availability>\\r\\n</div>\");\n$templateCache.put(\"app-settings/app-settings.html\",\"    \\r\\n<div class=\\\"modal-body\\\">\\r\\n    <h3 translate=\\\"AppConfig.Title\\\"></h3>\\r\\n    <div translate=\\\"AppConfig.Intro\\\"></div>\\r\\n\\r\\n    <div class=\\\"clearfix\\\">\\r\\n        <div class=\\\"pull-left btn-group-vertical\\\">\\r\\n            <button uib-tooltip=\\\"{{ \\'AppConfig.Settings.Edit\\' | translate }}\\\" ng-disabled=\\\"!vm.ready()\\\" ng-click=\\\"vm.edit(\\'App-Settings\\')\\\" class=\\\"btn btn-primary btn-square\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"pencil\\\"></i>\\r\\n            </button>\\r\\n            <button uib-tooltip=\\\"{{ \\'AppConfig.Settings.Config\\' | translate }}\\\" ng-disabled=\\\"!vm.ready()\\\" ng-click=\\\"vm.config(\\'App-Settings\\')\\\" class=\\\"btn btn-default btn-square\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"cog\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div style=\\\"margin-left: 50px\\\">\\r\\n            <h4 class=\\\"modal-title\\\" translate=\\\"AppConfig.Settings.Title\\\"></h4>\\r\\n            <div translate=\\\"AppConfig.Settings.Intro\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <div class=\\\"clearfix\\\">\\r\\n        <div class=\\\"pull-left btn-group-vertical\\\">\\r\\n            <button uib-tooltip=\\\"{{\\'AppConfig.Resources.Edit\\' | translate}}\\\" ng-disabled=\\\"!vm.ready()\\\" ng-click=\\\"vm.edit(\\'App-Resources\\')\\\" class=\\\"btn btn-square btn-primary\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"pencil\\\"></i>\\r\\n            </button>\\r\\n\\r\\n            <button uib-tooltip=\\\"{{\\'AppConfig.Resources.Config\\' | translate}}\\\" ng-disabled=\\\"!vm.ready()\\\" ng-click=\\\"vm.config(\\'App-Resources\\')\\\" class=\\\"btn btn-square btn-default\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"cog\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div style=\\\"margin-left: 50px\\\">\\r\\n            <h4 class=\\\"modal-title\\\" translate=\\\"AppConfig.Resources.Title\\\"></h4>\\r\\n            <div translate=\\\"AppConfig.Resources.Intro\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"pull-left btn-group-vertical\\\">\\r\\n            <button uib-tooltip=\\\"{{\\'AppConfig.Definition.Edit\\' | translate}}\\\" ng-disabled=\\\"!vm.ready()\\\" ng-click=\\\"vm.editPackage()\\\" class=\\\"btn btn-primary btn-square\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"cog\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div style=\\\"margin-left: 50px\\\">\\r\\n\\r\\n            <h4 class=\\\"modal-title\\\" translate=\\\"AppConfig.Definition.Title\\\"></h4>\\r\\n            <div translate=\\\"AppConfig.Definition.Intro\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n    \\r\\n    <div class=\\\"clearfix\\\">\\r\\n        <div class=\\\"pull-left btn-group-vertical\\\">\\r\\n            <button uib-tooltip=\\\"{{\\'AppConfig.Permissions.Edit\\' | translate}}\\\" ng-disabled=\\\"!vm.ready()\\\" ng-click=\\\"vm.permissions()\\\" class=\\\"btn btn-square btn-primary\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"user\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div style=\\\"margin-left: 50px\\\">\\r\\n            <h4 class=\\\"modal-title\\\" translate=\\\"AppConfig.Permissions.Title\\\"></h4>\\r\\n            <div translate=\\\"AppConfig.Permissions.Intro\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\");\n$templateCache.put(\"apps-management/apps.html\",\"<div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button icon=\\\"remove\\\" class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"AppManagement.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <uib-tabset>\\r\\n            <uib-tab>\\r\\n                <uib-tab-heading>\\r\\n                    <span uib-tooltip=\\\"{{\\'AppManagement.Tab.Apps\\' | translate }}\\\">\\r\\n                        <i icon=\\\"home\\\"></i> {{\\'AppManagement.Tab.Apps\\' | translate | trustHtml }}\\r\\n                    </span>\\r\\n                </uib-tab-heading>\\r\\n\\r\\n                <span class=\\\"btn-group\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.browseCatalog()\\\">\\r\\n                        <span icon=\\\"search\\\"></span> {{ \\'AppManagement.Buttons.Browse\\' | translate }}\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"vm.import()\\\">\\r\\n                        <span icon=\\\"import\\\" uib-tooltip=\\\"{{ \\'AppManagement.Buttons.Import\\' | translate }}\\\"></span>\\r\\n                    </button>\\r\\n\\r\\n                    <button type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"vm.add()\\\">\\r\\n                        <span icon=\\\"plus\\\" uib-tooltip=\\\"{{ \\'AppManagement.Buttons.Create\\' | translate }}\\\"></span>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"vm.refresh()\\\">\\r\\n                        <span icon=\\\"repeat\\\" uib-tooltip=\\\"{{ \\'AppManagement.Buttons.Reload\\' | translate }}\\\"></span>\\r\\n                    </button>\\r\\n                </span>\\r\\n                <table class=\\\"table table-hover\\\">\\r\\n                    <thead>\\r\\n                    <tr>\\r\\n                        <th translate=\\\"AppManagement.Table.Name\\\"></th>\\r\\n                        <th translate=\\\"AppManagement.Table.Folder\\\"></th>\\r\\n                        <!--<th translate=\\\"AppManagement.Table.Templates\\\"></th>-->\\r\\n                        <th> <span icon=\\\"eye-open\\\" uib-tooltip=\\\"{{ \\'AppManagement.Table.Show\\' | translate }}\\\"></span></th>\\r\\n                        <th translate=\\\"AppManagement.Table.Actions\\\"></th>\\r\\n                    </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                    <tr ng-repeat=\\\"item in vm.items | orderBy:\\'Title\\'\\\" ng-click=\\\"vm.manage(item)\\\">\\r\\n                        <td class=\\\"clickable\\\">\\r\\n                            <span uib-tooltip=\\\"\\r\\nId: {{item.Id}}\\r\\nGuid: {{item.Guid}}\\\">{{item.Name}}</span>\\r\\n                        </td>\\r\\n                        <td class=\\\"clickable\\\">{{item.Folder}}</td>\\r\\n                        <!--<td></td>-->\\r\\n                        <td><span icon=\\\"{{ item.IsHidden ? \\'eye-close\\' : \\'eye-open\\' }}\\\"></span> </td>\\r\\n                        <td stop-event=\\\"click\\\">\\r\\n                            <!--<button icon=\\\"cog\\\" ng-disabled=\\\"!item.IsApp\\\" type=\\\"button\\\" class=\\\"btn btn-xs\\\" ng-click=\\\"vm.config(item)\\\"></button>-->\\r\\n                            <!-- disabled export because there\\'s no good way to pass the app-id to the dialog with dependency injection - part of #887 -->\\r\\n                            <!--<button icon=\\\"export\\\" class=\\\"btn btn-xs\\\" type=\\\"button\\\" ng-click=\\\"vm.export(item)\\\"></button>-->\\r\\n                            <button icon=\\\"remove\\\" ng-disabled=\\\"{{!item.IsApp}}\\\" type=\\\"button\\\" class=\\\"btn btn-xs\\\" ng-click=\\\"vm.tryToDelete(item)\\\"></button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr ng-if=\\\"!vm.items.length\\\">\\r\\n                        <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n                    </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </uib-tab>\\r\\n            <uib-tab>\\r\\n                <uib-tab-heading>\\r\\n                    <span uib-tooltip=\\\"{{\\'AppManagement.Tab.Settings\\' | translate }}\\\">\\r\\n                        <i icon=\\\"home\\\"></i> {{\\'AppManagement.Tab.Settings\\' | translate | trustHtml }}\\r\\n                    </span>\\r\\n                </uib-tab-heading>\\r\\n\\r\\n                <span class=\\\"btn-group\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"vm.languages()\\\">\\r\\n                        <span icon=\\\"globe\\\" uib-tooltip=\\\"{{ \\'AppManagement.Buttons.Languages\\' | translate }}\\\"></span>\\r\\n                        {{ \\'AppManagement.Buttons.Languages\\' | translate }}\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"vm.features()\\\">\\r\\n                        <span icon=\\\"globe\\\" uib-tooltip=\\\"{{ \\'AppManagement.Buttons.Features\\' | translate }}\\\"></span>\\r\\n                        {{ \\'AppManagement.Buttons.Features\\' | translate }}\\r\\n                    </button>\\r\\n                </span>\\r\\n\\r\\n                <table class=\\\"table table-hover\\\" ng-show=\\\"vm.featuresShow\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Id</th>\\r\\n                            <th>Enabled</th>\\r\\n                            <th>Expires</th>\\r\\n                            <th>Public</th>\\r\\n                            <th>Ui</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr ng-repeat=\\\"item in vm.loadFeatures\\\">\\r\\n                            <td>{{item.id}}</td>\\r\\n                            <td>{{item.enabled}}</td>\\r\\n                            <td>{{item.expires}}</td>\\r\\n                            <td>{{item.public}}</td>\\r\\n                            <td>{{item.ui}}</td>\\r\\n                        </tr>\\r\\n                        <tr ng-if=\\\"!vm.loadFeatures.length\\\">\\r\\n                            <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n\\r\\n                <iframe ng-src=\\\"{{ vm.manageFeaturesUrl | trustAsResourceUrl }}\\\" ng-show=\\\"!vm.featuresShow\\\" style=\\\"border: none; width: 100%; height: 500px\\\"></iframe>\\r\\n\\r\\n                <!-- todo 2dm: icons & languages-->\\r\\n\\r\\n            </uib-tab>\\r\\n\\r\\n        </uib-tabset>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"importexport/export-app.html\",\"<div ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button icon=\\\"remove\\\" class=\\\"btn pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"ImportExport.ExportApp.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div translate=\\\"ImportExport.ExportApp.Intro\\\"></div>\\r\\n        <div translate=\\\"ImportExport.ExportApp.FurtherHelp\\\"></div>\\r\\n\\r\\n        <h5>{{\\\"ImportExport.ExportApp.Specifications.Title\\\" | translate}}</h5>\\r\\n        <ul>\\r\\n            <li>{{\\\"ImportExport.ExportApp.Specifications.AppName\\\" | translate}} {{vm.AppInfo.Name}}</li>\\r\\n            <li>{{\\\"ImportExport.ExportApp.Specifications.AppGuid\\\" | translate}} {{vm.AppInfo.Guid}}</li>\\r\\n            <li>{{\\\"ImportExport.ExportApp.Specifications.AppVersion\\\" | translate}} {{vm.AppInfo.Version}}</li>\\r\\n        </ul>\\r\\n\\r\\n        <h5>{{\\\"ImportExport.ExportApp.Content.Title\\\" | translate}}</h5>\\r\\n        <ul>\\r\\n            <li>{{vm.AppInfo.EntitiesCount}} {{\\\"ImportExport.ExportApp.Content.EntitiesCount\\\" | translate}}</li>\\r\\n            <li>{{vm.AppInfo.LanguagesCount}} {{\\\"ImportExport.ExportApp.Content.LanguagesCount\\\" | translate}}</li>\\r\\n            <li>{{vm.AppInfo.TemplatesCount}} {{\\\"ImportExport.ExportApp.Content.TemplatesCount\\\" | translate}} ({{\\\"ImportExport.ExportApp.Content.TokenTemplates\\\" | translate}} {{vm.AppInfo.HasTokenTemplates}}, {{\\\"ImportExport.ExportApp.Content.RazorTemplates\\\" | translate}} {{vm.AppInfo.HasRazorTemplates}})</li>\\r\\n            <li>{{vm.AppInfo.TransferableFilesCount}} {{\\\"ImportExport.ExportApp.Content.TransferableFilesCount\\\" | translate}}</li>\\r\\n            <li>{{vm.AppInfo.FilesCount}} {{\\\"ImportExport.ExportApp.Content.FilesCount\\\" | translate}}</li>\\r\\n        </ul>\\r\\n\\r\\n        <div>\\r\\n            <input ng-model=\\\"vm.IncludeContentGroups\\\" type=\\\"checkbox\\\" ng-disabled=\\\"vm.ResetAppGuid\\\" /> {{\\\"ImportExport.ExportApp.Options.IncludeContentGroups\\\" | translate}}\\r\\n        </div>\\r\\n        <div>\\r\\n            <input ng-model=\\\"vm.ResetAppGuid\\\" type=\\\"checkbox\\\" ng-disabled=\\\"vm.IncludeContentGroups\\\"/> {{\\\"ImportExport.ExportApp.Options.ResetAppGuid\\\" | translate}}\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary pull-left\\\" ng-click=\\\"vm.exportApp()\\\" translate=\\\"ImportExport.ExportApp.Commands.Export\\\" ng-disabled=\\\"vm.IsExporting\\\"></button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default pull-left\\\" ng-click=\\\"vm.exportGit()\\\"\\r\\n                translate=\\\"ImportExport.ExportApp.Commands.ExportForVersionControl\\\"\\r\\n                ng-disabled=\\\"vm.IsExporting\\\"\\r\\n                xxxng-show=\\\"vm.debug.on\\\"\\r\\n                ></button>\\r\\n    </div>\\r\\n    <show-debug-availability class=\\\"pull-right\\\"></show-debug-availability>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"importexport/export-content.html\",\"<div ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\">\\r\\n\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button icon=\\\"remove\\\" class=\\\"btn pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"ImportExport.ExportContent.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n         \\r\\n        <span class=\\\"btn-group\\\" ng-if=\\\"vm.debug.on\\\">\\r\\n            <button icon=\\\"record\\\" type=\\\"button\\\" class=\\\"btn btn-square\\\" ng-click=\\\"vm.changeExportScope()\\\"></button>\\r\\n        </span>\\r\\n\\r\\n        <div translate=\\\"ImportExport.ExportContent.Intro\\\"></div>\\r\\n        <div translate=\\\"ImportExport.ExportContent.FurtherHelp\\\"></div>\\r\\n\\r\\n        <h5 translate=\\\"ImportExport.ExportContent.ContentTypes.Title\\\"></h5>\\r\\n        <ul class=\\\"sc-export-content-list\\\">\\r\\n            <li ng-repeat=\\\"contentType in vm.ContentInfo.ContentTypes\\\">\\r\\n                <label ng-class=\\\"{ \\'active\\': contentType._export }\\\"><input type=\\\"checkbox\\\" ng-model=\\\"contentType._export\\\" /> {{contentType.Name}} ({{contentType.Id}})</label>\\r\\n                <div ng-if=\\\"contentType.Templates.length\\\" class=\\\"sc-export-content-list-inner\\\">\\r\\n                    <h6 translate=\\\"ImportExport.ExportContent.ContentTypes.Templates\\\"></h6>\\r\\n                    <ul>\\r\\n                        <li ng-repeat=\\\"template in contentType.Templates\\\">\\r\\n                            <label ng-class=\\\"{ \\'active\\': template._export }\\\"><input type=\\\"checkbox\\\" ng-model=\\\"template._export\\\" /> {{template.Name}} ({{template.Id}})</label>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <div ng-if=\\\"contentType.Entities.length\\\" class=\\\"sc-export-content-list-inner\\\">\\r\\n                    <h6 translate=\\\"ImportExport.ExportContent.ContentTypes.Entities\\\"></h6>\\r\\n                    <ul>\\r\\n                        <li ng-repeat=\\\"entity in contentType.Entities\\\">\\r\\n                            <label ng-class=\\\"{ \\'active\\': entity._export }\\\"><input type=\\\"checkbox\\\" ng-model=\\\"entity._export\\\" /> {{entity.Title}} ({{entity.Id}})</label>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n\\r\\n            </li>\\r\\n        </ul>\\r\\n\\r\\n        <h5 translate=\\\"ImportExport.ExportContent.TemplatesWithoutContentTypes.Title\\\"></h5>\\r\\n        <ul class=\\\"sc-export-content-list\\\">\\r\\n            <li ng-repeat=\\\"template in vm.ContentInfo.TemplatesWithoutContentTypes\\\">\\r\\n                <label ng-class=\\\"{ \\'active\\': template._export }\\\"><input type=\\\"checkbox\\\" ng-model=\\\"template._export\\\" /> {{template.Name}} ({{template.Id}})</label>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary pull-left\\\" ng-click=\\\"vm.exportContent()\\\" translate=\\\"ImportExport.ExportContent.Commands.Export\\\" ng-disabled=\\\"vm.IsExporting\\\"></button>\\r\\n    </div>    \\r\\n\\r\\n    <show-debug-availability class=\\\"pull-right\\\"></show-debug-availability>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<style>\\r\\n    .sc-export-content-list { list-style-type: none; margin: 0; padding: 0; border-top: 1px solid #DDD; }\\r\\n\\r\\n    .sc-export-content-list-inner { padding: 0 0 0 40px; }\\r\\n\\r\\n    .sc-export-content-list > li { margin: 0; padding: 0; border-bottom: 1px solid #DDD; font-weight: bold; }\\r\\n\\r\\n    .sc-export-content-list h6 { font-size: inherit; font-weight: bold; margin: 0; padding: 5px; }\\r\\n\\r\\n    .sc-export-content-list label { display: block; padding: 10px; margin: 0; font-size: inherit; font-weight: normal; }\\r\\n\\r\\n    .sc-export-content-list label:hover { background: #EEE; }\\r\\n    .sc-export-content-list label.active { background: #E6F7E7; }\\r\\n\\r\\n    .sc-export-content-list > li ul { list-style-type: none; margin: 0; padding: 0; }\\r\\n\\r\\n    .sc-export-content-list > li li { font-weight: normal; padding: 0; margin: 0; }\\r\\n</style>\");\n$templateCache.put(\"importexport/import-app.html\",\"<div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button icon=\\\"remove\\\" class=\\\"btn pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"ImportExport.ImportApp.Title\\\"></h3>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"sxc-spinner\\\" ng-show=\\\"vm.IsImporting\\\" class=\\\"sxc-import-spinner\\\"><i class=\\\"eav-icon-spinner animate-spin\\\"></i></div>\\r\\n\\r\\n    <!-- IMPORT -->\\r\\n    <div ng-if=\\\"!vm.ImportResult.Messages\\\">\\r\\n\\r\\n        <div class=\\\"modal-body\\\">\\r\\n\\r\\n            <div translate=\\\"ImportExport.ImportApp.Intro\\\"></div>\\r\\n            <div translate=\\\"ImportExport.ImportApp.FurtherHelp\\\"></div>\\r\\n            <br />\\r\\n\\r\\n            <span class=\\\"btn btn-default btn-file\\\">\\r\\n                <span ng-hide=\\\"vm.ImportFile.name\\\">{{\\\"ImportExport.ImportApp.Commands.SelectFile\\\" | translate}}</span>\\r\\n                <span ng-show=\\\"vm.ImportFile.name\\\">{{vm.ImportFile.name}}</span>\\r\\n                <input type=\\\"file\\\" sxc-file-input=\\\"vm.ImportFile\\\" />\\r\\n            </span>\\r\\n            <br />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary pull-left\\\" ng-click=\\\"vm.importApp()\\\" ng-disabled=\\\"!vm.ImportFile.name || vm.IsImporting\\\" translate=\\\"ImportExport.ImportApp.Commands.Import\\\"></button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- END IMPORT -->\\r\\n\\r\\n\\r\\n    <!-- RESULT -->\\r\\n    <div ng-if=\\\"vm.ImportResult.Messages\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div ng-if=\\\"vm.ImportResult.Succeeded\\\" class=\\\"sxc-message sxc-message-info\\\">\\r\\n                {{\\\"ImportExport.ImportContent.Messages.ImportSucceeded\\\" | translate}} <!-- (<a ng-click=\\\"vm.ImportResult._hideSuccessMessages = !vm.ImportResult._hideSuccessMessages\\\">{{\\\"ImportExport.ImportContent.Commands.ToggleSuccessMessages\\\" | translate}}</a>) -->\\r\\n            </div>\\r\\n            <div ng-if=\\\"!vm.ImportResult.Succeeded\\\" class=\\\"sxc-message sxc-message-error\\\">\\r\\n                {{\\\"ImportExport.ImportContent.Messages.ImportFailed\\\" | translate}}\\r\\n            </div>\\r\\n            <div ng-repeat=\\\"message in vm.ImportResult.Messages\\\" class=\\\"sxc-message\\\" ng-class=\\\"{ \\'sxc-message-warning\\': message.MessageType == 0, \\'sxc-message-success\\': message.MessageType == 1, \\'sxc-message-error\\': message.MessageType == 2, \\'sxc-message-success-hidden\\': vm.ImportResult._hideSuccessMessages }\\\">\\r\\n                {{message.Text}}\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- END RESULT -->\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n    .sxc-message { display: block; padding: 18px 18px; margin-bottom: 18px; border: 1px solid rgba(2, 139, 255, 0.2); border-radius: 3px; background: rgba(2,139,255,0.15); max-width: 980px; }\\r\\n\\r\\n    .sxc-message-success.sxc-message { background-color: rgba(0,255,0,0.15); border-color: rgba(0, 255, 0, 0.5); }\\r\\n    \\r\\n    .sxc-message-success.sxc-message-success-hidden { display: none; }\\r\\n    \\r\\n    .sxc-message-warning.sxc-message { background-color: rgba(255,255,0,0.15); border-color: #CDB21F; }\\r\\n\\r\\n    .sxc-message-error.sxc-message { background-color: rgba(255,0,0,0.15); border-color: rgba(255, 0, 0, 0.2); }\\r\\n</style>\");\n$templateCache.put(\"importexport/import-content.html\",\"<div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button icon=\\\"remove\\\" class=\\\"btn pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"ImportExport.ImportContent.Title\\\"></h3>\\r\\n    </div>\\r\\n\\r\\n    <div ng-show=\\\"true || vm.IsImporting\\\" class=\\\"sxc-import-spinner\\\"><i class=\\\"eav-icon-spinner animate-spin\\\"></i></div>\\r\\n\\r\\n    <!-- IMPORT -->\\r\\n    <div ng-if=\\\"!vm.ImportResult.Messages\\\">\\r\\n\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div translate=\\\"ImportExport.ImportContent.Intro\\\"></div>\\r\\n            <div translate=\\\"ImportExport.ImportContent.FurtherHelp\\\"></div>\\r\\n            <br />\\r\\n            <span class=\\\"btn btn-default btn-file\\\">\\r\\n                <span ng-hide=\\\"vm.ImportFile.name\\\">{{\\\"ImportExport.ImportContent.Commands.SelectFile\\\" | translate}}</span>\\r\\n                <span ng-show=\\\"vm.ImportFile.name\\\">{{vm.ImportFile.name}}</span>\\r\\n                <input type=\\\"file\\\" sxc-file-input=\\\"vm.ImportFile\\\" />\\r\\n            </span>\\r\\n            <br />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary pull-left\\\" ng-click=\\\"vm.importContent()\\\" ng-disabled=\\\"!vm.ImportFile.name || vm.IsImporting\\\" translate=\\\"ImportExport.ImportContent.Commands.Import\\\"></button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- END IMPORT -->\\r\\n\\r\\n    <!-- RESULT -->\\r\\n    <div ng-if=\\\"vm.ImportResult.Messages\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div ng-if=\\\"vm.ImportResult.Succeeded\\\" class=\\\"sxc-message sxc-message-info\\\">\\r\\n                {{\\\"ImportExport.ImportContent.Messages.ImportSucceeded\\\" | translate}} (<a ng-click=\\\"vm.ImportResult._hideSuccessMessages = !vm.ImportResult._hideSuccessMessages\\\">{{\\\"ImportExport.ImportContent.Commands.ToggleSuccessMessages\\\" | translate}}</a>)\\r\\n            </div>\\r\\n            <div ng-if=\\\"!vm.ImportResult.Succeeded\\\" class=\\\"sxc-message sxc-message-error\\\">\\r\\n                {{\\\"ImportExport.ImportContent.Messages.ImportFailed\\\" | translate}}\\r\\n            </div>\\r\\n            <div ng-repeat=\\\"message in vm.ImportResult.Messages\\\" class=\\\"sxc-message\\\" ng-class=\\\"{ \\'sxc-message-warning\\': message.MessageType == 0, \\'sxc-message-success\\': message.MessageType == 1, \\'sxc-message-error\\': message.MessageType == 2, \\'sxc-message-success-hidden\\': vm.ImportResult._hideSuccessMessages }\\\">\\r\\n                {{message.Message}}\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- END RESULT -->\\r\\n</div>\");\n$templateCache.put(\"importexport/intro.html\",\"<div class=\\\"modal-body\\\">\\r\\n    <div>\\r\\n        <div class=\\\"pull-left btn-group-vertical\\\">\\r\\n            <button uib-tooltip=\\\"{{\\'AppConfig.Export.Button\\' | translate}}\\\" ng-click=\\\"vm.exportAll()\\\" class=\\\"btn btn-square btn-primary\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"export\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div style=\\\"margin-left: 50px\\\">\\r\\n            <h4 class=\\\"modal-title\\\" translate=\\\"AppConfig.Export.Title\\\"></h4>\\r\\n            <div translate=\\\"AppConfig.Export.Intro\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <br />\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"pull-left btn-group-vertical\\\">\\r\\n            <button uib-tooltip=\\\"{{\\'ImportExport.Buttons.Export\\' | translate}}\\\" ng-click=\\\"vm.export()\\\" class=\\\"btn btn-square btn-primary\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"export\\\"></i>\\r\\n            </button>\\r\\n\\r\\n            <button uib-tooltip=\\\"{{\\'ImportExport.Buttons.Import\\' | translate}}\\\" ng-click=\\\"vm.import()\\\" class=\\\"btn btn-square btn-primary\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"import\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div style=\\\"margin-left: 50px\\\">\\r\\n            <h4 class=\\\"modal-title\\\" translate=\\\"ImportExport.Title\\\"></h4>\\r\\n            <div translate=\\\"ImportExport.Intro\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <br />\\r\\n\\r\\n</div>\");\n$templateCache.put(\"language-settings/languages.html\",\"<div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 translate=\\\"Language.Title\\\"></h4>        \\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div translate=\\\"Language.Intro\\\"></div>\\r\\n\\r\\n        <table class=\\\"table table-hover\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th translate=\\\"Language.Table.Code\\\"></th>\\r\\n                    <th translate=\\\"Language.Table.Culture\\\"></th>\\r\\n                    <th translate=\\\"Language.Table.Status\\\"></th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr ng-repeat=\\\"item in vm.items | orderBy:[\\'ContentType.Name\\',\\'Name\\']\\\" class=\\\"clickable-row\\\" ng-click=\\\"vm.toggle(item)\\\">\\r\\n                    <td class=\\\"clickable\\\">{{item.Code}}</td>\\r\\n                    <td class=\\\"clickable\\\">{{item.Culture}}</span></td>\\r\\n                    <td class=\\\"clickable text-nowrap\\\">\\r\\n                        <span ng-click=\\\"vm.save(item)\\\" stop-event=\\\"click\\\">\\r\\n                            <switch ng-model=\\\"item.IsEnabled\\\"></switch>\\r\\n                        </span>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr ng-if=\\\"!vm.items.length\\\">\\r\\n                    <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        &nbsp;\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"manage-content-list/manage-content-list.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"><i icon=\\\"remove\\\"></i></button>\\r\\n    <h3 class=\\\"modal-title\\\" translate=\\\"ManageContentList.Title\\\"></h3>\\r\\n</div>\\r\\n<div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div>\\r\\n            <p translate=\\\"ManageContentList.HeaderIntro\\\"></p>\\r\\n            <div>\\r\\n                <a ng-if=\\\"vm.header.Type\\\" ng-click=\\\"vm.editHeader()\\\"> {{ vm.header.Title }} <i icon=\\\"pencil\\\" class=\\\"pull-right\\\"></i></a>\\r\\n                <span ng-if=\\\"!vm.header.Type\\\" translate=\\\"ManageContentList.NoHeaderInThisList\\\"></span>\\r\\n            </div>\\r\\n            <br/>\\r\\n        </div>\\r\\n        <div>\\r\\n            <p translate=\\\"ManageContentList.Intro\\\"></p>\\r\\n            <div ui-tree=\\\"options\\\" data-empty-placeholder-enabled=\\\"false\\\">\\r\\n                <ol ui-tree-nodes ng-model=\\\"vm.items\\\">\\r\\n                    <li ng-repeat=\\\"item in vm.items\\\" ui-tree-node class=\\\"eav-entityselect-item\\\" style=\\\"width: 100%\\\">\\r\\n                        <div ui-tree-handle>\\r\\n                            <i icon=\\\"move\\\" title=\\\"{{ \\'FieldType.Entity.DragMove\\' | translate }}\\\" class=\\\"pull-left eav-entityselect-sort\\\"></i>\\r\\n                            <span>&nbsp;{{item.Title}} ({{item.Id}})</span>\\r\\n                            <span class=\\\"eav-entityselect-item-actions\\\">\\r\\n                                <span ng-if=\\\"item.Id !== 0\\\" data-nodrag title=\\\"{{ \\'FieldType.Entity.Edit\\' | translate }}\\\" ng-click=\\\"vm.edit(item.Id)\\\">\\r\\n                                    <i icon=\\\"pencil\\\"></i>\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </li>\\r\\n                </ol>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-primary btn-square btn-lg pull-left\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\"><i icon=\\\"ok\\\"></i></button>\\r\\n</div>\");\n$templateCache.put(\"replace-content/replace-content.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"><i icon=\\\"remove\\\"></i></button>\\r\\n    <h3 class=\\\"modal-title\\\" translate=\\\"ReplaceContent.Title\\\"></h3>\\r\\n</div>\\r\\n<div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <p translate=\\\"ReplaceContent.Intro\\\"></p>\\r\\n        <div translate=\\\"ReplaceContent.ChooseItem\\\"></div>\\r\\n        <div>\\r\\n            <select class=\\\"input-lg\\\"\\r\\n                    ng-model=\\\"vm.item.id\\\"\\r\\n                    ng-options=\\\"vm.convertToInt(key) as ((value || \\'[?]\\') + \\' (\\' + key + \\')\\') for (key,value) in vm.options\\\"\\r\\n                    style=\\\"max-width: 100%\\\"></select>\\r\\n            &nbsp;<button type=\\\"button\\\" class=\\\"btn btn-lg\\\" ng-click=\\\"vm.copySelected()\\\">\\r\\n                <i icon=\\\"duplicate\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-primary btn-square btn-lg pull-left\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\"><i icon=\\\"ok\\\"></i></button>\\r\\n</div>\");\n$templateCache.put(\"templates/templates.html\",\"\\r\\n\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <button icon=\\\"plus\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-square\\\" ng-click=\\\"vm.add()\\\"> </button>\\r\\n    <span class=\\\"btn-group\\\" ng-if=\\\"vm.debug.on\\\">\\r\\n        <button icon=\\\"repeat\\\" type=\\\"button\\\" class=\\\"btn btn-square\\\" ng-click=\\\"vm.refresh()\\\"></button>\\r\\n    </span>\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th translate=\\\"Templates.Table.TName\\\"></th>\\r\\n            <th translate=\\\"Templates.Table.TPath\\\"></th>\\r\\n            <th translate=\\\"Templates.Table.CType\\\"></th>\\r\\n            <th translate=\\\"Templates.Table.DemoC\\\"></th>\\r\\n            <th>\\r\\n                <span uib-tooltip=\\\"{{\\'Templates.Table.Show\\' | translate}}\\\"><i icon=\\\"eye-open\\\"></i></span>\\r\\n            </th>\\r\\n            <th translate=\\\"Templates.Table.UrlKey\\\"></th>\\r\\n            <th translate=\\\"Templates.Table.Actions\\\"></th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr ng-repeat=\\\"item in vm.items | orderBy:[\\'ContentType.Name\\',\\'Name\\']\\\" class=\\\"clickable-row\\\" ng-click=\\\"vm.edit(item)\\\">\\r\\n            <td class=\\\"clickable\\\">{{item.Name}}</td>\\r\\n            <td class=\\\"clickable\\\"><span uib-tooltip=\\\"{{item.TemplatePath}}\\\">...{{item.TemplatePath.split(\\\"/\\\").pop()}}</span></td>\\r\\n            <td class=\\\"clickable\\\">\\r\\n                <span uib-tooltip=\\\"\\r\\nCont: {{item.ContentType.Name}} ({{item.ContentType.Id}})\\r\\nPres: {{item.PresentationType.Name}} ({{item.PresentationType.Id}})\\r\\nListC: {{item.ListContentType.Name}} ({{item.ListContentType.Id}})\\r\\nListP: {{item.ListPresentationType.Name}} ({{item.ListPresentationType.Id}})\\r\\n\\\">{{item.ContentType.Name}}</span>\\r\\n            </td>\\r\\n            <td class=\\\"clickable\\\">\\r\\n                <span uib-tooltip=\\\"\\r\\nDemo: {{item.ContentType.DemoTitle}} ({{item.ContentType.DemoId}})\\r\\nPres: {{item.PresentationType.DemoTitle}} ({{item.PresentationType.DemoId}})\\r\\nListC: {{item.ListContentType.DemoTitle}} ({{item.ListContentType.DemoId}})\\r\\nListP: {{item.ListPresentationType.DemoTitle}} ({{item.ListPresentationType.DemoId}})\\r\\n\\\">{{item.ContentType.DemoId}}</span>\\r\\n            </td>\\r\\n            <td>\\r\\n                <span icon=\\\"{{ item.IsHidden ? \\'close\\' : \\'eye-open\\'}}\\\"></span>\\r\\n            </td>\\r\\n            <td class=\\\"clickable\\\"><span uib-tooltip=\\\"{{item.ViewNameInUrl}}\\\">{{item.ViewNameInUrl}}</span></td>\\r\\n            <td class=\\\"text-nowrap\\\" stop-event=\\\"click\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.permissions(item)\\\">\\r\\n                    <i icon=\\\"user\\\"></i>\\r\\n                </button>\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.tryToDelete(item)\\\">\\r\\n                    <span icon=\\\"remove\\\"></span>\\r\\n                </button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr ng-if=\\\"!vm.items.length\\\">\\r\\n            <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n\\r\\n    <div class=\\\"\\\" translate=\\\"Templates.InfoHideAdvanced\\\"></div>\\r\\n</div>\");\n$templateCache.put(\"web-api/web-api.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <h3 class=\\\"modal-title\\\" translate=\\\"WebApi.Title\\\"></h3>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <p translate=\\\"WebApi.Intro\\\"></p>\\r\\n    <button icon=\\\"plus\\\" type=\\\"button\\\" class=\\\"btn btn-square\\\" ng-click=\\\"vm.add()\\\"> </button>\\r\\n    <button icon=\\\"repeat\\\" type=\\\"button\\\" class=\\\"btn btn-square\\\" ng-click=\\\"vm.refresh()\\\"></button>\\r\\n\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th translate=\\\"WebApi.ListTitle\\\"></th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr ng-repeat=\\\"item in vm.items | orderBy:[\\'ContentType.Name\\',\\'Name\\']\\\">\\r\\n                <td><span uib-tooltip=\\\"{{item.TemplatePath}}\\\">{{item}}</span></td>\\r\\n            </tr>\\r\\n            <tr ng-if=\\\"!vm.items.length\\\">\\r\\n                <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <p translate=\\\"WebApi.QuickStart\\\"></p>\\r\\n\\r\\n</div>\\r\\n\\r\\n\");}]);\n(function () { \r\n\r\n    TemplateListController.$inject = [\"templatesSvc\", \"eavAdminDialogs\", \"eavConfig\", \"appId\", \"debugState\", \"$translate\", \"$uibModalInstance\"];\r\n    angular.module(\"TemplatesApp\", [\r\n        \"SxcServices\",\r\n        \"EavConfiguration\",\r\n        \"EavAdminUi\",\r\n        \"EavServices\",\r\n        \"EavDirectives\"\r\n    ])\r\n        .controller(\"TemplateList\", TemplateListController)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function TemplateListController(templatesSvc, eavAdminDialogs, eavConfig, appId, debugState, $translate, $uibModalInstance) {\r\n        var vm = this;\r\n        vm.debug = debugState;\r\n\r\n        var svc = templatesSvc(appId);\r\n\r\n        vm.edit = function edit(item) {\r\n            eavAdminDialogs.openItemEditWithEntityId(item.Id, svc.liveListReload);\r\n        };\r\n        \r\n\r\n\r\n        vm.add = function addNew() {\r\n            eavAdminDialogs.openItemNew(\"2SexyContent-Template\", svc.liveListReload);\r\n        };\r\n\r\n        vm.items = svc.liveList();\r\n        vm.refresh = svc.liveListReload;\r\n\r\n        vm.permissions = function permissions(item) {\r\n            return eavAdminDialogs.openPermissionsForGuid(appId, item.Guid, svc.liveListReload);\r\n        };\r\n\r\n        vm.tryToDelete = function tryToDelete(item) {\r\n            if (confirm($translate.instant(\"General.Questions.DeleteEntity\", { title: item.Name, id: item.Id})))\r\n                svc.delete(item.Id);\r\n        };\r\n\r\n        vm.close = function () {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        };\r\n    }\r\n\r\n} ());\n(function () { \r\n\r\n    WebApiMainController.$inject = [\"appId\", \"webApiSvc\", \"eavAdminDialogs\", \"$uibModalInstance\", \"$translate\"];\r\n    angular.module(\"WebApiApp\", [\r\n        \"SxcServices\",\r\n        //\"EavConfiguration\",\r\n        \"EavAdminUi\",\r\n        \"EavServices\",\r\n        \"EavDirectives\"\r\n    ])\r\n        .controller(\"WebApiMain\", WebApiMainController)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function WebApiMainController(appId, webApiSvc, eavAdminDialogs, $uibModalInstance, $translate) {\r\n        var vm = this;\r\n        \r\n        var svc = webApiSvc(appId);\r\n\r\n        vm.items = svc.liveList();\r\n        vm.refresh = svc.liveListReload;\r\n\r\n        vm.add = function add() {\r\n            alert($translate.instant(\"WebApi.AddDoesntExist\"));\r\n        };\r\n\r\n        // not implemented yet...\r\n        vm.tryToDelete = function tryToDelete(item) {\r\n            if (confirm($translate.instant(\"General.Messages.DeleteEntity\", { title: item.Title, id: item.Id})))   //\"Delete '\" + item.Title + \"' (\" + item.Id + \") ?\"))\r\n                svc.delete(item.Id);\r\n        };\r\n\r\n        vm.close = function () {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        };\r\n    }\r\n\r\n} ());"],"sourceRoot":"/source/"}