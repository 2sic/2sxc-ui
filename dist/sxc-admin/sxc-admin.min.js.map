{"version":3,"sources":["sxc-admin.min.js"],"names":["MainController","eavAdminDialogs","eavConfig","appId","debugState","appDialogConfigSvc","$uibModalInstance","vm","this","debug","view","getDialogSettings","then","result","config","data","close","dismiss","$inject","angular","module","$translatePartialLoaderProvider","addPart","controller","AppSettingsController","appSettings","svc","items","liveList","ready","length","staticName","openConfig","edit","editPackage","AppListController","appsSvc","sxcDialogs","zoneId","$translate","blankCallback","refresh","liveListReload","add","prompt","instant","create","tryToDelete","item","name","Name","id","Id","alert","manage","url","window","location","href","replace","RegExp","AppRoot","openTotal","browseCatalog","open","openAppImport","resolve","CreateResolve","OpenModal","languages","openLanguages","preLoadAgGrid","$ocLazyLoad","load","DialogHostController","$2sxc","dialog","contentTypeName","initialDialog","closeThis","openEditItems","openZoneMain","openAppMain","openReplaceContent","openManageContentList","parts","getUrl","openDevelop","openContentTypeFieldsOfItems","openContentItems","constant","filter","$sce","val","trustAsResourceUrl","text","trustAsHtml","ExportAppController","ExportAppService","activate","getAppInfo","AppInfo","exportApp","IsExporting","IncludeContentGroups","ResetAppGuid","exportGit","exportForVersionControl","$http","$q","get","getUrlPrefix","params","includeContentGroups","resetAppGuid","when","srvc","factory","ExportContentController","ExportContentService","$filter","getContentInfo","ExportScope","ContentInfo","exportContent","contentTypeIds","selectedContentTypes","map","templateIds","selectedTemplates","entityIds","selectedEntities","concat","ContentTypes","_export","entities","forEach","Entities","templates","Templates","TemplatesWithoutContentTypes","changeExportScope","newExportScope","scope","join","ImportAppController","ImportAppService","importApp","IsImporting","ImportFile","ImportResult","error","file","method","headers","Content-Type","undefined","transformRequest","formData","FormData","append","AppId","ZoneId","File","ImportContentController","ImportContentService","importContent","console","log","FileReadDirective","sxcFileRead","link","element","attributes","bind","e","target","files","fileReader","FileReader","onload","$apply","Data","readAsDataURL","FileInputDirective","sxcFileInput","directive","IntroController","exportAll","LanguagesSettingsController","languagesSvc","toggle","save","ManageContentController","contentGroupSvc","header","contentGroup","EntityId","guid","Group","Guid","part","Part","index","Index","reload","getList","reloadHeader","getHeader","ok","saveList","editHeader","push","Add","Title","openItemEditWithEntityId","ReplaceContentController","options","getItems","Items","SelectedId","saveItem","convertToInt","parseInt","copySelected","DuplicateEntity","reloadAfterCopy","copy","Object","keys","svcCreator","global","extend","implementLiveList","withSubfolders","path","content","post","contentTypeSvc","contentItemsSvc","promise","afterEvent","found","StaticName","openContentTypeFields","contentSvc","callback","entityId","resortedList","urlParams","websiteRoot","JSON","parse","cultureCode","Code","enable","IsEnabled","$uibModal","closeCallback","totalPopup","browserFixUrlCaching","urlCheck","match","Date","getTime","openModalComponent","mask","run","$templateCache","put","TemplateListController","templatesSvc","openItemNew","permissions","openPermissionsForGuid","confirm","title","WebApiMainController","webApiSvc"],"mappings":"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","file":"sxc-admin.min.js","sourcesContent":["(function() { \r\n\r\n    MainController.$inject = [\"eavAdminDialogs\", \"eavConfig\", \"appId\", \"debugState\", \"appDialogConfigSvc\", \"$uibModalInstance\"];\r\n    angular.module(\"MainSxcApp\", [\r\n            \"EavConfiguration\", // config\r\n            \"SxcTemplates\", // inline templates\r\n            \"EavAdminUi\", // dialog (modal) controller\r\n            \"EavServices\", // multi-language stuff\r\n            \"SxcFilters\", // for inline unsafe urls\r\n            \"ContentTypesApp\",\r\n            \"PipelineManagement\",\r\n            \"TemplatesApp\",\r\n            \"ImportExport\",\r\n            \"AppSettingsApp\",\r\n            \"SystemSettingsApp\",\r\n            \"WebApiApp\",\r\n            \"SxcServices\"\r\n        ])\r\n        /*@ngInject*/\r\n        .config([\"$translatePartialLoaderProvider\", function ($translatePartialLoaderProvider) {\r\n            // ensure the language pack is loaded\r\n            $translatePartialLoaderProvider.addPart(\"sxc-admin\");\r\n        }])\r\n        .controller(\"AppMain\", MainController)\r\n    ;\r\n\r\n    /*@ngInject*/\r\n    function MainController(eavAdminDialogs, eavConfig, appId, debugState, appDialogConfigSvc, $uibModalInstance) {\r\n        var vm = this;\r\n        vm.debug = debugState;\r\n        vm.view = \"start\";\r\n\r\n        appDialogConfigSvc.getDialogSettings().then(function (result) {\r\n            vm.config = result.data;\r\n        });\r\n\r\n        vm.close = function () {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        };\r\n    }\r\n\r\n} ());\n(function () { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    AppSettingsController.$inject = [\"appSettings\", \"appId\"];\r\n    angular.module(\"AppSettingsApp\", [\r\n        \"EavConfiguration\",     // \r\n        \"EavServices\",\r\n        \"SxcServices\",\r\n        \"SxcTemplates\",         // inline templates\r\n        \"EavAdminUi\",           // dialog (modal) controller\r\n    ])\r\n        .controller(\"AppSettings\", AppSettingsController)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function AppSettingsController(appSettings, appId) {\r\n        var vm = this;\r\n        var svc = appSettings(appId);\r\n        vm.items = svc.liveList();\r\n\r\n        vm.ready = function ready() {\r\n            return vm.items.length > 0;\r\n        };\r\n\r\n        /// Open a content-type configuration dialog for a type (for settins / resources) \r\n        vm.config = function openConf(staticName) {\r\n            return svc.openConfig(staticName);\r\n        };\r\n\r\n        vm.edit = function edit(staticName) {\r\n            return svc.edit(staticName);\r\n        };\r\n\r\n        vm.editPackage = svc.editPackage;\r\n\r\n    }\r\n\r\n} ());\n(function () { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    AppListController.$inject = [\"appsSvc\", \"eavAdminDialogs\", \"sxcDialogs\", \"eavConfig\", \"appSettings\", \"appId\", \"zoneId\", \"$uibModalInstance\", \"$translate\"];\r\n    angular.module(\"AppsManagementApp\", [\r\n        \"EavServices\",\r\n        \"EavConfiguration\",\r\n        \"SxcServices\",\r\n        \"SxcTemplates\",         // inline templates\r\n        \"EavAdminUi\",           // dialog (modal) controller\r\n        \"SxcAdminUi\"\r\n    ])\r\n        /*@ngInject*/\r\n        .config([\"$translatePartialLoaderProvider\", function ($translatePartialLoaderProvider) {\r\n            // ensure the language pack is loaded\r\n            $translatePartialLoaderProvider.addPart(\"sxc-admin\");\r\n        }])\r\n\r\n        .controller(\"AppList\", AppListController)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function AppListController(appsSvc, eavAdminDialogs, sxcDialogs, eavConfig, appSettings, appId, zoneId, $uibModalInstance, $translate) {\r\n        var vm = this;\r\n\r\n        function blankCallback() { }\r\n\r\n        var svc = appsSvc(zoneId);\r\n        vm.items = svc.liveList();\r\n        vm.refresh = svc.liveListReload;\r\n\r\n        // config from here fails, because it has to open the full dialog in another app\r\n        //vm.config = function config(item) {\r\n        //    var settings = appSettings(item.Id);\r\n        //    settings.editPackage(svc.liveListReload);\r\n        //    //alert(\"known bug: atm in this beta this feature has a bug - it only works for the app, in which you opened this dialog. \");\r\n        //    //eavAdminDialogs.openItemEditWithEntityId(item.ConfigurationId, svc.liveListReload);\r\n        //};\r\n\r\n        vm.add = function add() {\r\n            var result = prompt($translate.instant(\"AppManagement.Prompt.NewApp\"));\r\n            if (result)\r\n                svc.create(result);\r\n        };\r\n\r\n        \r\n        vm.tryToDelete = function tryToDelete(item) {\r\n            var result = prompt($translate.instant(\"AppManagement.Prompt.DeleteApp\", { name: item.Name, id: item.Id}));\r\n                //prompt(\"This cannot be undone. To really delete this app, type (or copy/past) the app-name here: Delete '\" + item.Name + \"' (\" + item.Id + \") ?\");\r\n            if (result === null)\r\n                return;\r\n            if(result === item.Name)\r\n                svc.delete(item.Id);\r\n            else \r\n                alert($translate.instant(\"AppManagement.Prompt.FailedDelete\"));\r\n        };\r\n\r\n        // note that manage MUST open in a new iframe, to give the entire application \r\n        // a new initial context. otherwise we get problems with AppId and similar\r\n        vm.manage = function manage(item) {\r\n            var url = window.location.href;\r\n            url = url\r\n                .replace(new RegExp(\"appid=[0-9]*\", \"i\"), \"appid=\" + item.Id) // note: sometimes it doesn't have an appid, so it's [0-9]* instead of [0-9]+\r\n                .replace(/approot=[^&]*/, \"approot=\" + item.AppRoot + \"/\")\r\n                .replace(\"dialog=zone\", \"dialog=app\");\r\n\r\n            sxcDialogs.openTotal(url, svc.liveListReload);\r\n        };\r\n\r\n\r\n        vm.browseCatalog = function() {\r\n            window.open(\"http://2sxc.org/apps\");\r\n        };\r\n\r\n\r\n        vm.import = function imp() {\r\n            sxcDialogs.openAppImport(vm.refresh);\r\n        };\r\n\r\n        // export is disabled for now, because it actually doesn't use the id given here, but the \r\n        // original appId - part of #887\r\n        vm.export = function exp(item) {\r\n            var resolve = eavAdminDialogs.CreateResolve({\r\n                appId: item.Id\r\n            });\r\n            return eavAdminDialogs.OpenModal(\r\n                \"importexport/export-app.html\",\r\n                \"ExportApp as vm\",\r\n                \"lg\",\r\n                resolve, blankCallback);\r\n        };\r\n\r\n        vm.languages = function languages() {\r\n            sxcDialogs.openLanguages(zoneId, vm.refresh);\r\n        };\r\n\r\n        vm.close = function () { $uibModalInstance.dismiss(\"cancel\");};\r\n    }\r\n\r\n} ());\n(function () { \r\n\r\n    DialogHostController.$inject = [\"zoneId\", \"appId\", \"items\", \"$2sxc\", \"dialog\", \"sxcDialogs\", \"contentTypeName\", \"eavAdminDialogs\", \"$ocLazyLoad\"];\r\n    angular.module(\"DialogHost\", [\r\n        \"SxcAdminUi\",\r\n        \"EavAdminUi\",\r\n        \"oc.lazyLoad\",\r\n\r\n        \"eavEditEntity\" // new it must be added here, so it's available in the entire application - not good architecture, must fix someday\r\n    ])\r\n         \r\n        .controller(\"DialogHost\", DialogHostController)\r\n        ;\r\n\r\n    function preLoadAgGrid($ocLazyLoad) {\r\n        return $ocLazyLoad.load([\r\n            \"../lib/ag-grid/ag-grid.min.js\",\r\n            \"../lib/ag-grid/ag-grid.min.css\"\r\n        ]);\r\n\r\n    }\r\n\r\n    /*@ngInject*/\r\n    function DialogHostController(zoneId, appId, items, $2sxc, dialog, sxcDialogs, contentTypeName, eavAdminDialogs, $ocLazyLoad) {\r\n        var vm = this;\r\n        vm.dialog = dialog;\r\n        var initialDialog = dialog;\r\n\r\n        vm.close = function close() {\r\n            sxcDialogs.closeThis();\r\n        };\r\n\r\n        switch (initialDialog) {\r\n            case \"edit\":\r\n                eavAdminDialogs.openEditItems(items, vm.close);\r\n                break;\r\n            case \"zone\":\r\n                // this is the zone-config dialog showing mainly all the apps\r\n                sxcDialogs.openZoneMain(zoneId, vm.close);\r\n                break;\r\n            case \"app\":\r\n                // this opens the manage-an-app with content-types, views, etc.\r\n                preLoadAgGrid($ocLazyLoad).then(function() {\r\n                    sxcDialogs.openAppMain(appId, vm.close);\r\n                });\r\n                break;\r\n            case \"app-import\":\r\n                // this is the zone-config dialog showing mainly all the apps\r\n                sxcDialogs.openAppImport(vm.close);\r\n                break;\r\n            case \"replace\":\r\n                // this is the \"replace item in a list\" dialog\r\n                sxcDialogs.openReplaceContent(items[0], vm.close);\r\n                break;\r\n            case \"instance-list\":\r\n                sxcDialogs.openManageContentList(items[0], vm.close);\r\n                break;\r\n            case \"develop\":\r\n                // lazy load this to ensure the module is \"registered\" inside 2sxc\r\n                $ocLazyLoad.load([\r\n                        $2sxc.parts.getUrl(\"../sxc-develop/sxc-develop.min.js\")\r\n                    ])\r\n                    .then(function() {\r\n                        sxcDialogs.openDevelop(items[0], vm.close);\r\n                    });\r\n                break;\r\n            case \"contenttype\":\r\n                eavAdminDialogs.openContentTypeFieldsOfItems(items, vm.close);\r\n                break;\r\n            case \"contentitems\":\r\n                preLoadAgGrid($ocLazyLoad).then(function() {\r\n                    eavAdminDialogs.openContentItems(appId, contentTypeName, contentTypeName, vm.close);\r\n                });\r\n                break;\r\n            case \"pipeline-designer\":\r\n                // Don't do anything, as the template already loads the app in fullscreen-mode\r\n                // eavDialogs.editPipeline(appId, pipelineId, closeCallback);\r\n                break;\r\n            default:\r\n                alert(\"Trying to open an unknown dialog (\" + initialDialog + \"). Will close again.\");\r\n                vm.close();\r\n                throw \"Trying to open a dialog, don't know which one\";\r\n        }\r\n    }\r\n\r\n} ());\n(function () { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    angular.module(\"SxcFilters\", [])\r\n        .constant(\"createdBy\", \"2sic\") // just a demo how to use constant or value configs in AngularJS\r\n        .constant(\"license\", \"MIT\") // these wouldn't be necessary, just added for learning exprience\r\n        /*@ngInject*/\r\n        .filter('trustAsResourceUrl', [\"$sce\", function ($sce) {\r\n            return function(val) {\r\n                return $sce.trustAsResourceUrl(val);\r\n            };\r\n        }])\r\n        /*@ngInject*/\r\n        .filter('trustHtml', [\"$sce\", function ($sce) {\r\n            return function(text) {\r\n                return $sce.trustAsHtml(text);\r\n            };\r\n        }]);\r\n\r\n} ());\n(function () { \r\n\r\n    angular.module(\"ImportExport\", [\r\n        \"EavConfiguration\", // Config\r\n        \"SxcTemplates\",     // Inline templates\r\n        \"EavAdminUi\",       // Dialog (modal) controller\r\n        \"EavServices\",      // Multi-language stuff\r\n        \"SxcServices\"\r\n    ]);\r\n} ());\n(function () {\r\n\r\n    ExportAppController.$inject = [\"ExportAppService\", \"eavAdminDialogs\", \"debugState\", \"eavConfig\", \"$uibModalInstance\"];\r\n    angular.module(\"ImportExport\")\r\n        .controller(\"ExportApp\", ExportAppController)\r\n        ;\r\n  \r\n\r\n    /*@ngInject*/\r\n    function ExportAppController(ExportAppService, eavAdminDialogs, debugState, eavConfig, $uibModalInstance) {\r\n        var vm = this;\r\n        vm.debug = debugState;\r\n\r\n        vm.IsExporting = false;\r\n\r\n        vm.IncludeContentGroups = false;\r\n        vm.ResetAppGuid = false;\r\n\r\n        vm.AppInfo = {};\r\n\r\n        vm.getAppInfo = getAppInfo;\r\n        vm.exportApp = exportApp;\r\n        vm.exportGit = exportGit;\r\n        vm.close = close;\r\n\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            getAppInfo();\r\n        }\r\n\r\n        // retrieve additional statistics & metadata about this app\r\n        function getAppInfo() {\r\n            return ExportAppService.getAppInfo().then(function (result) {\r\n                vm.AppInfo = result;\r\n            });\r\n        }\r\n\r\n        // this will call the export-app on the server\r\n        function exportApp() {\r\n            vm.IsExporting = true;\r\n            return ExportAppService.exportApp(vm.IncludeContentGroups, vm.ResetAppGuid).then(function () {\r\n                vm.IsExporting = false;\r\n            }).catch(function () {\r\n                vm.IsExporting = false;\r\n            });\r\n        }\r\n\r\n        // this will tell the server to export the data in the DB so it can be used in version control\r\n        function exportGit() {\r\n            vm.IsExporting = true;\r\n            return ExportAppService.exportForVersionControl(vm.IncludeContentGroups, vm.ResetAppGuid).then(function () {\r\n                vm.IsExporting = false;\r\n                alert(\"done - please check you '.data' folder\");\r\n            }).catch(function () {\r\n                vm.IsExporting = false;\r\n            });\r\n        }\r\n\r\n        function close() {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        }\r\n    }\r\n}());\n(function () {\r\n    ExportAppService.$inject = [\"appId\", \"zoneId\", \"eavConfig\", \"$http\", \"$q\"];\r\n    angular.module(\"ImportExport\")\r\n        .factory(\"ExportAppService\", ExportAppService)\r\n    ;\r\n\r\n\r\n    /*@ngInject*/\r\n    function ExportAppService(appId, zoneId, eavConfig, $http, $q) {\r\n        var srvc = {\r\n            getAppInfo: getAppInfo,\r\n            exportApp: exportApp,\r\n            exportForVersionControl: exportForVersionControl\r\n        };\r\n        return srvc;\r\n\r\n        function getAppInfo() {\r\n            return $http.get(eavConfig.getUrlPrefix(\"api\") + \"/app-sys/ImportExport/GetAppInfo\", { params: { appId: appId, zoneId: zoneId } }).then(function (result) { return result.data; });\r\n        }\r\n\r\n        function exportApp(includeContentGroups, resetAppGuid) {\r\n            window.open(eavConfig.getUrlPrefix(\"api\") + \"/app-sys/ImportExport/ExportApp?appId=\" + appId + \"&zoneId=\" + zoneId + \"&includeContentGroups=\" + includeContentGroups + \"&resetAppGuid=\" + resetAppGuid, \"_self\", \"\");\r\n            return $q.when(true);\r\n        }\r\n\r\n        function exportForVersionControl(includeContentGroups, resetAppGuid) {\r\n            // todo: put params in nice params object\r\n            return $http.get(\"app-sys/ImportExport/ExportForVersionControl?appId=\" + appId + \"&zoneId=\" + zoneId + \"&includeContentGroups=\" + includeContentGroups + \"&resetAppGuid=\" + resetAppGuid);\r\n\r\n        }\r\n    }\r\n}());\n(function () {\r\n\r\n    ExportContentController.$inject = [\"ExportContentService\", \"eavAdminDialogs\", \"eavConfig\", \"debugState\", \"$uibModalInstance\", \"$filter\"];\r\n    angular.module(\"ImportExport\")\r\n        .controller(\"ExportContent\", ExportContentController)\r\n        ;\r\n\r\n\r\n    /*@ngInject*/\r\n    function ExportContentController(ExportContentService, eavAdminDialogs, eavConfig, debugState, $uibModalInstance, $filter) {\r\n        var vm = this;\r\n\r\n        vm.debug = debugState;\r\n\r\n        vm.IsExporting = false;\r\n\r\n        vm.ExportScope = \"2SexyContent\";\r\n\r\n        vm.ContentInfo = null;\r\n\r\n        vm.getContentInfo = getContentInfo;\r\n        vm.exportContent = exportContent;\r\n        vm.changeExportScope = changeExportScope;\r\n\r\n        vm.close = close;\r\n\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            getContentInfo();\r\n        }\r\n\r\n\r\n        function getContentInfo() {\r\n            return ExportContentService.getContentInfo(vm.ExportScope).then(function (result) { vm.ContentInfo = result; });\r\n        }\r\n\r\n        function exportContent() {     \r\n            var contentTypeIds = selectedContentTypes().map(function (item) { return item.Id; });\r\n            var templateIds = selectedTemplates().map(function (item) { return item.Id; });\r\n            var entityIds = selectedEntities().map(function (item) { return item.Id; });\r\n            entityIds = entityIds.concat(templateIds);\r\n            \r\n            vm.IsExporting = true;\r\n            return ExportContentService.exportContent(contentTypeIds, entityIds, templateIds).then(function () {\r\n                vm.IsExporting = false;\r\n            }).catch(function () {\r\n                vm.IsExporting = false;\r\n            });\r\n        }\r\n\r\n\r\n        function selectedContentTypes() {\r\n            return $filter(\"filter\")(vm.ContentInfo.ContentTypes, { _export: true });\r\n        }\r\n\r\n        function selectedEntities() {\r\n            var entities = [];\r\n            angular.forEach(vm.ContentInfo.ContentTypes, function (item) {\r\n                entities = entities.concat(\r\n                    $filter(\"filter\")(item.Entities, { _export: true })\r\n                );\r\n            });\r\n            return entities;\r\n        }\r\n\r\n        function selectedTemplates() {\r\n            // The ones with...\r\n            var templates = [];\r\n            angular.forEach(vm.ContentInfo.ContentTypes, function (item) {\r\n                templates = templates.concat(\r\n                    $filter(\"filter\")(item.Templates, { _export: true })\r\n                );\r\n            });\r\n            // ...and without content types\r\n            templates = templates.concat($filter(\"filter\")(vm.ContentInfo.TemplatesWithoutContentTypes, { _export: true }));\r\n            return templates;\r\n        }\r\n\r\n        function changeExportScope() {\r\n            var newExportScope = prompt(\"Enter an new dcope for export\");\r\n            if (newExportScope) {\r\n                vm.ExportScope = newExportScope;\r\n            }\r\n            return getContentInfo();\r\n        }\r\n\r\n        function close() {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        }\r\n    }\r\n\r\n}());\n(function () {\r\n\r\n    ExportContentService.$inject = [\"appId\", \"zoneId\", \"eavConfig\", \"$http\", \"$q\"];\r\n    angular.module(\"ImportExport\")\r\n        .factory(\"ExportContentService\", ExportContentService)\r\n    ;\r\n\r\n\r\n    /*@ngInject*/\r\n    function ExportContentService(appId, zoneId, eavConfig, $http, $q) {\r\n        var srvc = {\r\n            getContentInfo: getContentInfo,\r\n            exportContent: exportContent\r\n        };\r\n        return srvc;\r\n\r\n\r\n        function getContentInfo(scope) {\r\n            return $http.get(eavConfig.getUrlPrefix(\"api\") + \"/app-sys/ImportExport/GetContentInfo\", { params: { appId: appId, zoneId: zoneId, scope: scope || \"2SexyContent\" } }).then(function (result) { return result.data; });\r\n        }\r\n\r\n        function exportContent(contentTypeIds, entityIds, templateIds) {\r\n            window.open(eavConfig.getUrlPrefix(\"api\") + \"/app-sys/ImportExport/ExportContent?appId=\" + appId + \"&zoneId=\" + zoneId + \"&contentTypeIdsString=\" + contentTypeIds.join(\";\") + \"&entityIdsString=\" + entityIds.join(\";\") + \"&templateIdsString=\" + templateIds.join(\";\"), \"_self\", \"\");\r\n            return $q.when(true);\r\n        }\r\n    }\r\n\r\n}());\n(function () {\r\n\r\n    ImportAppController.$inject = [\"ImportAppService\", \"eavAdminDialogs\", \"eavConfig\", \"$uibModalInstance\"];\r\n    angular.module(\"ImportExport\")\r\n        .controller(\"ImportApp\", ImportAppController)\r\n    ;\r\n\r\n    /*@ngInject*/\r\n    function ImportAppController(ImportAppService, eavAdminDialogs, eavConfig, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.IsImporting = false;\r\n\r\n        vm.ImportFile = {};\r\n        vm.ImportResult = {};\r\n\r\n        vm.importApp = importApp;\r\n\r\n        vm.close = close;\r\n\r\n\r\n        function importApp() {\r\n            vm.IsImporting = true;\r\n            return ImportAppService.importApp(vm.ImportFile).then(function (result) {\r\n                vm.ImportResult = result.data;\r\n                vm.IsImporting = false;\r\n            }).catch(function (error) {\r\n                vm.IsImporting = false;\r\n            });\r\n        }\r\n\r\n        function close() {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        }\r\n    }\r\n}());\n(function () {\r\n\r\n    ImportAppService.$inject = [\"appId\", \"zoneId\", \"eavConfig\", \"$http\", \"$q\"];\r\n    angular.module(\"ImportExport\")\r\n        .factory(\"ImportAppService\", ImportAppService)\r\n    ;\r\n\r\n\r\n    function ImportAppService(appId, zoneId, eavConfig, $http, $q) {\r\n        var srvc = {\r\n            importApp: importApp,\r\n        };\r\n        return srvc;\r\n\r\n\r\n        function importApp(file) {\r\n            return $http({\r\n                method: \"POST\",\r\n                url: \"app-sys/ImportExport/ImportApp\",\r\n                headers: { \"Content-Type\": undefined },\r\n                transformRequest: function (data) {\r\n                    var formData = new FormData();\r\n                    formData.append(\"AppId\", data.AppId);\r\n                    formData.append(\"ZoneId\", data.ZoneId);\r\n                    formData.append(\"File\", data.File);\r\n                    return formData;\r\n                },\r\n                data: { AppId: appId, ZoneId: zoneId, File: file }\r\n            });\r\n        }\r\n    }\r\n}());\n(function () {\r\n\r\n    ImportContentController.$inject = [\"ImportContentService\", \"eavAdminDialogs\", \"eavConfig\", \"$uibModalInstance\"];\r\n    angular.module(\"ImportExport\")\r\n        .controller(\"ImportContent\", ImportContentController)\r\n    ;\r\n\r\n\r\n    /*@ngInject*/\r\n    function ImportContentController(ImportContentService, eavAdminDialogs, eavConfig, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.IsImporting = false;\r\n\r\n        vm.ImportFile = {};\r\n        vm.ImportResult = {};\r\n\r\n        vm.importContent = importContent;\r\n\r\n        vm.close = close;\r\n\r\n\r\n        function importContent() {\r\n            vm.IsImporting = true;\r\n            return ImportContentService.importContent(vm.ImportFile).then(function (result) {\r\n                vm.ImportResult = result.data;\r\n                vm.IsImporting = false;\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n                vm.IsImporting = false;\r\n            });\r\n        }\r\n\r\n        function close() {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        }\r\n    }\r\n}());\n(function () {\r\n\r\n    ImportContentService.$inject = [\"appId\", \"zoneId\", \"eavConfig\", \"$http\", \"$q\"];\r\n    angular.module(\"ImportExport\")\r\n        .factory(\"ImportContentService\", ImportContentService)\r\n    ;\r\n\r\n\r\n    /*@ngInject*/\r\n    function ImportContentService(appId, zoneId, eavConfig, $http, $q) {\r\n        var srvc = {\r\n            importContent: importContent\r\n        };\r\n        return srvc;\r\n\r\n\r\n        function importContent(file) {\r\n            return $http({\r\n                method: \"POST\",\r\n                url: \"app-sys/ImportExport/ImportContent\",\r\n                headers: { \"Content-Type\": undefined },\r\n                transformRequest: function (data) {\r\n                    var formData = new FormData();\r\n                    formData.append(\"AppId\", data.AppId);\r\n                    formData.append(\"ZoneId\", data.ZoneId);\r\n                    formData.append(\"File\", data.File);\r\n                    return formData;\r\n                },\r\n                data: { AppId: appId, ZoneId: zoneId, File: file }\r\n            });\r\n        }\r\n    }\r\n\r\n}());\n(function () {\r\n\r\n    angular.module(\"ImportExport\")\r\n        .directive(\"sxcFileRead\", FileReadDirective)\r\n        .directive(\"sxcFileInput\", FileInputDirective)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function FileReadDirective() {\r\n        return {\r\n            scope: {\r\n                sxcFileRead: \"=\"\r\n            },\r\n            link: function (scope, element, attributes) {\r\n\r\n                element.bind(\"change\", function (e) {\r\n                    var file = e.target.files[0];\r\n                    var fileReader = new FileReader();\r\n                    fileReader.onload = function (e) {\r\n                        scope.$apply(function () {\r\n                            scope.sxcFileRead = {\r\n                                Name: file.name,\r\n                                Data: e.target.result\r\n                            };\r\n                        });\r\n                    };\r\n                    fileReader.readAsDataURL(file);\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    function FileInputDirective() {\r\n        return {\r\n            scope: {\r\n                sxcFileInput: \"=\"\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                element.bind(\"change\", function (e) {\r\n                    scope.sxcFileInput = e.target.files[0];\r\n                    scope.$apply();\r\n                });\r\n            }\r\n        };\r\n    }\r\n}());\n(function () { \r\n\r\n    IntroController.$inject = [\"eavAdminDialogs\", \"eavConfig\", \"appId\"];\r\n    angular.module(\"ImportExport\")\r\n        .controller(\"ImportExportIntro\", IntroController)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function IntroController(eavAdminDialogs, eavConfig, appId) {\r\n        var vm = this;\r\n        function blankCallback() { }\r\n\r\n        vm.exportAll = function exp() {\r\n            var resolve = eavAdminDialogs.CreateResolve({\r\n                appId: appId\r\n            });\r\n            return eavAdminDialogs.OpenModal(\r\n                \"importexport/export-app.html\",\r\n                \"ExportApp as vm\",\r\n                \"lg\",\r\n                resolve, blankCallback);\r\n\r\n        };\r\n\r\n        vm.import = function () {\r\n            var resolve = eavAdminDialogs.CreateResolve({\r\n                appId: appId\r\n            });\r\n            return eavAdminDialogs.OpenModal(\r\n                \"importexport/import-content.html\",\r\n                \"ImportContent as vm\",\r\n                \"lg\",\r\n                resolve, blankCallback);\r\n        };\r\n\r\n        vm.export = function () {\r\n            var resolve = eavAdminDialogs.CreateResolve({\r\n                appId: appId\r\n            });\r\n            return eavAdminDialogs.OpenModal(\r\n                \"importexport/export-content.html\",\r\n                \"ExportContent as vm\",\r\n                \"lg\",\r\n                resolve, blankCallback);\r\n        };\r\n    }\r\n\r\n} ());\n(function () { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    LanguagesSettingsController.$inject = [\"languagesSvc\", \"eavConfig\", \"appId\"];\r\n    angular.module(\"SystemSettingsApp\", [\r\n        \"EavConfiguration\",     // \r\n        \"EavServices\",\r\n        \"SxcServices\",\r\n        \"SxcTemplates\",         // inline templates\r\n//        \"EavAdminUi\",           // dialog (modal) controller\r\n    ])\r\n\r\n        .controller(\"LanguageSettings\", LanguagesSettingsController)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function LanguagesSettingsController(languagesSvc, eavConfig, appId) {\r\n        var vm = this;\r\n        var svc = languagesSvc();\r\n        vm.items = svc.liveList();\r\n\r\n        // vm.refresh = \r\n        vm.ready = function ready() {\r\n            return vm.items.length > 0;\r\n        };\r\n\r\n        vm.toggle = svc.toggle;\r\n\r\n        vm.save = svc.save;\r\n    }\r\n\r\n} ());\n(function () {\r\n\r\n    ManageContentController.$inject = [\"appId\", \"item\", \"contentGroupSvc\", \"eavAdminDialogs\", \"$uibModalInstance\", \"$translate\"];\r\n    angular.module(\"ReorderContentApp\", [\r\n            \"SxcServices\",\r\n            \"EavAdminUi\" // dialog (modal) controller\r\n    ])\r\n\r\n        /*@ngInject*/\r\n        .config([\"$translatePartialLoaderProvider\", function ($translatePartialLoaderProvider) {\r\n            // ensure the language pack is loaded\r\n            $translatePartialLoaderProvider.addPart(\"inpage\");\r\n        }])\r\n\r\n        .controller(\"ManageContentList\", ManageContentController);\r\n\r\n    /*@ngInject*/\r\n    function ManageContentController(appId, item, contentGroupSvc, eavAdminDialogs, $uibModalInstance, $translate) {\r\n        var vm = this;\r\n        vm.items = [];\r\n        vm.header = {};\r\n        vm.contentGroup = {\r\n            id: item.EntityId,\r\n            guid: item.Group.Guid,\r\n            part: item.Group.Part,\r\n            index: item.Group.Index\r\n        };\r\n\r\n        var svc = contentGroupSvc(appId);\r\n\r\n        vm.reload = function () {\r\n            return svc.getList(vm.contentGroup).then(function (result) {\r\n                vm.items = result.data;\r\n            });\r\n        };\r\n        vm.reload();\r\n\r\n        vm.reloadHeader = function() {\r\n            return svc.getHeader(vm.contentGroup).then(function(result) {\r\n                vm.header = result.data;\r\n            });\r\n        };\r\n        vm.reloadHeader();\r\n\r\n        vm.ok = function ok() {\r\n            svc.saveList(vm.contentGroup, vm.items).then(vm.close);\r\n        };\r\n        \r\n        // note: not perfect yet - won't edit presentation of header\r\n        vm.editHeader = function editHeader() {\r\n            var items = [];\r\n            items.push({\r\n                Group: {\r\n                    Guid: vm.contentGroup.guid,\r\n                    Index: 0,\r\n                    Part: \"listcontent\",\r\n                    Add: vm.header.Id === \"0\"\r\n                },\r\n                Title: $translate.instant(\"EditFormTitle.ListContent\")\r\n            });\r\n            items.push({\r\n                Group: {\r\n                    Guid: vm.contentGroup.guid,\r\n                    Index: 0,\r\n                    Part: \"listpresentation\",\r\n                    Add: vm.header.Id === \"0\"\r\n                },\r\n                Title: $translate.instant(\"EditFormTitle.ListPresentation\")\r\n            });\r\n            eavAdminDialogs.openEditItems(items, vm.reloadHeader);\r\n\r\n        };\r\n\r\n        vm.edit = function (id) {\r\n            if (id === null || id === 0)\r\n                return alert('no can do'); // todo: i18n\r\n            //var entities = $filter(\"filter\")($scope.availableEntities, { Value: itemGuid });\r\n            //var id = entities[0].Id;\r\n\r\n            eavAdminDialogs.openItemEditWithEntityId(id, vm.reload);\r\n        };\r\n\r\n        vm.close = function () { $uibModalInstance.dismiss(\"cancel\"); };\r\n\r\n    }\r\n\r\n} ());\n(function () { \r\n\r\n    ReplaceContentController.$inject = [\"appId\", \"item\", \"contentGroupSvc\", \"eavAdminDialogs\", \"$uibModalInstance\", \"$filter\"];\r\n    angular.module(\"ReplaceContentApp\", [\r\n            \"SxcServices\",\r\n            \"EavAdminUi\"         // dialog (modal) controller\r\n        ])\r\n        .controller(\"ReplaceDialog\", ReplaceContentController);\r\n\r\n    /*@ngInject*/\r\n    function ReplaceContentController(appId, item, contentGroupSvc, eavAdminDialogs, $uibModalInstance, $filter) {\r\n        var vm = this;\r\n        vm.options = [];\r\n        vm.item = {\r\n            id: item.EntityId,\r\n            guid: item.Group.Guid,\r\n            part: item.Group.Part,\r\n            index: item.Group.Index\r\n        };\r\n\r\n        var svc = contentGroupSvc(appId);\r\n\r\n        vm.reload = function() {\r\n            return svc.getItems(vm.item).then(function(result) {\r\n                vm.options = result.data.Items;\r\n                vm.item.id = result.data.SelectedId;\r\n            });\r\n        };\r\n        vm.reload();\r\n\r\n        vm.ok = function ok() {\r\n            svc.saveItem(vm.item).then(vm.close);\r\n        };\r\n        \r\n        vm.close = function () { $uibModalInstance.dismiss(\"cancel\"); };\r\n\r\n        vm.convertToInt = function (id) {\r\n            return parseInt(id);\r\n        };\r\n\r\n        vm.copySelected = function copySelected() {\r\n            var selectedId = vm.item.id;\r\n            var items = [\r\n                {\r\n                    //ContentTypeName: contentType,\r\n                    DuplicateEntity: vm.item.id\r\n                }\r\n            ];\r\n            eavAdminDialogs.openEditItems(items, vm.reloadAfterCopy);\r\n            // todo: on re-load a select would be nice\r\n        };\r\n\r\n        vm.reloadAfterCopy = function reloadAfterCopy(result) {\r\n            var copy = result.data;\r\n            vm.reload().then(function() {\r\n                vm.item.id = copy[Object.keys(copy)[0]]; // get id of first item\r\n            });\r\n        };\r\n    }\r\n\r\n} ());\n// Init the main eav services module\r\nangular.module(\"SxcServices\", [\r\n    \"ng\",                   // Angular for $http etc.\r\n    \"EavConfiguration\",     // global configuration\r\n\t\"EavServices\",\r\n    \"InitSxcParametersFromUrl\",\r\n    \"InitParametersFromUrl\"\r\n//    \"pascalprecht.translate\",\r\n]);\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"appDialogConfigSvc\", [\"appId\", \"$http\", function (appId, $http) {\r\n        var svc = {};\r\n\r\n        // this will retrieve an advanced getting-started url to use in an the iframe\r\n        svc.getDialogSettings = function gettingStartedUrl() {\r\n            return $http.get(\"app-sys/system/dialogsettings\", { params: { appId: appId } });\r\n        };\r\n        return svc;\r\n    }]);\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"appAssetsSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", function ($http, eavConfig, svcCreator) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(appId, global) {\r\n            var svc = {\r\n                params: {\r\n                    appId: appId,\r\n                    global: global || false\r\n                }\r\n            };\r\n\r\n            // ReSharper disable once UseOfImplicitGlobalInFunctionScope\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(\"app-sys/appassets/list\", { params: angular.extend({}, svc.params, { withSubfolders: true }) });\r\n            }));\r\n\r\n            svc.create = function create(path, content) {\r\n                return $http.post(\"app-sys/appassets/create\", { content: content || \"\" }, { params: angular.extend({}, svc.params, { path: path }) })\r\n                    .then(function(result) {\r\n                        if (result.data === false) // must check for an explicit false, to avoid undefineds\r\n                            alert(\"server reported that create failed - the file probably already exists\"); // todo: i18n\r\n                        return result;\r\n                    })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            //// delete, then reload, for now must use httpget because delete sometimes causes issues\r\n            //svc.delete = function del(id) {\r\n            //    return $http.get(\"app-sys/template/delete\", {params: {appId: svc.appId, Id: id }})\r\n            //        .then(svc.liveListReload);\r\n            //};\r\n            return svc;\r\n        };\r\n    }]);\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"appSettings\", [\"$http\", \"eavConfig\", \"svcCreator\", \"contentTypeSvc\", \"contentItemsSvc\", \"eavAdminDialogs\", \"$filter\", function ($http, eavConfig, svcCreator, contentTypeSvc, contentItemsSvc, eavAdminDialogs, $filter) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(appId) {\r\n            var svc = contentTypeSvc(appId, \"2SexyContent-App\");\r\n            //svc.appId = appId;\r\n            svc.promise = svc.liveListReload(); // try to load the data..\r\n\r\n            svc.openConfig = function openConf(staticName, afterEvent) {\r\n                return svc.promise.then(function() {\r\n                    var items = svc.liveList();\r\n                    var found = $filter(\"filter\")(items, { StaticName: staticName }, true);\r\n                    if (found.length !== 1)\r\n                        throw \"Found too many settings for the type \" + staticName;\r\n                    var item = found[0];\r\n                    return eavAdminDialogs.openContentTypeFields(item, afterEvent);\r\n                });\r\n            };\r\n\r\n            svc.edit = function edit(staticName, afterEvent) {\r\n                return svc.promise.then(function() {\r\n                    var contentSvc = contentItemsSvc(svc.appId, staticName);\r\n                    return contentSvc.liveListReload().then(function(result) {\r\n                        var found = result.data;\r\n                        if (found.length !== 1)\r\n                            throw \"Found too many settings for the type \" + staticName;\r\n                        var item = found[0];\r\n                        return eavAdminDialogs.openItemEditWithEntityId(item.Id, afterEvent);\r\n                    });\r\n                });\r\n            };\r\n\r\n            svc.editPackage = function editPackage(callback) {\r\n                return svc.edit(\"2SexyContent-App\", callback);\r\n            };\r\n\r\n            return svc;\r\n        };\r\n    }]);\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"appsSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", function ($http, eavConfig, svcCreator) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(zoneId) {\r\n            var svc = {\r\n                zoneId: zoneId\r\n            };\r\n            \r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(\"app-sys/system/apps\", { params: { zoneId: svc.zoneId } });\r\n            }));\r\n\r\n            svc.create = function create(name) {\r\n                return $http.post(\"app-sys/system/app\", {}, { params: { zoneId: svc.zoneId, name: name } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            // delete, then reload\r\n            // for unclear reason, the verb DELETE fails, so I'm using get for now\r\n            svc.delete = function del(appId) {\r\n                return $http.get(\"app-sys/system/deleteapp\", {params: { zoneId: svc.zoneId, appId: appId } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            return svc;\r\n        };\r\n    }]);\n\r\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"contentGroupSvc\", [\"$http\", function ($http) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(appId) {\r\n            var svc = {\r\n                getItems: function(item) {\r\n                    return $http.get(\"app-sys/contentgroup/replace\", { params: { appId: appId, guid: item.guid, part: item.part, index: item.index } });\r\n                },\r\n                saveItem: function(item) {\r\n                    return $http.post(\"app-sys/contentgroup/replace\", {}, { params: { guid: item.guid, part: item.part, index: item.index, entityId: item.id } });\r\n                },\r\n\r\n                getList: function (contentGroup) {\r\n                    return $http.get(\"app-sys/contentgroup/itemlist\", { params: { appId: appId, guid: contentGroup.guid } });\r\n                },\r\n\r\n                saveList: function (contentGroup, resortedList) {\r\n                    return $http.post(\"app-sys/contentgroup/itemlist\", resortedList, { params: { appId: appId, guid: contentGroup.guid } });\r\n                },\r\n\r\n                getHeader: function (contentGroup) {\r\n                    return $http.get(\"app-sys/contentgroup/header\", { params: { appId: appId, guid: contentGroup.guid } });\r\n                }\r\n\r\n\r\n            };\r\n\r\n            return svc;\r\n        };\r\n    }]);\n// By default, eav-controls assume that all their parameters (appId, etc.) are instantiated by the bootstrapper\r\n// but the \"root\" component must get it from the url\r\n// Since different objects could be the root object (this depends on the initial loader), the root-one must have\r\n// a connection to the Url, but only when it is the root\r\n// So the trick is to just include this file - which will provide values for the important attribute\r\n//\r\n// As of now, it supplies\r\n// - dialog -> which dialog to show\r\n// - tabid -> the url tab id\r\n// - items - list of items to edit\r\n\r\n//(function () {\r\n    angular.module(\"InitSxcParametersFromUrl\", [\"2sxc4ng\"])\r\n        /*@ngInject*/\r\n        .factory(\"dialog\", [\"$2sxc\", function ($2sxc) {\r\n            return $2sxc.urlParams.get(\"dialog\");\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"tabId\", [\"$2sxc\", function ($2sxc) {\r\n            return $2sxc.urlParams.get(\"tid\");\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"websiteRoot\", [\"$2sxc\", function ($2sxc) {\r\n            return $2sxc.urlParams.get(\"websiteroot\");\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"systemRoot\", [\"websiteRoot\", function (websiteRoot) {\r\n            return websiteRoot + \"desktopmodules/tosic_sexycontent/\";\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"portalRoot\", [\"$2sxc\", function ($2sxc) {\r\n            return $2sxc.urlParams.get(\"portalroot\");\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"appRoot\", [\"$2sxc\", function ($2sxc) {\r\n                return $2sxc.urlParams.get(\"appRoot\");\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"items\", [\"$2sxc\", function ($2sxc) {\r\n                var found = $2sxc.urlParams.get(\"items\");\r\n                if (found)\r\n                    return (found) ? JSON.parse(found) : null;\r\n        }])\r\n        /*@ngInject*/\r\n        .factory(\"beta\", [\"$2sxc\", function ($2sxc) {\r\n            return $2sxc.urlParams.get(\"beta\");\r\n        }])\r\n    ;\r\n\r\n\r\n\r\n// }());\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"languagesSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", function ($http, eavConfig, svcCreator) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(appId) {\r\n            var svc = {\r\n                appId: appId\r\n            };\r\n\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(\"app-sys/system/getlanguages\");//, { params: { appId: svc.appId } });\r\n            }));\r\n\r\n            // delete, then reload\r\n            svc.toggle = function toggle(item) {\r\n                return $http.get(\"app-sys/system/switchlanguage\", {params: {cultureCode: item.Code, enable: !item.IsEnabled }})\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            svc.save = function save(item) {\r\n                return $http.get(\"app-sys/system/switchlanguage\", { params: { cultureCode: item.Code, enable: item.IsEnabled } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            return svc;\r\n        };\r\n    }]);\n/*  this file contains a service to handle open/close of dialogs\r\n*/\r\n\r\nangular.module(\"SxcAdminUi\", [\r\n    \"ng\",\r\n    \"ui.bootstrap\", // for the $uibModal etc.\r\n    \"MainSxcApp\",\r\n    \"AppsManagementApp\",\r\n    \"ReplaceContentApp\",\r\n    \"ReorderContentApp\",\r\n    \"SystemSettingsApp\",\r\n    \"SxcTemplates\",\r\n    \"SxcEditTemplates\",\r\n    \"sxcFieldTemplates\",\r\n    \"EavAdminUi\", // dialog (modal) controller\r\n])\r\n\r\n    /*@ngInject*/\r\n    .factory(\"sxcDialogs\", [\"$uibModal\", \"eavAdminDialogs\", function ($uibModal, eavAdminDialogs) {\r\n        var svc = {};\r\n\r\n        // the portal-level dialog showing all apps\r\n        svc.openZoneMain = function ozm(zoneId, closeCallback) {\r\n            var resolve = eavAdminDialogs.CreateResolve({ zoneId: zoneId });\r\n            return eavAdminDialogs.OpenModal(\"apps-management/apps.html\", \"AppList as vm\", \"xlg\", resolve, closeCallback);\r\n        };\r\n\r\n        // the app-level dialog showing all app content-items, templates, web-api etc.\r\n        svc.openAppMain = function oam(appId, closeCallback) {\r\n            var resolve = eavAdminDialogs.CreateResolve({ appId: appId });\r\n            return eavAdminDialogs.OpenModal(\"app-main/app-main.html\", \"AppMain as vm\", \"xlg\", resolve, closeCallback);\r\n        };\r\n\r\n        // the app-level dialog showing all app content-items, templates, web-api etc.\r\n        svc.openAppImport = function oam(closeCallback) {\r\n            var resolve = eavAdminDialogs.CreateResolve({}); // { appId: appId }});\r\n            return eavAdminDialogs.OpenModal( \"importexport/import-app.html\", \"ImportApp as vm\", \"lg\", resolve, closeCallback);\r\n        };\r\n\r\n        //#region Total-Popup open / close\r\n        svc.openTotal = function openTotal(url, callback) {\r\n            return $2sxc.totalPopup.open(svc.browserFixUrlCaching(url), callback);\r\n        };\r\n\r\n            svc.browserFixUrlCaching = function(url) {\r\n                // this fixes a caching issue on IE and FF - see https://github.com/2sic/2sxc/issues/444\r\n                // by default I only need to do this on IE and FF, but to remain consistent, I always do it\r\n                var urlCheck = /(\\/ui.html\\?sxcver=[0-9\\.]*)((&time=)([0-9]*))*/gi;\r\n                if (url.match(urlCheck)) \r\n                    url = url.replace(urlCheck, \"$1&time=\" + new Date().getTime());\r\n                return url;\r\n            };\r\n\r\n        svc.closeThis = function closeThisTotalPopup() {\r\n            return $2sxc.totalPopup.closeThis();\r\n        };\r\n        //#endregion\r\n\r\n        // the replace-content item\r\n        svc.openReplaceContent = function orc(item, closeCallback) {\r\n            var resolve = eavAdminDialogs.CreateResolve({ item: item });\r\n            return eavAdminDialogs.OpenModal(\"replace-content/replace-content.html\", \"ReplaceDialog as vm\", \"lg\", resolve, closeCallback);\r\n        };\r\n\r\n        svc.openManageContentList = function orcl(item, closeCallback) {\r\n            var resolve = eavAdminDialogs.CreateResolve({ item: item });\r\n            return eavAdminDialogs.OpenModal(\"manage-content-list/manage-content-list.html\", \"ManageContentList as vm\", \"\", resolve, closeCallback);\r\n        };\r\n\r\n\r\n        svc.openDevelop = function ove(item, closeCallback) {\r\n            eavAdminDialogs.openModalComponent(\"editor\", \"max\", { item: item }, closeCallback);\r\n            //var resolve = eavAdminDialogs.CreateResolve({ item: item });\r\n            //return eavAdminDialogs.OpenModal(\"source-editor/editor.html\", \"Editor as vm\", \"max\", resolve, closeCallback);\r\n        };\r\n\r\n        // 2dm 2015-10-07 - don't think this is in use, remove\r\n        //svc.openContentEdit = function oce(edit, closeCallback) {\r\n        //    var resolve = eavAdminDialogs.CreateResolve(edit);\r\n        //    return eavAdminDialogs.OpenModal(\"wrappers/dnn-wrapper.html\", \"EditInDnn as vm\", \"lg\", resolve, closeCallback);\r\n        //};\r\n\r\n        svc.openLanguages = function orc(zoneId, closeCallback) {\r\n            var resolve = eavAdminDialogs.CreateResolve({ zoneId: zoneId });\r\n            return eavAdminDialogs.OpenModal(\"language-settings/languages.html\", \"LanguageSettings as vm\", \"lg\", resolve, closeCallback);\r\n        };\r\n\r\n        return svc;\r\n    }])\r\n\r\n;\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"templatesSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", function ($http, eavConfig, svcCreator) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(appId) {\r\n            var svc = {\r\n                appId: appId\r\n            };\r\n\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(\"app-sys/template/getall\", { params: { appId: svc.appId } });\r\n            }));\r\n            \r\n            // delete, then reload, for now must use httpget because delete sometimes causes issues\r\n            svc.delete = function del(id) {\r\n                return $http.get(\"app-sys/template/delete\", {params: {appId: svc.appId, Id: id }})\r\n                    .then(svc.liveListReload);\r\n            };\r\n            return svc;\r\n        };\r\n    }]);\nangular.module(\"SxcServices\")\r\n    /*@ngInject*/\r\n    .factory(\"webApiSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", function ($http, eavConfig, svcCreator) {\r\n\r\n        // Construct a service for this specific appId\r\n        return function createSvc(appId) {\r\n            var svc = {\r\n                appId: appId\r\n            };\r\n\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(\"app-sys/appassets/list\", { params: { appId: svc.appId, path: \"api\", mask: \"*.cs\" } });\r\n            }));\r\n\r\n            return svc;\r\n        };\r\n    }]);\nangular.module(\"SxcTemplates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app-main/app-main.html\",\"<div ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\">\\r\\n            <i icon=\\\"remove\\\"></i>\\r\\n        </button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"Main.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div>\\r\\n            <uib-tabset>\\r\\n                <uib-tab>\\r\\n                    <uib-tab-heading>\\r\\n                        <span uib-tooltip=\\\"{{\\'Main.Tab.GettingStarted\\' | translate }}\\\">\\r\\n                            <i icon=\\\"home\\\"></i> {{\\'Main.Tab.GS\\' | translate | trustHtml }}\\r\\n                        </span>\\r\\n                    </uib-tab-heading>\\r\\n\\r\\n                    <iframe ng-src=\\\"{{ vm.config.GettingStartedUrl | trustAsResourceUrl }}\\\" style=\\\"border: none; width: 100%; height: 500px\\\"></iframe>\\r\\n                    \\r\\n                    <div ng-hide=\\\"true\\\">\\r\\n                        original script, maybe we need it\\r\\n                        $(document).ready(function () {\\r\\n                        $(window).bind(\\\"resize\\\", function () {\\r\\n                        var GettingStartedFrame = $(\\\".sc-iframe-gettingstarted\\\");\\r\\n                        GettingStartedFrame.height($(window).height() - 50);\\r\\n                        });\\r\\n\\r\\n                        $(window).trigger(\\\"resize\\\");\\r\\n                        });\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n                <uib-tab select=\\\"vm.view=\\'content\\'\\\">\\r\\n                    <uib-tab-heading>\\r\\n                        <span icon=\\\"list\\\" uib-tooltip=\\\"{{\\'Main.Tab.ContentData\\' | translate }}\\\"></span> {{\\'Main.Tab.CD\\' | translate }}\\r\\n                    </uib-tab-heading>\\r\\n                    <div ng-if=\\\"vm.view == \\'content\\'\\\">\\r\\n                        <div ng-controller=\\\"List as vm\\\" ng-include=\\\"\\'content-types/content-types.html\\'\\\"></div>\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n\\r\\n                <uib-tab select=\\\"vm.view=\\'query\\'\\\" ng-if=\\\"!vm.config.IsContent\\\">\\r\\n                    <uib-tab-heading>\\r\\n                        <span icon=\\\"filter\\\" uib-tooltip=\\\"{{\\'Main.Tab.Query\\' | translate }}\\\"></span> {{\\'Main.Tab.Q\\' | translate }}\\r\\n                    </uib-tab-heading>\\r\\n                    <div ng-if=\\\"vm.view == \\'query\\'\\\">\\r\\n                        <div ng-controller=\\\"PipelineManagement as vm\\\" ng-include=\\\"\\'pipelines/pipelines.html\\'\\\"></div>\\r\\n\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n                <uib-tab select=\\\"vm.view=\\'view\\'\\\">\\r\\n                    <uib-tab-heading>\\r\\n                        <span icon=\\\"picture\\\" uib-tooltip=\\\"{{\\'Main.Tab.ViewsTemplates\\' | translate }}\\\"></span> {{\\'Main.Tab.VT\\' | translate }}\\r\\n                    </uib-tab-heading>\\r\\n                    <div ng-if=\\\"vm.view == \\'view\\'\\\">\\r\\n                        <div ng-controller=\\\"TemplateList as vm\\\" ng-include=\\\"\\'templates/templates.html\\'\\\"></div>\\r\\n\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <uib-tab select=\\\"vm.view=\\'webapi\\'\\\" ng-if=\\\"!vm.config.IsContent\\\">\\r\\n                    <uib-tab-heading>\\r\\n                        <span icon=\\\"flash\\\" uib-tooltip=\\\"{{\\'Main.Tab.WebApi\\' | translate }}\\\"></span> {{\\'Main.Tab.WA\\' | translate }}\\r\\n                    </uib-tab-heading>\\r\\n                    <div ng-if=\\\"vm.view == \\'webapi\\'\\\">\\r\\n                        <div ng-controller=\\\"WebApiMain as vm\\\" ng-include=\\\"\\'web-api/web-api.html\\'\\\"></div>\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n\\r\\n                <uib-tab select=\\\"vm.view=\\'app\\'\\\">\\r\\n                    <uib-tab-heading>\\r\\n                        <span icon=\\\"unchecked\\\" uib-tooltip=\\\"{{\\'Main.Tab.AppSettings\\' | translate }}\\\"></span> {{\\'Main.Tab.AS\\' | translate }}\\r\\n                    </uib-tab-heading>\\r\\n                    <div ng-if=\\\"vm.view == \\'app\\'\\\">\\r\\n                        <div ng-if=\\\"!vm.config.IsContent\\\">\\r\\n                            <div ng-controller=\\\"AppSettings as vm\\\" ng-include=\\\"\\'app-settings/app-settings.html\\'\\\"></div>\\r\\n                            <br />                            \\r\\n                        </div>\\r\\n                        <div ng-controller=\\\"ImportExportIntro as vm\\\" ng-include=\\\"\\'importexport/intro.html\\'\\\"></div>\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n                <uib-tab select=\\\"vm.view=\\'portal\\'\\\">\\r\\n                    <uib-tab-heading>\\r\\n                        <span icon=\\\"globe\\\" uib-tooltip=\\\"{{\\'Main.Tab.PortalLanguages\\' | translate }}\\\"></span> {{\\'Main.Tab.PL\\' | translate }}\\r\\n                    </uib-tab-heading>\\r\\n                    <div ng-if=\\\"vm.view == \\'portal\\'\\\">\\r\\n                        <h3 translate=\\\"Main.Portal.Title\\\"></h3>\\r\\n                        <div translate=\\\"Main.Portal.Intro\\\"></div>\\r\\n                        <div ng-controller=\\\"LanguageSettings as vm\\\" ng-include=\\\"\\'language-settings/languages.html\\'\\\"></div>\\r\\n\\r\\n                    </div>\\r\\n                </uib-tab>\\r\\n\\r\\n            </uib-tabset>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <show-debug-availability class=\\\"pull-right\\\"></show-debug-availability>\\r\\n</div>\");\n$templateCache.put(\"app-settings/app-settings.html\",\"    \\r\\n<div class=\\\"modal-body\\\">\\r\\n    <h3 translate=\\\"AppConfig.Title\\\"></h3>\\r\\n    <div translate=\\\"AppConfig.Intro\\\"></div>\\r\\n\\r\\n    <div class=\\\"clearfix\\\">\\r\\n        <div class=\\\"pull-left btn-group-vertical\\\">\\r\\n            <button uib-tooltip=\\\"{{ \\'AppConfig.Settings.Edit\\' | translate }}\\\" ng-disabled=\\\"!vm.ready()\\\" ng-click=\\\"vm.edit(\\'App-Settings\\')\\\" class=\\\"btn btn-primary btn-square\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"pencil\\\"></i>\\r\\n            </button>\\r\\n            <button uib-tooltip=\\\"{{ \\'AppConfig.Settings.Config\\' | translate }}\\\" ng-disabled=\\\"!vm.ready()\\\" ng-click=\\\"vm.config(\\'App-Settings\\')\\\" class=\\\"btn btn-default btn-square\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"cog\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div style=\\\"margin-left: 50px\\\">\\r\\n            <h4 class=\\\"modal-title\\\" translate=\\\"AppConfig.Settings.Title\\\"></h4>\\r\\n            <div translate=\\\"AppConfig.Settings.Intro\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <div class=\\\"clearfix\\\">\\r\\n        <div class=\\\"pull-left btn-group-vertical\\\">\\r\\n            <button uib-tooltip=\\\"{{\\'AppConfig.Resources.Edit\\' | translate}}\\\" ng-disabled=\\\"!vm.ready()\\\" ng-click=\\\"vm.edit(\\'App-Resources\\')\\\" class=\\\"btn btn-square btn-primary\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"pencil\\\"></i>\\r\\n            </button>\\r\\n\\r\\n            <button uib-tooltip=\\\"{{\\'AppConfig.Resources.Config\\' | translate}}\\\" ng-disabled=\\\"!vm.ready()\\\" ng-click=\\\"vm.config(\\'App-Resources\\')\\\" class=\\\"btn btn-square btn-default\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"cog\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div style=\\\"margin-left: 50px\\\">\\r\\n            <h4 class=\\\"modal-title\\\" translate=\\\"AppConfig.Resources.Title\\\"></h4>\\r\\n            <div translate=\\\"AppConfig.Resources.Intro\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <div>\\r\\n        <div class=\\\"pull-left btn-group-vertical\\\">\\r\\n            <button uib-tooltip=\\\"{{\\'AppConfig.Definition.Edit\\' | translate}}\\\" ng-disabled=\\\"!vm.ready()\\\" ng-click=\\\"vm.editPackage()\\\" class=\\\"btn btn-primary btn-square\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"cog\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div style=\\\"margin-left: 50px\\\">\\r\\n\\r\\n            <h4 class=\\\"modal-title\\\" translate=\\\"AppConfig.Definition.Title\\\"></h4>\\r\\n            <div translate=\\\"AppConfig.Definition.Intro\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\");\n$templateCache.put(\"apps-management/apps.html\",\"<div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button icon=\\\"remove\\\" class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"AppManagement.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <span class=\\\"btn-group\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.browseCatalog()\\\">\\r\\n                <span icon=\\\"search\\\"></span> {{ \\'AppManagement.Buttons.Browse\\' | translate }}\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"vm.import()\\\">\\r\\n                <span icon=\\\"import\\\" uib-tooltip=\\\"{{ \\'AppManagement.Buttons.Import\\' | translate }}\\\"></span>\\r\\n            </button>\\r\\n\\r\\n            <button type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"vm.add()\\\">\\r\\n                <span icon=\\\"plus\\\" uib-tooltip=\\\"{{ \\'AppManagement.Buttons.Create\\' | translate }}\\\"></span>\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"vm.refresh()\\\">\\r\\n                <span icon=\\\"repeat\\\"></span>\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"vm.languages()\\\">\\r\\n                <span icon=\\\"globe\\\"></span>\\r\\n            </button>\\r\\n        </span>\\r\\n        <table class=\\\"table table-hover\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th translate=\\\"AppManagement.Table.Name\\\"></th>\\r\\n                <th translate=\\\"AppManagement.Table.Folder\\\"></th>\\r\\n                <!--<th translate=\\\"AppManagement.Table.Templates\\\"></th>-->\\r\\n                <th> <span icon=\\\"eye-open\\\" uib-tooltip=\\\"{{ \\'AppManagement.Table.Show\\' | translate }}\\\"></span></th>\\r\\n                <th translate=\\\"AppManagement.Table.Actions\\\"></th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr ng-repeat=\\\"item in vm.items | orderBy:\\'Title\\'\\\" ng-click=\\\"vm.manage(item)\\\">\\r\\n                <td class=\\\"clickable\\\">\\r\\n                    <span uib-tooltip=\\\"\\r\\nId: {{item.Id}}\\r\\nGuid: {{item.Guid}}\\\">{{item.Name}}</span>\\r\\n                </td>\\r\\n                <td class=\\\"clickable\\\">{{item.Folder}}</td>\\r\\n                <!--<td></td>-->\\r\\n                <td><span icon=\\\"{{ item.IsHidden ? \\'eye-close\\' : \\'eye-open\\' }}\\\"></span> </td>\\r\\n                <td stop-event=\\\"click\\\">\\r\\n                    <!--<button icon=\\\"cog\\\" ng-disabled=\\\"!item.IsApp\\\" type=\\\"button\\\" class=\\\"btn btn-xs\\\" ng-click=\\\"vm.config(item)\\\"></button>-->\\r\\n                    <!-- disabled export because there\\'s no good way to pass the app-id to the dialog with dependency injection - part of #887 -->\\r\\n                    <!--<button icon=\\\"export\\\" class=\\\"btn btn-xs\\\" type=\\\"button\\\" ng-click=\\\"vm.export(item)\\\"></button>-->\\r\\n                    <button icon=\\\"remove\\\" ng-disabled=\\\"{{!item.IsApp}}\\\" type=\\\"button\\\" class=\\\"btn btn-xs\\\" ng-click=\\\"vm.tryToDelete(item)\\\"></button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr ng-if=\\\"!vm.items.length\\\">\\r\\n                <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"importexport/export-app.html\",\"<div ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button icon=\\\"remove\\\" class=\\\"btn pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"ImportExport.ExportApp.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div translate=\\\"ImportExport.ExportApp.Intro\\\"></div>\\r\\n        <div translate=\\\"ImportExport.ExportApp.FurtherHelp\\\"></div>\\r\\n\\r\\n        <h5>{{\\\"ImportExport.ExportApp.Specifications.Title\\\" | translate}}</h5>\\r\\n        <ul>\\r\\n            <li>{{\\\"ImportExport.ExportApp.Specifications.AppName\\\" | translate}} {{vm.AppInfo.Name}}</li>\\r\\n            <li>{{\\\"ImportExport.ExportApp.Specifications.AppGuid\\\" | translate}} {{vm.AppInfo.Guid}}</li>\\r\\n            <li>{{\\\"ImportExport.ExportApp.Specifications.AppVersion\\\" | translate}} {{vm.AppInfo.Version}}</li>\\r\\n        </ul>\\r\\n\\r\\n        <h5>{{\\\"ImportExport.ExportApp.Content.Title\\\" | translate}}</h5>\\r\\n        <ul>\\r\\n            <li>{{vm.AppInfo.EntitiesCount}} {{\\\"ImportExport.ExportApp.Content.EntitiesCount\\\" | translate}}</li>\\r\\n            <li>{{vm.AppInfo.LanguagesCount}} {{\\\"ImportExport.ExportApp.Content.LanguagesCount\\\" | translate}}</li>\\r\\n            <li>{{vm.AppInfo.TemplatesCount}} {{\\\"ImportExport.ExportApp.Content.TemplatesCount\\\" | translate}} ({{\\\"ImportExport.ExportApp.Content.TokenTemplates\\\" | translate}} {{vm.AppInfo.HasTokenTemplates}}, {{\\\"ImportExport.ExportApp.Content.RazorTemplates\\\" | translate}} {{vm.AppInfo.HasRazorTemplates}})</li>\\r\\n            <li>{{vm.AppInfo.TransferableFilesCount}} {{\\\"ImportExport.ExportApp.Content.TransferableFilesCount\\\" | translate}}</li>\\r\\n            <li>{{vm.AppInfo.FilesCount}} {{\\\"ImportExport.ExportApp.Content.FilesCount\\\" | translate}}</li>\\r\\n        </ul>\\r\\n\\r\\n        <div>\\r\\n            <input ng-model=\\\"vm.IncludeContentGroups\\\" type=\\\"checkbox\\\" ng-disabled=\\\"vm.ResetAppGuid\\\" /> {{\\\"ImportExport.ExportApp.Options.IncludeContentGroups\\\" | translate}}\\r\\n        </div>\\r\\n        <div>\\r\\n            <input ng-model=\\\"vm.ResetAppGuid\\\" type=\\\"checkbox\\\" ng-disabled=\\\"vm.IncludeContentGroups\\\"/> {{\\\"ImportExport.ExportApp.Options.ResetAppGuid\\\" | translate}}\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary pull-left\\\" ng-click=\\\"vm.exportApp()\\\" translate=\\\"ImportExport.ExportApp.Commands.Export\\\" ng-disabled=\\\"vm.IsExporting\\\"></button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default pull-left\\\" ng-click=\\\"vm.exportGit()\\\"\\r\\n                translate=\\\"ImportExport.ExportApp.Commands.ExportForVersionControl\\\"\\r\\n                ng-disabled=\\\"vm.IsExporting\\\"\\r\\n                xxxng-show=\\\"vm.debug.on\\\"\\r\\n                ></button>\\r\\n    </div>\\r\\n    <show-debug-availability class=\\\"pull-right\\\"></show-debug-availability>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"importexport/export-content.html\",\"<div ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\">\\r\\n\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button icon=\\\"remove\\\" class=\\\"btn pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"ImportExport.ExportContent.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n         \\r\\n        <span class=\\\"btn-group\\\" ng-if=\\\"vm.debug.on\\\">\\r\\n            <button icon=\\\"record\\\" type=\\\"button\\\" class=\\\"btn btn-square\\\" ng-click=\\\"vm.changeExportScope()\\\"></button>\\r\\n        </span>\\r\\n\\r\\n        <div translate=\\\"ImportExport.ExportContent.Intro\\\"></div>\\r\\n        <div translate=\\\"ImportExport.ExportContent.FurtherHelp\\\"></div>\\r\\n\\r\\n        <h5 translate=\\\"ImportExport.ExportContent.ContentTypes.Title\\\"></h5>\\r\\n        <ul class=\\\"sc-export-content-list\\\">\\r\\n            <li ng-repeat=\\\"contentType in vm.ContentInfo.ContentTypes\\\">\\r\\n                <label ng-class=\\\"{ \\'active\\': contentType._export }\\\"><input type=\\\"checkbox\\\" ng-model=\\\"contentType._export\\\" /> {{contentType.Name}} ({{contentType.Id}})</label>\\r\\n                <div ng-if=\\\"contentType.Templates.length\\\" class=\\\"sc-export-content-list-inner\\\">\\r\\n                    <h6 translate=\\\"ImportExport.ExportContent.ContentTypes.Templates\\\"></h6>\\r\\n                    <ul>\\r\\n                        <li ng-repeat=\\\"template in contentType.Templates\\\">\\r\\n                            <label ng-class=\\\"{ \\'active\\': template._export }\\\"><input type=\\\"checkbox\\\" ng-model=\\\"template._export\\\" /> {{template.Name}} ({{template.Id}})</label>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <div ng-if=\\\"contentType.Entities.length\\\" class=\\\"sc-export-content-list-inner\\\">\\r\\n                    <h6 translate=\\\"ImportExport.ExportContent.ContentTypes.Entities\\\"></h6>\\r\\n                    <ul>\\r\\n                        <li ng-repeat=\\\"entity in contentType.Entities\\\">\\r\\n                            <label ng-class=\\\"{ \\'active\\': entity._export }\\\"><input type=\\\"checkbox\\\" ng-model=\\\"entity._export\\\" /> {{entity.Title}} ({{entity.Id}})</label>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n\\r\\n            </li>\\r\\n        </ul>\\r\\n\\r\\n        <h5 translate=\\\"ImportExport.ExportContent.TemplatesWithoutContentTypes.Title\\\"></h5>\\r\\n        <ul class=\\\"sc-export-content-list\\\">\\r\\n            <li ng-repeat=\\\"template in vm.ContentInfo.TemplatesWithoutContentTypes\\\">\\r\\n                <label ng-class=\\\"{ \\'active\\': template._export }\\\"><input type=\\\"checkbox\\\" ng-model=\\\"template._export\\\" /> {{template.Name}} ({{template.Id}})</label>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary pull-left\\\" ng-click=\\\"vm.exportContent()\\\" translate=\\\"ImportExport.ExportContent.Commands.Export\\\" ng-disabled=\\\"vm.IsExporting\\\"></button>\\r\\n    </div>\\r\\n\\r\\n    <show-debug-availability class=\\\"pull-right\\\"></show-debug-availability>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<style>\\r\\n    .sc-export-content-list { list-style-type: none; margin: 0; padding: 0; border-top: 1px solid #DDD; }\\r\\n\\r\\n    .sc-export-content-list-inner { padding: 0 0 0 40px; }\\r\\n\\r\\n    .sc-export-content-list > li { margin: 0; padding: 0; border-bottom: 1px solid #DDD; font-weight: bold; }\\r\\n\\r\\n    .sc-export-content-list h6 { font-size: inherit; font-weight: bold; margin: 0; padding: 5px; }\\r\\n\\r\\n    .sc-export-content-list label { display: block; padding: 10px; margin: 0; font-size: inherit; font-weight: normal; }\\r\\n\\r\\n    .sc-export-content-list label:hover { background: #EEE; }\\r\\n    .sc-export-content-list label.active { background: #E6F7E7; }\\r\\n\\r\\n    .sc-export-content-list > li ul { list-style-type: none; margin: 0; padding: 0; }\\r\\n\\r\\n    .sc-export-content-list > li li { font-weight: normal; padding: 0; margin: 0; }\\r\\n</style>\");\n$templateCache.put(\"importexport/import-app.html\",\"<div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button icon=\\\"remove\\\" class=\\\"btn pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"ImportExport.ImportApp.Title\\\"></h3>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"sxc-spinner\\\" ng-show=\\\"vm.IsImporting\\\" class=\\\"sxc-import-spinner\\\"><i class=\\\"eav-icon-spinner animate-spin\\\"></i></div>\\r\\n\\r\\n    <!-- IMPORT -->\\r\\n    <div ng-if=\\\"!vm.ImportResult.Messages\\\">\\r\\n\\r\\n        <div class=\\\"modal-body\\\">\\r\\n\\r\\n            <div translate=\\\"ImportExport.ImportApp.Intro\\\"></div>\\r\\n            <div translate=\\\"ImportExport.ImportApp.FurtherHelp\\\"></div>\\r\\n            <br />\\r\\n\\r\\n            <span class=\\\"btn btn-default btn-file\\\">\\r\\n                <span ng-hide=\\\"vm.ImportFile.name\\\">{{\\\"ImportExport.ImportApp.Commands.SelectFile\\\" | translate}}</span>\\r\\n                <span ng-show=\\\"vm.ImportFile.name\\\">{{vm.ImportFile.name}}</span>\\r\\n                <input type=\\\"file\\\" sxc-file-input=\\\"vm.ImportFile\\\" />\\r\\n            </span>\\r\\n            <br />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary pull-left\\\" ng-click=\\\"vm.importApp()\\\" ng-disabled=\\\"!vm.ImportFile.name || vm.IsImporting\\\" translate=\\\"ImportExport.ImportApp.Commands.Import\\\"></button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- END IMPORT -->\\r\\n\\r\\n\\r\\n    <!-- RESULT -->\\r\\n    <div ng-if=\\\"vm.ImportResult.Messages\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div ng-if=\\\"vm.ImportResult.Succeeded\\\" class=\\\"sxc-message sxc-message-info\\\">\\r\\n                {{\\\"ImportExport.ImportContent.Messages.ImportSucceeded\\\" | translate}} <!-- (<a ng-click=\\\"vm.ImportResult._hideSuccessMessages = !vm.ImportResult._hideSuccessMessages\\\">{{\\\"ImportExport.ImportContent.Commands.ToggleSuccessMessages\\\" | translate}}</a>) -->\\r\\n            </div>\\r\\n            <div ng-if=\\\"!vm.ImportResult.Succeeded\\\" class=\\\"sxc-message sxc-message-error\\\">\\r\\n                {{\\\"ImportExport.ImportContent.Messages.ImportFailed\\\" | translate}}\\r\\n            </div>\\r\\n            <div ng-repeat=\\\"message in vm.ImportResult.Messages\\\" class=\\\"sxc-message\\\" ng-class=\\\"{ \\'sxc-message-warning\\': message.MessageType == 0, \\'sxc-message-success\\': message.MessageType == 1, \\'sxc-message-error\\': message.MessageType == 2, \\'sxc-message-success-hidden\\': vm.ImportResult._hideSuccessMessages }\\\">\\r\\n                {{message.Text}}\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- END RESULT -->\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n    .sxc-message { display: block; padding: 18px 18px; margin-bottom: 18px; border: 1px solid rgba(2, 139, 255, 0.2); border-radius: 3px; background: rgba(2,139,255,0.15); max-width: 980px; }\\r\\n\\r\\n    .sxc-message-success.sxc-message { background-color: rgba(0,255,0,0.15); border-color: rgba(0, 255, 0, 0.5); }\\r\\n    \\r\\n    .sxc-message-success.sxc-message-success-hidden { display: none; }\\r\\n    \\r\\n    .sxc-message-warning.sxc-message { background-color: rgba(255,255,0,0.15); border-color: #CDB21F; }\\r\\n\\r\\n    .sxc-message-error.sxc-message { background-color: rgba(255,0,0,0.15); border-color: rgba(255, 0, 0, 0.2); }\\r\\n</style>\");\n$templateCache.put(\"importexport/import-content.html\",\"<div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button icon=\\\"remove\\\" class=\\\"btn pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"ImportExport.ImportContent.Title\\\"></h3>\\r\\n    </div>\\r\\n\\r\\n    <div ng-show=\\\"true || vm.IsImporting\\\" class=\\\"sxc-import-spinner\\\"><i class=\\\"eav-icon-spinner animate-spin\\\"></i></div>\\r\\n\\r\\n    <!-- IMPORT -->\\r\\n    <div ng-if=\\\"!vm.ImportResult.Messages\\\">\\r\\n\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div translate=\\\"ImportExport.ImportContent.Intro\\\"></div>\\r\\n            <div translate=\\\"ImportExport.ImportContent.FurtherHelp\\\"></div>\\r\\n            <br />\\r\\n            <span class=\\\"btn btn-default btn-file\\\">\\r\\n                <span ng-hide=\\\"vm.ImportFile.name\\\">{{\\\"ImportExport.ImportContent.Commands.SelectFile\\\" | translate}}</span>\\r\\n                <span ng-show=\\\"vm.ImportFile.name\\\">{{vm.ImportFile.name}}</span>\\r\\n                <input type=\\\"file\\\" sxc-file-input=\\\"vm.ImportFile\\\" />\\r\\n            </span>\\r\\n            <br />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary pull-left\\\" ng-click=\\\"vm.importContent()\\\" ng-disabled=\\\"!vm.ImportFile.name || vm.IsImporting\\\" translate=\\\"ImportExport.ImportContent.Commands.Import\\\"></button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- END IMPORT -->\\r\\n\\r\\n    <!-- RESULT -->\\r\\n    <div ng-if=\\\"vm.ImportResult.Messages\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div ng-if=\\\"vm.ImportResult.Succeeded\\\" class=\\\"sxc-message sxc-message-info\\\">\\r\\n                {{\\\"ImportExport.ImportContent.Messages.ImportSucceeded\\\" | translate}} (<a ng-click=\\\"vm.ImportResult._hideSuccessMessages = !vm.ImportResult._hideSuccessMessages\\\">{{\\\"ImportExport.ImportContent.Commands.ToggleSuccessMessages\\\" | translate}}</a>)\\r\\n            </div>\\r\\n            <div ng-if=\\\"!vm.ImportResult.Succeeded\\\" class=\\\"sxc-message sxc-message-error\\\">\\r\\n                {{\\\"ImportExport.ImportContent.Messages.ImportFailed\\\" | translate}}\\r\\n            </div>\\r\\n            <div ng-repeat=\\\"message in vm.ImportResult.Messages\\\" class=\\\"sxc-message\\\" ng-class=\\\"{ \\'sxc-message-warning\\': message.MessageType == 0, \\'sxc-message-success\\': message.MessageType == 1, \\'sxc-message-error\\': message.MessageType == 2, \\'sxc-message-success-hidden\\': vm.ImportResult._hideSuccessMessages }\\\">\\r\\n                {{message.Message}}\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- END RESULT -->\\r\\n</div>\");\n$templateCache.put(\"importexport/intro.html\",\"<div class=\\\"modal-body\\\">\\r\\n    <div>\\r\\n        <div class=\\\"pull-left btn-group-vertical\\\">\\r\\n            <button uib-tooltip=\\\"{{\\'AppConfig.Export.Button\\' | translate}}\\\" ng-click=\\\"vm.exportAll()\\\" class=\\\"btn btn-square btn-primary\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"export\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div style=\\\"margin-left: 50px\\\">\\r\\n            <h4 class=\\\"modal-title\\\" translate=\\\"AppConfig.Export.Title\\\"></h4>\\r\\n            <div translate=\\\"AppConfig.Export.Intro\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <br />\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"pull-left btn-group-vertical\\\">\\r\\n            <button uib-tooltip=\\\"{{\\'ImportExport.Buttons.Export\\' | translate}}\\\" ng-click=\\\"vm.export()\\\" class=\\\"btn btn-square btn-primary\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"export\\\"></i>\\r\\n            </button>\\r\\n\\r\\n            <button uib-tooltip=\\\"{{\\'ImportExport.Buttons.Import\\' | translate}}\\\" ng-click=\\\"vm.import()\\\" class=\\\"btn btn-square btn-primary\\\" type=\\\"button\\\">\\r\\n                <i icon=\\\"import\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div style=\\\"margin-left: 50px\\\">\\r\\n            <h4 class=\\\"modal-title\\\" translate=\\\"ImportExport.Title\\\"></h4>\\r\\n            <div translate=\\\"ImportExport.Intro\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <br />\\r\\n\\r\\n</div>\");\n$templateCache.put(\"language-settings/languages.html\",\"<div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 translate=\\\"Language.Title\\\"></h4>        \\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div translate=\\\"Language.Intro\\\"></div>\\r\\n\\r\\n        <table class=\\\"table table-hover\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th translate=\\\"Language.Table.Code\\\"></th>\\r\\n                    <th translate=\\\"Language.Table.Culture\\\"></th>\\r\\n                    <th translate=\\\"Language.Table.Status\\\"></th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr ng-repeat=\\\"item in vm.items | orderBy:[\\'ContentType.Name\\',\\'Name\\']\\\" class=\\\"clickable-row\\\" ng-click=\\\"vm.toggle(item)\\\">\\r\\n                    <td class=\\\"clickable\\\">{{item.Code}}</td>\\r\\n                    <td class=\\\"clickable\\\">{{item.Culture}}</span></td>\\r\\n                    <td class=\\\"clickable text-nowrap\\\">\\r\\n                        <span ng-click=\\\"vm.save(item)\\\" stop-event=\\\"click\\\">\\r\\n                            <switch ng-model=\\\"item.IsEnabled\\\"></switch>\\r\\n                        </span>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr ng-if=\\\"!vm.items.length\\\">\\r\\n                    <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        &nbsp;\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"manage-content-list/manage-content-list.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"><i icon=\\\"remove\\\"></i></button>\\r\\n    <h3 class=\\\"modal-title\\\" translate=\\\"ManageContentList.Title\\\"></h3>\\r\\n</div>\\r\\n<div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div>\\r\\n            <p translate=\\\"ManageContentList.HeaderIntro\\\"></p>\\r\\n            <div>\\r\\n                <a ng-if=\\\"vm.header.Type\\\" ng-click=\\\"vm.editHeader()\\\"> {{ vm.header.Title }} <i icon=\\\"pencil\\\" class=\\\"pull-right\\\"></i></a>\\r\\n                <span ng-if=\\\"!vm.header.Type\\\" translate=\\\"ManageContentList.NoHeaderInThisList\\\"></span>\\r\\n            </div>\\r\\n            <br/>\\r\\n        </div>\\r\\n        <div>\\r\\n            <p translate=\\\"ManageContentList.Intro\\\"></p>\\r\\n            <div ui-tree=\\\"options\\\" data-empty-placeholder-enabled=\\\"false\\\">\\r\\n                <ol ui-tree-nodes ng-model=\\\"vm.items\\\">\\r\\n                    <li ng-repeat=\\\"item in vm.items\\\" ui-tree-node class=\\\"eav-entityselect-item\\\" style=\\\"width: 100%\\\">\\r\\n                        <div ui-tree-handle>\\r\\n                            <i icon=\\\"move\\\" title=\\\"{{ \\'FieldType.Entity.DragMove\\' | translate }}\\\" class=\\\"pull-left eav-entityselect-sort\\\"></i>\\r\\n                            <span>&nbsp;{{item.Title}} ({{item.Id}})</span>\\r\\n                            <span class=\\\"eav-entityselect-item-actions\\\">\\r\\n                                <span ng-if=\\\"item.Id !== 0\\\" data-nodrag title=\\\"{{ \\'FieldType.Entity.Edit\\' | translate }}\\\" ng-click=\\\"vm.edit(item.Id)\\\">\\r\\n                                    <i icon=\\\"pencil\\\"></i>\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </li>\\r\\n                </ol>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-primary btn-square btn-lg pull-left\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\"><i icon=\\\"ok\\\"></i></button>\\r\\n</div>\");\n$templateCache.put(\"replace-content/replace-content.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"><i icon=\\\"remove\\\"></i></button>\\r\\n    <h3 class=\\\"modal-title\\\" translate=\\\"ReplaceContent.Title\\\"></h3>\\r\\n</div>\\r\\n<div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <p translate=\\\"ReplaceContent.Intro\\\"></p>\\r\\n        <div translate=\\\"ReplaceContent.ChooseItem\\\"></div>\\r\\n        <div>\\r\\n            <select class=\\\"input-lg\\\"\\r\\n                    ng-model=\\\"vm.item.id\\\"\\r\\n                    ng-options=\\\"vm.convertToInt(key) as ((value || \\'[?]\\') + \\' (\\' + key + \\')\\') for (key,value) in vm.options\\\"\\r\\n                    style=\\\"max-width: 100%\\\"></select>\\r\\n            &nbsp;<button type=\\\"button\\\" class=\\\"btn btn-lg\\\" ng-click=\\\"vm.copySelected()\\\">\\r\\n                <i icon=\\\"duplicate\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-primary btn-square btn-lg pull-left\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\"><i icon=\\\"ok\\\"></i></button>\\r\\n</div>\");\n$templateCache.put(\"templates/templates.html\",\"\\r\\n\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <button icon=\\\"plus\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-square\\\" ng-click=\\\"vm.add()\\\"> </button>\\r\\n    <span class=\\\"btn-group\\\" ng-if=\\\"vm.debug.on\\\">\\r\\n        <button icon=\\\"repeat\\\" type=\\\"button\\\" class=\\\"btn btn-square\\\" ng-click=\\\"vm.refresh()\\\"></button>\\r\\n    </span>\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th translate=\\\"Templates.Table.TName\\\"></th>\\r\\n            <th translate=\\\"Templates.Table.TPath\\\"></th>\\r\\n            <th translate=\\\"Templates.Table.CType\\\"></th>\\r\\n            <th translate=\\\"Templates.Table.DemoC\\\"></th>\\r\\n            <th>\\r\\n                <span uib-tooltip=\\\"{{\\'Templates.Table.Show\\' | translate}}\\\"><i icon=\\\"eye-open\\\"></i></span>\\r\\n            </th>\\r\\n            <th translate=\\\"Templates.Table.UrlKey\\\"></th>\\r\\n            <th translate=\\\"Templates.Table.Actions\\\"></th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr ng-repeat=\\\"item in vm.items | orderBy:[\\'ContentType.Name\\',\\'Name\\']\\\" class=\\\"clickable-row\\\" ng-click=\\\"vm.edit(item)\\\">\\r\\n            <td class=\\\"clickable\\\">{{item.Name}}</td>\\r\\n            <td class=\\\"clickable\\\"><span uib-tooltip=\\\"{{item.TemplatePath}}\\\">...{{item.TemplatePath.split(\\\"/\\\").pop()}}</span></td>\\r\\n            <td class=\\\"clickable\\\">\\r\\n                <span uib-tooltip=\\\"\\r\\nCont: {{item.ContentType.Name}} ({{item.ContentType.Id}})\\r\\nPres: {{item.PresentationType.Name}} ({{item.PresentationType.Id}})\\r\\nListC: {{item.ListContentType.Name}} ({{item.ListContentType.Id}})\\r\\nListP: {{item.ListPresentationType.Name}} ({{item.ListPresentationType.Id}})\\r\\n\\\">{{item.ContentType.Name}}</span>\\r\\n            </td>\\r\\n            <td class=\\\"clickable\\\">\\r\\n                <span uib-tooltip=\\\"\\r\\nDemo: {{item.ContentType.DemoTitle}} ({{item.ContentType.DemoId}})\\r\\nPres: {{item.PresentationType.DemoTitle}} ({{item.PresentationType.DemoId}})\\r\\nListC: {{item.ListContentType.DemoTitle}} ({{item.ListContentType.DemoId}})\\r\\nListP: {{item.ListPresentationType.DemoTitle}} ({{item.ListPresentationType.DemoId}})\\r\\n\\\">{{item.ContentType.DemoId}}</span>\\r\\n            </td>\\r\\n            <td>\\r\\n                <span icon=\\\"{{ item.IsHidden ? \\'close\\' : \\'eye-open\\'}}\\\"></span>\\r\\n            </td>\\r\\n            <td class=\\\"clickable\\\"><span uib-tooltip=\\\"{{item.ViewNameInUrl}}\\\">{{item.ViewNameInUrl}}</span></td>\\r\\n            <td class=\\\"text-nowrap\\\" stop-event=\\\"click\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.permissions(item)\\\">\\r\\n                    <i icon=\\\"user\\\"></i>\\r\\n                </button>\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.tryToDelete(item)\\\">\\r\\n                    <span icon=\\\"remove\\\"></span>\\r\\n                </button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr ng-if=\\\"!vm.items.length\\\">\\r\\n            <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n\\r\\n    <div class=\\\"\\\" translate=\\\"Templates.InfoHideAdvanced\\\"></div>\\r\\n</div>\");\n$templateCache.put(\"web-api/web-api.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <h3 class=\\\"modal-title\\\" translate=\\\"WebApi.Title\\\"></h3>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <p translate=\\\"WebApi.Intro\\\"></p>\\r\\n    <button icon=\\\"plus\\\" type=\\\"button\\\" class=\\\"btn btn-square\\\" ng-click=\\\"vm.add()\\\"> </button>\\r\\n    <button icon=\\\"repeat\\\" type=\\\"button\\\" class=\\\"btn btn-square\\\" ng-click=\\\"vm.refresh()\\\"></button>\\r\\n\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th translate=\\\"WebApi.ListTitle\\\"></th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr ng-repeat=\\\"item in vm.items | orderBy:[\\'ContentType.Name\\',\\'Name\\']\\\">\\r\\n                <td><span uib-tooltip=\\\"{{item.TemplatePath}}\\\">{{item}}</span></td>\\r\\n            </tr>\\r\\n            <tr ng-if=\\\"!vm.items.length\\\">\\r\\n                <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <p translate=\\\"WebApi.QuickStart\\\"></p>\\r\\n\\r\\n</div>\\r\\n\\r\\n\");}]);\n(function () { \r\n\r\n    TemplateListController.$inject = [\"templatesSvc\", \"eavAdminDialogs\", \"eavConfig\", \"appId\", \"debugState\", \"$translate\", \"$uibModalInstance\"];\r\n    angular.module(\"TemplatesApp\", [\r\n        \"SxcServices\",\r\n        \"EavConfiguration\",\r\n        \"EavAdminUi\",\r\n        \"EavServices\",\r\n        \"EavDirectives\"\r\n    ])\r\n        .controller(\"TemplateList\", TemplateListController)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function TemplateListController(templatesSvc, eavAdminDialogs, eavConfig, appId, debugState, $translate, $uibModalInstance) {\r\n        var vm = this;\r\n        vm.debug = debugState;\r\n\r\n        var svc = templatesSvc(appId);\r\n\r\n        vm.edit = function edit(item) {\r\n            eavAdminDialogs.openItemEditWithEntityId(item.Id, svc.liveListReload);\r\n        };\r\n        \r\n\r\n\r\n        vm.add = function addNew() {\r\n            eavAdminDialogs.openItemNew(\"2SexyContent-Template\", svc.liveListReload);\r\n        };\r\n\r\n        vm.items = svc.liveList();\r\n        vm.refresh = svc.liveListReload;\r\n\r\n        vm.permissions = function permissions(item) {\r\n            return eavAdminDialogs.openPermissionsForGuid(appId, item.Guid, svc.liveListReload);\r\n        };\r\n\r\n        vm.tryToDelete = function tryToDelete(item) {\r\n            if (confirm($translate.instant(\"General.Questions.DeleteEntity\", { title: item.Name, id: item.Id})))\r\n                svc.delete(item.Id);\r\n        };\r\n\r\n        vm.close = function () {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        };\r\n    }\r\n\r\n} ());\n(function () { \r\n\r\n    WebApiMainController.$inject = [\"appId\", \"webApiSvc\", \"eavAdminDialogs\", \"$uibModalInstance\", \"$translate\"];\r\n    angular.module(\"WebApiApp\", [\r\n        \"SxcServices\",\r\n        //\"EavConfiguration\",\r\n        \"EavAdminUi\",\r\n        \"EavServices\",\r\n        \"EavDirectives\"\r\n    ])\r\n        .controller(\"WebApiMain\", WebApiMainController)\r\n        ;\r\n\r\n    /*@ngInject*/\r\n    function WebApiMainController(appId, webApiSvc, eavAdminDialogs, $uibModalInstance, $translate) {\r\n        var vm = this;\r\n        \r\n        var svc = webApiSvc(appId);\r\n\r\n        vm.items = svc.liveList();\r\n        vm.refresh = svc.liveListReload;\r\n\r\n        vm.add = function add() {\r\n            alert($translate.instant(\"WebApi.AddDoesntExist\"));\r\n        };\r\n\r\n        // not implemented yet...\r\n        vm.tryToDelete = function tryToDelete(item) {\r\n            if (confirm($translate.instant(\"General.Messages.DeleteEntity\", { title: item.Title, id: item.Id})))   //\"Delete '\" + item.Title + \"' (\" + item.Id + \") ?\"))\r\n                svc.delete(item.Id);\r\n        };\r\n\r\n        vm.close = function () {\r\n            $uibModalInstance.dismiss(\"cancel\");\r\n        };\r\n    }\r\n\r\n} ());"],"sourceRoot":"/source/"}