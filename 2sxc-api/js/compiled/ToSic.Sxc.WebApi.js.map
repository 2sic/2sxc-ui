{"version":3,"file":"ToSic.Sxc.WebApi.js","sourceRoot":"","sources":["../ToSic.Sxc.WebApi.ts"],"names":[],"mappings":"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","sourcesContent":["\r\ndeclare const $: any;\r\nimport { SxcInstance } from \"./ToSic.Sxc.Instance\";\r\n\r\n/**\r\n * helper API to run ajax / REST calls to the server\r\n * it will ensure that the headers etc. are set correctly\r\n * and that urls are rewritten\r\n */\r\nexport class SxcWebApiWithInternals {\r\n    constructor(\r\n        private readonly controller: SxcInstance,\r\n        private readonly id: number,\r\n        private readonly cbid: number,\r\n    ) {\r\n\r\n    }\r\n    /**\r\n     * returns an http-get promise\r\n     * @param settingsOrUrl the url to get\r\n     * @param params jQuery style ajax parameters\r\n     * @param data jQuery style data for post/put requests\r\n     * @param preventAutoFail\r\n     * @returns {Promise} jQuery ajax promise object\r\n     */\r\n    get(settingsOrUrl: string | any, params?: any, data?: any, preventAutoFail?: boolean): any {\r\n        return this.request(settingsOrUrl, params, data, preventAutoFail, \"GET\");\r\n    }\r\n\r\n    /**\r\n     * returns an http-get promise\r\n     * @param settingsOrUrl the url to get\r\n     * @param params jQuery style ajax parameters\r\n     * @param data jQuery style data for post/put requests\r\n     * @param preventAutoFail\r\n     * @returns {Promise} jQuery ajax promise object\r\n     */\r\n    post(settingsOrUrl: string | any, params?: any, data?: any, preventAutoFail?: boolean): any {\r\n        return this.request(settingsOrUrl, params, data, preventAutoFail, \"POST\");\r\n    }\r\n\r\n    /**\r\n     * returns an http-get promise\r\n     * @param settingsOrUrl the url to get\r\n     * @param params jQuery style ajax parameters\r\n     * @param data jQuery style data for post/put requests\r\n     * @param preventAutoFail\r\n     * @returns {Promise} jQuery ajax promise object\r\n     */\r\n    delete(settingsOrUrl: string | any, params?: any, data?: any, preventAutoFail?: boolean): any {\r\n        return this.request(settingsOrUrl, params, data, preventAutoFail, \"DELETE\");\r\n    }\r\n\r\n    /**\r\n     * returns an http-get promise\r\n     * @param settingsOrUrl the url to get\r\n     * @param params jQuery style ajax parameters\r\n     * @param data jQuery style data for post/put requests\r\n     * @param preventAutoFail\r\n     * @returns {Promise} jQuery ajax promise object\r\n     */\r\n    put(settingsOrUrl: string | any, params?: any, data?: any, preventAutoFail?: boolean): any {\r\n        return this.request(settingsOrUrl, params, data, preventAutoFail, \"PUT\");\r\n    }\r\n\r\n    private request(settings: string | any, params: any, data: any, preventAutoFail: boolean, method: string): any {\r\n\r\n        // url parameter: autoconvert a single value (instead of object of values) to an id=... parameter\r\n        // tslint:disable-next-line:curly\r\n        if (typeof params !== \"object\" && typeof params !== \"undefined\")\r\n            params = { id: params };\r\n\r\n        // if the first parameter is a string, resolve settings\r\n        if (typeof settings === \"string\") {\r\n            const controllerAction = settings.split(\"/\");\r\n            const controllerName = controllerAction[0];\r\n            const actionName = controllerAction[1];\r\n\r\n            if (controllerName === \"\" || actionName === \"\")\r\n                alert(\"Error: controller or action not defined. Will continue with likely errors.\");\r\n\r\n            settings = {\r\n                controller: controllerName,\r\n                action: actionName,\r\n                params,\r\n                data,\r\n                url: controllerAction.length > 2 ? settings : null,\r\n                preventAutoFail,\r\n            };\r\n        }\r\n\r\n        const defaults = {\r\n            method: method === null ? \"POST\" : method,\r\n            params: null as any,\r\n            preventAutoFail: false,\r\n        };\r\n        settings = $.extend({}, defaults, settings);\r\n        const sf = $.ServicesFramework(this.id);\r\n        const cbid = this.cbid; // must read here, as the \"this\" will change inside the method\r\n\r\n        const promise = $.ajax({\r\n            async: true,\r\n            dataType: settings.dataType || \"json\", // default is json if not specified\r\n            data: JSON.stringify(settings.data),\r\n            contentType: \"application/json\",\r\n            type: settings.method,\r\n            url: this.getActionUrl(settings),\r\n            beforeSend(xhr: any) {\r\n                xhr.setRequestHeader(\"ContentBlockId\", cbid);\r\n                sf.setModuleHeaders(xhr);\r\n            },\r\n        });\r\n\r\n        if (!settings.preventAutoFail)\r\n            promise.fail(this.controller.showDetailedHttpError);\r\n\r\n        return promise;\r\n    }\r\n\r\n    private getActionUrl(settings: any): string {\r\n        const sf = $.ServicesFramework(this.id);\r\n        const base = (settings.url)\r\n            ? this.controller.resolveServiceUrl(settings.url)\r\n            : sf.getServiceRoot(\"2sxc\") + \"app/auto/api/\" + settings.controller + \"/\" + settings.action;\r\n        return base + (settings.params === null ? \"\" : (\"?\" + $.param(settings.params)));\r\n    }\r\n\r\n}\r\n"]}