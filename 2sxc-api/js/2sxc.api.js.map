{"version":3,"file":"2sxc.api.js","sourceRoot":"","sources":["2sxc.api.ts","ToSic.Sxc.ts","ToSic.Sxc.WebApi.ts"],"names":[],"mappings":"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","sourcesContent":["// this is the 2sxc-javascript API\r\n// 2sxc will include this automatically when a user has edit-rights\r\n// a template developer will typically use this to use the data-api to read 2sxc-data from the server\r\n// read more about this in the wiki: https://github.com/2sic/2sxc/wiki/JavaScript-%242sxc\r\n\r\ndeclare const $;\r\n\r\n// ReSharper disable InconsistentNaming\r\ninterface Window { $2sxc: SxcControllerWithInternals; }\r\n\r\n\r\n(() => {\r\n    if (window.$2sxc) return;   // prevent double execution\r\n\r\n    var $2sxc = window.$2sxc = getInstance as any as SxcControllerWithInternals;\r\n    \r\n    function getInstance(id: number | HTMLElement, cbid?: number): ToSic.Sxc.SxcInstanceWithInternals  {\r\n\r\n        // if it's a dom-element, use auto-find\r\n        if (typeof id === \"object\") return autoFind(id);\r\n\r\n        if (!cbid) cbid = id;           // if content-block is unknown, use id of module\r\n        const cacheKey = id + \":\" + cbid; // neutralize the id from old \"34\" format to the new \"35:353\" format\r\n\r\n        // either get the cached controller from previous calls, or create a new one\r\n        if ($2sxc._controllers[cacheKey]) return $2sxc._controllers[cacheKey];\r\n\r\n        // also init the data-cache in case it's ever needed\r\n        if (!$2sxc._data[cacheKey]) $2sxc._data[cacheKey] = {};\r\n\r\n        return $2sxc._controllers[cacheKey] = new ToSic.Sxc.SxcInstanceWithInternals(id, cbid, cacheKey, $2sxc, $.ServicesFramework);\r\n    };\r\n    \r\n\r\n    $2sxc._controllers = {} as any;\r\n    $2sxc.sysinfo = {\r\n        version: \"09.05.00\",\r\n        description: \"The 2sxc Controller object - read more about it on 2sxc.org\"\r\n    };\r\n\r\n    $2sxc.beta = {};\r\n    $2sxc._data = {};\r\n\r\n\r\n    // this creates a full-screen iframe-popup and provides a close-command to finish the dialog as needed\r\n    $2sxc.totalPopup = {\r\n        open(url: string, callback: Function):void {\r\n            // count parents to see how high the z-index needs to be\r\n            let z = 10000010, p = window; // Needs at least 10000000 to be on top of the DNN9 bar\r\n            while (p !== window.top && z < 10000100) {\r\n                z++;\r\n                p = p.parent;\r\n            }\r\n\r\n            const wrapper = document.createElement(\"div\");\r\n            wrapper.setAttribute(\"style\", \" top: 0;left: 0;width: 100%;height: 100%; position:fixed; z-index:\" + z);\r\n            document.body.appendChild(wrapper);\r\n\r\n            const ifrm = document.createElement(\"iframe\");\r\n            ifrm.setAttribute(\"allowtransparency\", \"true\");\r\n            ifrm.setAttribute(\"style\", \"top: 0;left: 0;width: 100%;height: 100%;\");\r\n            ifrm.setAttribute(\"src\", url);\r\n            wrapper.appendChild(ifrm);\r\n            document.body.className += \" sxc-popup-open\";\r\n            $2sxc.totalPopup.frame = ifrm;\r\n            $2sxc.totalPopup.callback = callback;\r\n        },\r\n        close(): void {\r\n            if ($2sxc.totalPopup.frame) {\r\n                document.body.className = document.body.className.replace(\"sxc-popup-open\", \"\");\r\n                const frm = $2sxc.totalPopup.frame;\r\n                frm.parentNode.parentNode.removeChild(frm.parentNode);\r\n                $2sxc.totalPopup.callback();\r\n            }\r\n        },\r\n        closeThis():void {\r\n            (window.parent as any).$2sxc.totalPopup.close();\r\n        },\r\n        frame: undefined,\r\n        callback: undefined\r\n    };\r\n\r\n    $2sxc.urlParams = {\r\n        get(name) {\r\n            // warning: this method is duplicated in 2 places - keep them in sync. \r\n            // locations are eav and 2sxc4ng \r\n            name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n            const searchRx = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\", \"i\");\r\n            let results = searchRx.exec(location.search),\r\n                strResult:string;\r\n\r\n            if (results === null) {\r\n                const hashRx = new RegExp(\"[#&]\" + name + \"=([^&#]*)\", \"i\");\r\n                results = hashRx.exec(location.hash);\r\n            }\r\n\r\n            // if nothing found, try normal URL because DNN places parameters in /key/value notation\r\n            if (results === null) {\r\n                // Otherwise try parts of the URL\r\n                const matches = window.location.pathname.match(new RegExp(\"/\" + name + \"/([^/]+)\", \"i\"));\r\n\r\n                // Check if we found anything, if we do find it, we must reverse the results so we get the \"last\" one in case there are multiple hits\r\n                if (matches && matches.length > 1)\r\n                    strResult = matches.reverse()[0];\r\n            } else\r\n                strResult = results[1];\r\n\r\n            return strResult === null || strResult === undefined ? \"\" : decodeURIComponent(strResult.replace(/\\+/g, \" \"));\r\n        },\r\n        require(name) {\r\n            const found = $2sxc.urlParams.get(name);\r\n            if (found === \"\") {\r\n                const message = `Required parameter (${name}) missing from url - cannot continue`;\r\n                alert(message);\r\n                throw message;\r\n            }\r\n            return found;\r\n        }\r\n    };\r\n\r\n    function autoFind(domElement: HTMLElement): ToSic.Sxc.SxcInstanceWithInternals {\r\n        const containerTag = $(domElement).closest(\".sc-content-block\")[0];\r\n        if (!containerTag) return null;\r\n        const iid = containerTag.getAttribute(\"data-cb-instance\"),\r\n            cbid = containerTag.getAttribute(\"data-cb-id\");\r\n        if (!iid || !cbid) return null;\r\n        return $2sxc(iid, cbid) as any as ToSic.Sxc.SxcInstanceWithInternals;\r\n    };\r\n\r\n    // note: I would like to remove this from $2sxc, but it's currently used both in the inpage-edit and in the dialogs\r\n    // debug state which is needed in various places\r\n    $2sxc.debug = {\r\n        load: ($2sxc.urlParams.get(\"debug\") === \"true\"),\r\n        uncache: $2sxc.urlParams.get(\"sxcver\")\r\n    };\r\n\r\n\r\n    // mini-helpers to manage 2sxc parts, a bit like a dependency loader which will optimize to load min/max depending on debug state\r\n    $2sxc.parts = {\r\n        getUrl(url:string, preventUnmin:boolean) {\r\n            let r = (preventUnmin || !$2sxc.debug.load) ? url : url.replace(\".min\", \"\"); // use min or not\r\n            if ($2sxc.debug.uncache && r.indexOf(\"sxcver\") === -1)\r\n                r = r + ((r.indexOf(\"?\") === -1) ? \"?\" : \"&\") + \"sxcver=\" + $2sxc.debug.uncache;\r\n            return r;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    /**\r\n    * helper API to run ajax / REST calls to the server\r\n    * it will ensure that the headers etc. are set correctly\r\n    * and that urls are rewritten\r\n    */\r\n\r\n\r\n    // var test = new _2sxc.T17();\r\n})();\r\n// ReSharper restore InconsistentNaming\r\n","\r\nmodule ToSic.Sxc {\r\n\r\n    /**\r\n     * The typical sxc-instance object for a specific DNN module or content-block\r\n     */\r\n    export class SxcInstance {\r\n        /**\r\n         * helpers for ajax calls\r\n         */\r\n        webApi: SxcWebApiWithInternals;\r\n        protected serviceRoot: string;\r\n        private readonly serviceScopes = [\"app\", \"app-sys\", \"app-api\", \"app-query\", \"app-content\", \"eav\", \"view\", \"dnn\"];\r\n\r\n        constructor(\r\n            /**\r\n             * the sxc-instance ID, which is usually the DNN Module Id\r\n             */\r\n            public id: number,\r\n\r\n            /**\r\n             * content-block ID, which is either the module ID, or the content-block definitiion entity ID\r\n             * this is an advanced concept you usually don't care about, otherwise you should research it\r\n             */\r\n            public cbid: number,\r\n            protected readonly dnnSf: any\r\n        ) {\r\n            this.serviceRoot = dnnSf(id).getServiceRoot(\"2sxc\");\r\n            this.webApi = new ToSic.Sxc.SxcWebApiWithInternals(this, id, cbid);\r\n        }\r\n\r\n        /**\r\n         * converts a short api-call path like \"/app/Blog/query/xyz\" to the DNN full path\r\n         * which varies from installation to installation like \"/desktopmodules/api/2sxc/app/...\"\r\n         * @param virtualPath \r\n         * @returns mapped path \r\n         */\r\n        resolveServiceUrl(virtualPath: string) {\r\n            const scope = virtualPath.split(\"/\")[0].toLowerCase();\r\n\r\n            // stop if it's not one of our special paths\r\n            if (this.serviceScopes.indexOf(scope) === -1)\r\n                return virtualPath;\r\n\r\n            return this.serviceRoot + scope + \"/\" + virtualPath.substring(virtualPath.indexOf(\"/\") + 1);\r\n        }\r\n\r\n\r\n        // Show a nice error with more infos around 2sxc\r\n        showDetailedHttpError(result: any): any {\r\n            if (window.console)\r\n                console.log(result);\r\n\r\n            if (result.status === 404 &&\r\n                result.config &&\r\n                result.config.url &&\r\n                result.config.url.indexOf(\"/dist/i18n/\") > -1) {\r\n                if (window.console)\r\n                    console.log(\"just fyi: failed to load language resource; will have to use default\");\r\n                return result;\r\n            }\r\n\r\n\r\n            // if it's an unspecified 0-error, it's probably not an error but a cancelled request, (happens when closing popups containing angularJS)\r\n            if (result.status === 0 || result.status === -1)\r\n                return result;\r\n\r\n            // let's try to show good messages in most cases\r\n            let infoText = \"Had an error talking to the server (status \" + result.status + \").\";\r\n            const srvResp = result.responseText\r\n                ? JSON.parse(result.responseText) // for jquery ajax errors\r\n                : result.data; // for angular $http\r\n            if (srvResp) {\r\n                const msg = srvResp.Message;\r\n                if (msg) infoText += \"\\nMessage: \" + msg;\r\n                const msgDet = srvResp.MessageDetail || srvResp.ExceptionMessage;\r\n                if (msgDet) infoText += \"\\nDetail: \" + msgDet;\r\n\r\n\r\n                if (msgDet && msgDet.indexOf(\"No action was found\") === 0)\r\n                    if (msgDet.indexOf(\"that matches the name\") > 0)\r\n                        infoText += \"\\n\\nTip from 2sxc: you probably got the action-name wrong in your JS.\";\r\n                    else if (msgDet.indexOf(\"that matches the request.\") > 0)\r\n                        infoText += \"\\n\\nTip from 2sxc: Seems like the parameters are the wrong amount or type.\";\r\n\r\n                if (msg && msg.indexOf(\"Controller\") === 0 && msg.indexOf(\"not found\") > 0)\r\n                    infoText +=\r\n                        \"\\n\\nTip from 2sxc: you probably spelled the controller name wrong or forgot to remove the word 'controller' from the call in JS. To call a controller called 'DemoController' only use 'Demo'.\";\r\n\r\n            }\r\n            infoText += \"\\n\\nif you are an advanced user you can learn more about what went wrong - discover how on 2sxc.org/help?tag=debug\";\r\n            alert(infoText);\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enhanced sxc instance with additional editing functionality\r\n     * Use this, if you intend to run content-management commands like \"edit\" from your JS directly\r\n     */\r\n    export class SxcInstanceWithEditing extends SxcInstance {\r\n        /**\r\n         * manage object which provides access to additional content-management features\r\n         * it only exists if 2sxc is in edit mode (otherwise the JS are not included for these features)\r\n         */\r\n        manage: any = null; // initialize correctly later on\r\n\r\n        constructor(\r\n            public id: number,\r\n            public cbid: number,\r\n            protected $2sxc: SxcControllerWithInternals,\r\n            protected readonly dnnSf: any\r\n        ) {\r\n            super(id, cbid, dnnSf);\r\n\r\n            // add manage property, but not within initializer, because inside the manage-initializer it may reference 2sxc again\r\n            try { // sometimes the manage can't be built, like before installing\r\n                if ($2sxc._manage) $2sxc._manage.initInstance(this);\r\n            } catch (e) {\r\n                throw e;\r\n            }\r\n\r\n            // this only works when manage exists (not installing) and translator exists too\r\n            if ($2sxc._translateInit && this.manage) $2sxc._translateInit(this.manage);    // init translate, not really nice, but ok for now\r\n\r\n        }\r\n\r\n        /**\r\n         * checks if we're currently in edit mode\r\n         * @returns {boolean} \r\n         */\r\n        isEditMode() {\r\n            return this.manage && this.manage._isEditMode();\r\n        }\r\n\r\n    }\r\n\r\n    export class SxcInstanceWithInternals extends SxcInstanceWithEditing {\r\n        data: SxcDataWithInternals;\r\n        source: any = null;\r\n        isLoaded = false;\r\n        lastRefresh: Date = null;\r\n\r\n        constructor(\r\n            public id: number,\r\n            public cbid: number,\r\n            private cacheKey: string,\r\n            protected $2sxc: SxcControllerWithInternals,\r\n            protected readonly dnnSf: any\r\n        ) {\r\n            super(id, cbid, $2sxc, dnnSf);\r\n            this.data = new SxcDataWithInternals(this);\r\n        }\r\n\r\n        recreate(resetCache: boolean): SxcInstanceWithInternals {\r\n            if (resetCache) delete this.$2sxc._controllers[this.cacheKey]; // clear cache\r\n            return this.$2sxc(this.id, this.cbid) as any as SxcInstanceWithInternals; // generate new\r\n        }\r\n    }\r\n\r\n    export class SxcDataWithInternals {\r\n        source: any = undefined;\r\n\r\n        // in-streams\r\n        \"in\": any = {};\r\n\r\n        // Will hold the default stream ([\"in\"][\"Default\"].List\r\n        List: any = [];\r\n\r\n        constructor(\r\n            private controller: SxcInstanceWithInternals\r\n        ) {\r\n\r\n        }\r\n\r\n        // source path defaulting to current page + optional params\r\n        sourceUrl(params?: string): string {\r\n            let url = this.controller.resolveServiceUrl(\"app-sys/appcontent/GetContentBlockData\");\r\n            if (typeof params == \"string\") // text like 'id=7'\r\n                url += \"&\" + params;\r\n            return url;\r\n        }\r\n\r\n\r\n        // Load data via ajax\r\n        load(source?: any) {\r\n            // If source is already the data, set it\r\n            if (source && source.List) {\r\n                // 2017-09-05 2dm: discoverd a call to an inexisting function\r\n                // since this is an old API which is being deprecated, please don't fix unless we get active feedback\r\n                //controller.data.setData(source);\r\n                return this.controller.data;\r\n            } else {\r\n                if (!source)\r\n                    source = {};\r\n                if (!source.url)\r\n                    source.url = this.controller.data.sourceUrl();\r\n                source.origSuccess = source.success;\r\n                source.success = data => {\r\n\r\n                    for (let dataSetName in data) {\r\n                        if (data.hasOwnProperty(dataSetName))\r\n                            if (data[dataSetName].List !== null) {\r\n                                this.controller.data[\"in\"][dataSetName] = data[dataSetName];\r\n                                this.controller.data[\"in\"][dataSetName].name = dataSetName;\r\n                            }\r\n                    }\r\n\r\n                    if (this.controller.data[\"in\"].Default)\r\n                        // 2017-09-05 2dm: previously wrote it to controller.List, but this is almost certainly a mistake\r\n                        // since it's an old API which is being deprecated, we won't fix it\r\n                        this.List = this[\"in\"].Default.List;\r\n\r\n                    if (source.origSuccess)\r\n                        source.origSuccess(this);\r\n\r\n                    this.controller.isLoaded = true;\r\n                    this.controller.lastRefresh = new Date();\r\n                    (<any>this)._triggerLoaded();\r\n                };\r\n                source.error = request => { alert(request.statusText); };\r\n                source.preventAutoFail = true; // use our fail message\r\n                this.source = source;\r\n                return this.reload();\r\n            }\r\n        }\r\n\r\n        reload() {\r\n            this.controller.webApi.get(this.source)\r\n                .then(this.source.success, this.source.error);\r\n            return this;\r\n\r\n        }\r\n\r\n        on(events, callback) {\r\n            return $(this).bind(\"2scLoad\", callback)[0]._triggerLoaded();\r\n        }\r\n\r\n        _triggerLoaded() {\r\n            return this.controller.isLoaded\r\n                ? $(this).trigger(\"2scLoad\", [this])[0]\r\n                : this;\r\n        }\r\n\r\n        one(events, callback) {\r\n            if (!this.controller.isLoaded)\r\n                return $(this).one(\"2scLoad\", callback)[0];\r\n            callback({}, this);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","\r\nmodule ToSic.Sxc {\r\n\r\n\r\n    export class SxcWebApiWithInternals {\r\n        constructor(\r\n            private readonly controller: SxcInstance,\r\n            private readonly id: number,\r\n            private readonly cbid: number\r\n        ) {\r\n\r\n        }\r\n        /**\r\n         * returns an http-get promise\r\n         * @param settingsOrUrl the url to get\r\n         * @param params jQuery style ajax parameters\r\n         * @param data jQuery style data for post/put requests\r\n         * @param preventAutoFail \r\n         * @returns {Promise} jQuery ajax promise object\r\n         */\r\n        get(settingsOrUrl, params?, data?, preventAutoFail?: boolean): any {\r\n            this.request(settingsOrUrl, params, data, preventAutoFail, \"GET\");\r\n        };\r\n\r\n        /**\r\n         * returns an http-get promise\r\n         * @param settingsOrUrl the url to get\r\n         * @param params jQuery style ajax parameters\r\n         * @param data jQuery style data for post/put requests\r\n         * @param preventAutoFail \r\n         * @returns {Promise} jQuery ajax promise object\r\n         */\r\n        post(settingsOrUrl, params?, data?, preventAutoFail?: boolean): any {\r\n            this.request(settingsOrUrl, params, data, preventAutoFail, \"POST\");\r\n        };\r\n\r\n        /**\r\n         * returns an http-get promise\r\n         * @param settingsOrUrl the url to get\r\n         * @param params jQuery style ajax parameters\r\n         * @param data jQuery style data for post/put requests\r\n         * @param preventAutoFail \r\n         * @returns {Promise} jQuery ajax promise object\r\n         */\r\n        delete(settingsOrUrl, params?, data?, preventAutoFail?: boolean): any {\r\n            this.request(settingsOrUrl, params, data, preventAutoFail, \"DELETE\");\r\n        };\r\n\r\n        /**\r\n         * returns an http-get promise\r\n         * @param settingsOrUrl the url to get\r\n         * @param params jQuery style ajax parameters\r\n         * @param data jQuery style data for post/put requests\r\n         * @param preventAutoFail \r\n         * @returns {Promise} jQuery ajax promise object\r\n         */\r\n        put(settingsOrUrl, params?, data?, preventAutoFail?: boolean): any {\r\n            this.request(settingsOrUrl, params, data, preventAutoFail, \"PUT\");\r\n        };\r\n\r\n        private request(settings: string | any, params, data, preventAutoFail, method): any {\r\n\r\n            // Url parameter: autoconvert a single value (instead of object of values) to an id=... parameter\r\n            if (typeof params != \"object\" && typeof params != \"undefined\")\r\n                params = { id: params };\r\n\r\n            // If the first parameter is a string, resolve settings\r\n            if (typeof settings == \"string\") {\r\n                const controllerAction = settings.split(\"/\");\r\n                const controllerName = controllerAction[0];\r\n                const actionName = controllerAction[1];\r\n\r\n                if (controllerName === \"\" || actionName === \"\")\r\n                    alert(\"Error: controller or action not defined. Will continue with likely errors.\");\r\n\r\n                settings = {\r\n                    controller: controllerName,\r\n                    action: actionName,\r\n                    params: params,\r\n                    data: data,\r\n                    url: controllerAction.length > 2 ? settings : null,\r\n                    preventAutoFail: preventAutoFail\r\n                };\r\n            }\r\n\r\n            const defaults = {\r\n                method: method === null ? \"POST\" : method,\r\n                params: null,\r\n                preventAutoFail: false\r\n            };\r\n            settings = $.extend({}, defaults, settings);\r\n            var sf = $.ServicesFramework(this.id);\r\n\r\n            const promise = $.ajax({\r\n                type: settings.method,\r\n                dataType: settings.dataType || \"json\", // default is json if not specified\r\n                async: true,\r\n                data: JSON.stringify(settings.data),\r\n                contentType: \"application/json\",\r\n                url: this.getActionUrl(settings),\r\n                beforeSend(xhr) {\r\n                    xhr.setRequestHeader(\"ContentBlockId\", this.cbid);\r\n                    sf.setModuleHeaders(xhr);\r\n                }\r\n            });\r\n\r\n            if (!settings.preventAutoFail)\r\n                promise.fail(this.controller.showDetailedHttpError);\r\n\r\n            return promise;\r\n        };\r\n\r\n        private getActionUrl(settings: any): string {\r\n            const sf = $.ServicesFramework(this.id);\r\n            const base = (settings.url)\r\n                ? this.controller.resolveServiceUrl(settings.url)\r\n                : sf.getServiceRoot(\"2sxc\") + \"app/auto/api/\" + settings.controller + \"/\" + settings.action;\r\n            return base + (settings.params === null ? \"\" : (\"?\" + $.param(settings.params)));\r\n        }\r\n\r\n    }\r\n\r\n}"]}