{"version":3,"sources":["2sxc.api.min.js"],"names":["window","$2sxc","id","cbid","autoFind","cacheKey","_controllers","_data","controller","serviceScopes","serviceRoot","$","ServicesFramework","getServiceRoot","resolveServiceUrl","virtualPath","scope","split","toLowerCase","indexOf","substring","data","sourceUrl","params","url","in","List","load","source","setData","origSuccess","success","dataSetName","hasOwnProperty","name","Default","isLoaded","lastRefresh","Date","_triggerLoaded","error","request","alert","statusText","preventAutoFail","reload","webApi","get","then","on","events","callback","bind","trigger","one","manage","isEditMode","_isEditMode","recreate","s","p","d","paf","_action","post","delete","put","settings","method","controllerAction","controllerName","actionName","action","length","defaults","extend","sf","promise","ajax","type","dataType","async","JSON","stringify","contentType","getActionUrl","beforeSend","xhr","setRequestHeader","setModuleHeaders","fail","showDetailedHttpError","base","param","result","console","log","status","config","infoText","srvResp","responseText","parse","msg","Message","msgDet","MessageDetail","ExceptionMessage","_manage","attach","e","_translateInit","sysinfo","version","description","beta","totalPopup","open","z","top","parent","wrapper","document","createElement","setAttribute","body","appendChild","ifrm","className","frame","close","replace","frm","parentNode","removeChild","closeThis","urlParams","searchRx","RegExp","results","exec","location","search","hashRx","hash","matches","pathname","match","reverse","undefined","decodeURIComponent","require","found","message","domElement","containerTag","closest","iid","getAttribute","debug","uncache","parts","getUrl","preventUnmin","r"],"mappings":"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","file":"2sxc.api.min.js","sourcesContent":["// this is the 2sxc-javascript API\r\n// 2sxc will include this automatically when a user has edit-rights\r\n// a template developer will typically use this to use the data-api to read 2sxc-data from the server\r\n// read more about this in the wiki: https://github.com/2sic/2sxc/wiki/JavaScript-%242sxc\r\n(function () {\r\n    if (window.$2sxc) return;   // prevent double execution\r\n\r\n    window.$2sxc = function (id, cbid) {\r\n\r\n        // if it's a dom-element, use auto-find\r\n        if (typeof id === 'object') return window.$2sxc.autoFind(id);\r\n\r\n        if (!cbid) cbid = id;           // if content-block is unknown, use id of module\r\n        var cacheKey = id + \":\" + cbid; // neutralize the id from old \"34\" format to the new \"35:353\" format\r\n\r\n        // either get the cached controller from previous calls, or create a new one\r\n        if ($2sxc._controllers[cacheKey]) return $2sxc._controllers[cacheKey];\r\n\r\n        // also init the data-cache in case it's ever needed\r\n        if (!$2sxc._data[cacheKey]) $2sxc._data[cacheKey] = {};\r\n\r\n        var controller = $2sxc._controllers[cacheKey] = {\r\n            serviceScopes: [\"app\", \"app-sys\", \"app-api\", \"app-query\", \"app-content\", \"eav\", \"view\", \"dnn\"],\r\n            serviceRoot: $.ServicesFramework(id).getServiceRoot(\"2sxc\"),\r\n            resolveServiceUrl: function resolveServiceUrl(virtualPath) {\r\n                var scope = virtualPath.split(\"/\")[0].toLowerCase();\r\n\r\n                // stop if it's not one of our special paths\r\n                if (controller.serviceScopes.indexOf(scope) === -1)\r\n                    return virtualPath;\r\n\r\n                return controller.serviceRoot + scope + \"/\" + virtualPath.substring(virtualPath.indexOf(\"/\") + 1);\r\n            },\r\n            data: {\r\n                // source path defaulting to current page + optional params\r\n                sourceUrl: function (params) {\r\n                    var url = controller.resolveServiceUrl(\"app-sys/appcontent/GetContentBlockData\");\r\n                    if (typeof params == \"string\") // text like 'id=7'\r\n                        url += \"&\" + params;\r\n                    return url;\r\n                },\r\n\r\n                // in-streams\r\n                \"in\": {},\r\n\r\n                // Will hold the default stream ([\"in\"][\"Default\"].List\r\n                List: [],\r\n\r\n                controller: null,\r\n\r\n                // Load data via ajax\r\n                load: function (source) {\r\n                    // If source is already the data, set it\r\n                    if (source && source.List) {\r\n                        controller.data.setData(source);\r\n                        return controller.data;\r\n                    } else {\r\n                        if (!source)\r\n                            source = {};\r\n                        if (!source.url)\r\n                            source.url = controller.data.sourceUrl();\r\n                        source.origSuccess = source.success;\r\n                        source.success = function (data) {\r\n\r\n                            for (var dataSetName in data) {\r\n                                if (data.hasOwnProperty(dataSetName))\r\n                                    if (data[dataSetName].List !== null) {\r\n                                        controller.data[\"in\"][dataSetName] = data[dataSetName];\r\n                                        controller.data[\"in\"][dataSetName].name = dataSetName;\r\n                                    }\r\n                            }\r\n\r\n                            if (controller.data[\"in\"].Default)\r\n                                controller.List = controller.data[\"in\"].Default.List;\r\n\r\n                            if (source.origSuccess)\r\n                                source.origSuccess(controller.data);\r\n\r\n                            controller.isLoaded = true;\r\n                            controller.lastRefresh = new Date();\r\n                            controller.data._triggerLoaded();\r\n                        };\r\n                        source.error = function (request) { alert(request.statusText); };\r\n                        source.preventAutoFail = true; // use our fail message\r\n                        controller.data.source = source;\r\n                        return controller.data.reload();\r\n                    }\r\n                },\r\n\r\n                reload: function () {\r\n                    controller.webApi.get(controller.data.source)\r\n                        .then(controller.data.source.success, controller.data.source.error);\r\n                    return controller.data;\r\n\r\n                },\r\n\r\n                on: function (events, callback) {\r\n                    return $(controller.data).bind(\"2scLoad\", callback)[0]._triggerLoaded();\r\n                },\r\n\r\n                _triggerLoaded: function () {\r\n                    return controller.isLoaded ? $(controller.data).trigger(\"2scLoad\", [controller.data])[0] : controller.data;\r\n                },\r\n\r\n                one: function (events, callback) {\r\n                    if (!controller.isLoaded)\r\n                        return $(controller.data).one(\"2scLoad\", callback)[0];\r\n                    callback({}, controller.data);\r\n                    return controller.data;\r\n                }\r\n            },\r\n\r\n            id: id,\r\n            cbid: cbid,\r\n            cacheKey: cacheKey,\r\n            source: null,\r\n            isLoaded: false,\r\n            lastRefresh: null,\r\n            manage: null, // initialize correctly later on\r\n            isEditMode: function () {\r\n                return controller.manage && controller.manage._isEditMode();\r\n            },\r\n            recreate: function () {\r\n                delete $2sxc._controllers[cacheKey];    // clear cache\r\n                return $2sxc(controller.id, controller.cbid);   // generate new\r\n            },\r\n            webApi: {\r\n                get: function (s, p, d, paf) { return controller.webApi._action(s, p, d, paf, \"GET\"); },\r\n                post: function (s, p, d, paf) { return controller.webApi._action(s, p, d, paf, \"POST\"); },\r\n                \"delete\": function (s, p, d, paf) { return controller.webApi._action(s, p, d, paf, \"DELETE\"); },\r\n                put: function (s, p, d, paf) { return controller.webApi._action(s, p, d, paf, \"PUT\"); },\r\n                _action: function (settings, params, data, preventAutoFail, method) {\r\n\r\n                    // Url parameter: autoconvert a single value (instead of object of values) to an id=... parameter\r\n                    if (typeof params != \"object\" && typeof params != \"undefined\")\r\n                        params = { id: params };\r\n\r\n                    // If the first parameter is a string, resolve settings\r\n                    if (typeof settings == \"string\") {\r\n                        var controllerAction = settings.split(\"/\");\r\n                        var controllerName = controllerAction[0];\r\n                        var actionName = controllerAction[1];\r\n\r\n                        if (controllerName === \"\" || actionName === \"\")\r\n                            alert(\"Error: controller or action not defined. Will continue with likely errors.\");\r\n\r\n                        settings = {\r\n                            controller: controllerName,\r\n                            action: actionName,\r\n                            params: params,\r\n                            data: data,\r\n                            url: controllerAction.length > 2 ? settings : null,\r\n                            preventAutoFail: preventAutoFail\r\n                        };\r\n                    }\r\n\r\n                    var defaults = {\r\n                        method: method === null ? \"POST\" : method,\r\n                        params: null,\r\n                        preventAutoFail: false\r\n                    };\r\n                    settings = $.extend({}, defaults, settings);\r\n                    var sf = $.ServicesFramework(id);\r\n\r\n                    var promise = $.ajax({\r\n                        type: settings.method,\r\n                        dataType: settings.dataType || \"json\", // default is json if not specified\r\n                        async: true,\r\n                        data: JSON.stringify(settings.data),\r\n                        contentType: \"application/json\",\r\n                        url: controller.webApi.getActionUrl(settings),\r\n                        beforeSend: function (xhr) {\r\n                            xhr.setRequestHeader(\"ContentBlockId\", cbid);\r\n                            sf.setModuleHeaders(xhr);\r\n                        }\r\n                    });\r\n\r\n                    if (!settings.preventAutoFail)\r\n                        promise.fail(controller.showDetailedHttpError);\r\n\r\n                    return promise;\r\n                },\r\n                getActionUrl: function (settings) {\r\n                    var sf = $.ServicesFramework(id);\r\n                    var base = (settings.url)\r\n                        ? controller.resolveServiceUrl(settings.url)\r\n                        : sf.getServiceRoot(\"2sxc\") + \"app/auto/api/\" + settings.controller + \"/\" + settings.action;\r\n                    return base + (settings.params === null ? \"\" : (\"?\" + $.param(settings.params)));\r\n                }\r\n            },\r\n\r\n            // Show a nice error with more infos around 2sxc\r\n            showDetailedHttpError: function showDetailedHttpError(result) {\r\n                if (window.console)\r\n                    console.log(result);\r\n\r\n                if (result.status === 404 && result.config && result.config.url && result.config.url.indexOf(\"/dist/i18n/\") > -1) {\r\n                    if (window.console)\r\n                        console.log(\"just fyi: failed to load language resource; will have to use default\");\r\n                    return result;\r\n                }\r\n\r\n\r\n                // if it's an unspecified 0-error, it's probably not an error but a cancelled request, (happens when closing popups containing angularJS)\r\n                if (result.status === 0 || result.status === -1)\r\n                    return result;\r\n\r\n                // let's try to show good messages in most cases\r\n                var infoText = \"Had an error talking to the server (status \" + result.status + \").\";\r\n                var srvResp = result.responseText ?\r\n                    JSON.parse(result.responseText) // for jquery ajax errors\r\n                    : result.data;                  // for angular $http\r\n                if (srvResp) {\r\n                    var msg = srvResp.Message;\r\n                    if (msg) infoText += \"\\nMessage: \" + msg;\r\n                    var msgDet = srvResp.MessageDetail || srvResp.ExceptionMessage;\r\n                    if (msgDet) infoText += \"\\nDetail: \" + msgDet;\r\n\r\n\r\n                    if (msgDet && msgDet.indexOf(\"No action was found\") === 0)\r\n                        if (msgDet.indexOf(\"that matches the name\") > 0)\r\n                            infoText += \"\\n\\nTip from 2sxc: you probably got the action-name wrong in your JS.\";\r\n                        else if (msgDet.indexOf(\"that matches the request.\") > 0)\r\n                            infoText += \"\\n\\nTip from 2sxc: Seems like the parameters are the wrong amount or type.\";\r\n\r\n                    if (msg && msg.indexOf(\"Controller\") === 0 && msg.indexOf(\"not found\") > 0)\r\n                        infoText += \"\\n\\nTip from 2sxc: you probably spelled the controller name wrong or forgot to remove the word 'controller' from the call in JS. To call a controller called 'DemoController' only use 'Demo'.\";\r\n\r\n                }\r\n                infoText += \"\\n\\nif you are an advanced user you can learn more about what went wrong - discover how on 2sxc.org/help?tag=debug\";\r\n                alert(infoText);\r\n\r\n                return result;\r\n            }\r\n        };\r\n\r\n        // add manage property, but not within initializer, because inside the manage-initializer it may reference 2sxc again\r\n        try { // sometimes the manage can't be built, like before installing\r\n            controller.manage = null;\r\n            if ($2sxc._manage) $2sxc._manage.attach(controller);\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n\r\n        // this only works when manage exists (not installing) and translator exists too\r\n        if ($2sxc._translateInit && controller.manage) $2sxc._translateInit(controller.manage);    // init translate, not really nice, but ok for now\r\n\r\n        // Make sure back-reference to controller is set\r\n        controller.data.controller = controller;\r\n\r\n        return controller;\r\n    };\r\n\r\n    $2sxc._controllers = {};\r\n    $2sxc.sysinfo = {\r\n        version: \"09.01.03\",\r\n        description: \"The 2sxc Controller object\"\r\n    };\r\n\r\n    $2sxc.beta = {};\r\n    $2sxc._data = {};\r\n\r\n\r\n    // this creates a full-screen iframe-popup and provides a close-command to finish the dialog as needed\r\n    $2sxc.totalPopup = {\r\n        open: function openTotalPopup(url, callback) {\r\n            // count parents to see how high the z-index needs to be\r\n            var z = 10000010, p = window; // Needs at least 10000000 to be on top of the DNN9 bar\r\n            while (p !== window.top && z < 10000100) {\r\n                z++;\r\n                p = p.parent;\r\n            }\r\n\r\n            var wrapper = document.createElement(\"div\");\r\n            wrapper.setAttribute(\"style\", \" top: 0;left: 0;width: 100%;height: 100%; position:fixed; z-index:\" + z);\r\n            document.body.appendChild(wrapper);\r\n\r\n            var ifrm = document.createElement(\"iframe\");\r\n            ifrm.setAttribute(\"allowtransparency\", \"true\");\r\n            ifrm.setAttribute(\"style\", \"top: 0;left: 0;width: 100%;height: 100%;\");\r\n            ifrm.setAttribute(\"src\", url);\r\n            wrapper.appendChild(ifrm);\r\n            document.body.className += \" sxc-popup-open\";\r\n            $2sxc.totalPopup.frame = ifrm;\r\n            $2sxc.totalPopup.callback = callback;\r\n        },\r\n        close: function closeTotalPopup() {\r\n            if ($2sxc.totalPopup.frame) {\r\n                document.body.className = document.body.className.replace(\"sxc-popup-open\", \"\");\r\n                var frm = $2sxc.totalPopup.frame;\r\n                frm.parentNode.parentNode.removeChild(frm.parentNode);\r\n                $2sxc.totalPopup.callback();\r\n            }\r\n        },\r\n        closeThis: function closeThis() {\r\n            window.parent.$2sxc.totalPopup.close();\r\n        }\r\n    };\r\n\r\n    $2sxc.urlParams = {\r\n        get: function getParameterByName(name) {\r\n            // warning: this method is duplicated in 2 places - keep them in sync. \r\n            // locations are eav and 2sxc4ng \r\n            name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n            var searchRx = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\", \"i\");\r\n            var results = searchRx.exec(location.search);\r\n\r\n            if (results === null) {\r\n                var hashRx = new RegExp(\"[#&]\" + name + \"=([^&#]*)\", \"i\");\r\n                results = hashRx.exec(location.hash);\r\n            }\r\n\r\n            // if nothing found, try normal URL because DNN places parameters in /key/value notation\r\n            if (results === null) {\r\n                // Otherwise try parts of the URL\r\n                var matches = window.location.pathname.match(new RegExp(\"/\" + name + \"/([^/]+)\", \"i\"));\r\n\r\n                // Check if we found anything, if we do find it, we must reverse the results so we get the \"last\" one in case there are multiple hits\r\n                if (matches && matches.length > 1)\r\n                    results = matches.reverse()[0];\r\n            } else\r\n                results = results[1];\r\n\r\n            return results === null || results === undefined ? \"\" : decodeURIComponent(results.replace(/\\+/g, \" \"));\r\n        },\r\n\r\n        require: function getRequiredParameter(name) {\r\n            var found = $2sxc.urlParams.get(name);\r\n            if (found === \"\") {\r\n                var message = \"Required parameter (\" + name + \") missing from url - cannot continue\";\r\n                alert(message);\r\n                throw message;\r\n            }\r\n            return found;\r\n        }\r\n    };\r\n\r\n    // will find the controller based on the dom-element\r\n    $2sxc.autoFind = function (domElement) {\r\n        var containerTag = $(domElement).closest(\".sc-content-block\")[0];\r\n        if (!containerTag) return null;\r\n        var iid = containerTag.getAttribute(\"data-cb-instance\"), cbid = containerTag.getAttribute(\"data-cb-id\");\r\n        if (!iid || !cbid) return null;\r\n        return $2sxc(iid, cbid);\r\n    };\r\n\r\n    // note: I would like to remove this from $2sxc, but it's currently used both in the inpage-edit and in the dialogs\r\n    // debug state which is needed in various places\r\n    $2sxc.debug = {\r\n        load: ($2sxc.urlParams.get(\"debug\") === \"true\"),\r\n        uncache: $2sxc.urlParams.get(\"sxcver\")\r\n    };\r\n\r\n\r\n    // mini-helpers to manage 2sxc parts, a bit like a dependency loader which will optimize to load min/max depending on debug state\r\n    $2sxc.parts = {\r\n        getUrl: function improveUrl(url, preventUnmin) {\r\n            var r = (preventUnmin || !$2sxc.debug.load) ? url : url.replace(\".min\", \"\"); // use min or not\r\n            if ($2sxc.debug.uncache && r.indexOf(\"sxcver\") === -1)\r\n                r = r + ((r.indexOf(\"?\") === -1) ? \"?\" : \"&\") + \"sxcver=\" + $2sxc.debug.uncache;\r\n            return r;\r\n        }\r\n    };\r\n})();"],"sourceRoot":"/source/"}