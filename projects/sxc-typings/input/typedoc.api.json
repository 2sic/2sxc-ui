{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.25.2",
    "schemaVersion": 1006,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@2sic.com/2sxc-typings!",
  "docComment": "",
  "name": "@2sic.com/2sxc-typings",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@2sic.com/2sxc-typings!",
      "name": "",
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandAddExistingParams:interface",
          "docComment": "/**\n * Parameters used for the command `add-existing`. <br> The contentType name determines what items will be shown in the dialog. Depending on your use case, you will need to use the [](xref:Api.Js.SxcJs.CommandParamsEntityInList) or [](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock) parameters as well. <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandAddExistingParams extends "
            },
            {
              "kind": "Reference",
              "text": "CommandAddParams",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandAddParams:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandAddExistingParams",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandAddParams:interface",
          "docComment": "/**\n * Parameters used for the command `add`. <br> The `contentType` determines what items will be created, the `index` where. Depending on your use case, you will need to use the [](xref:Api.Js.SxcJs.CommandParamsEntityInList) or [](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock) parameters as well. <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandAddParams extends "
            },
            {
              "kind": "Reference",
              "text": "CommandContentTypeParams",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandContentTypeParams:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CommandParamsEntityInList",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInList:interface"
            },
            {
              "kind": "Content",
              "text": ", 'index'>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CommandParamsEntityInList",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInList:interface"
            },
            {
              "kind": "Content",
              "text": ", 'index'>>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CommandParamsEntityInContentBlock",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInContentBlock:interface"
            },
            {
              "kind": "Content",
              "text": ", 'index'>> "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandAddParams",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 14
            },
            {
              "startIndex": 15,
              "endIndex": 20
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandCodeParams:interface",
          "docComment": "/**\n * Parameters used for the command `code` on toolbars. <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandCodeParams "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandCodeParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandCodeParams#call:member",
              "docComment": "/**\n * Name of the function to call - must be available in the context. This is usually as a function window. Example: <br> If `call` is `sayHello` you need a `window.sayHello(context, event)`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "call: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "call",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandCodeParams#customCode:member",
              "docComment": "/**\n * **OBSOLETE - avoid using** <br> JavaScript as string containing the code to execute. This is the old V9 - it contains a function, not a name\n *\n * @deprecated\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "customCode: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "customCode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandContentTypeParams:interface",
          "docComment": "/**\n * Parameters used for the command `contenttype`. <br> The content-type name determines what items will be loaded to manage the fields. <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandContentTypeParams "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandContentTypeParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandContentTypeParams#contentType:member",
              "docComment": "/**\n * The content-type name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contentType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "contentType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandCopyParams:interface",
          "docComment": "/**\n * Parameters used for the command `copy`. Will copy the entity on `entityId`. <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandCopyParams extends "
            },
            {
              "kind": "Reference",
              "text": "CommandContentTypeParams",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandContentTypeParams:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CommandParamsEntityById",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityById:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandCopyParams",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandDataParams:interface",
          "docComment": "/**\n * Parameters used for the command `data`. <br> The content-type name determines what items will be managed. <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandDataParams extends "
            },
            {
              "kind": "Reference",
              "text": "CommandContentTypeParams",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandContentTypeParams:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandDataParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandDataParams#filters:member",
              "docComment": "/**\n * Filters to apply to the list of items. <br> Each property targets a field. The value is a string, number or array for filtering EntityIds or EntityGuids\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filters?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string | number | string[] | number[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "filters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandDeleteParams:interface",
          "docComment": "/**\n * Parameters used for the command `delete`. <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandDeleteParams "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandDeleteParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandDeleteParams#entityGuid:member",
              "docComment": "/**\n * Guid of item to delete, usually detected from context.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entityGuid: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entityGuid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandDeleteParams#entityId:member",
              "docComment": "/**\n * ID of item to delete, usually detected from context.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entityId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entityId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandDeleteParams#entityTitle:member",
              "docComment": "/**\n * Title of item to delete, usually detected from context. This is important to show the \"Are you sure?\" dialog.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entityTitle: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entityTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandMetadataParams:interface",
          "docComment": "/**\n * Parameters used for the command `metadata`. <br> Will do either one of these: - if it has an `entityId`, will just open `edit` for that Entity - if it has no `entityId`, will open `new` for the current `contentType` and assign to the target specified by `metadata`: <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandMetadataParams extends "
            },
            {
              "kind": "Reference",
              "text": "CommandContentTypeParams",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandContentTypeParams:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CommandParamsEntityById",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityById:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandMetadataParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandMetadataParams#metadata:member",
              "docComment": "/**\n * Target to assign the metadata to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandParamsMetadata",
                  "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandNames:enum",
          "docComment": "/**\n * Names of commands known to 2sxc CMS - for use in toolbars and calling commands directly from code\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum CommandNames "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandNames",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.add:member",
              "docComment": "/**\n * `add` adds another demo-item to a **list of items**. It does not open the edit-dialog. <br> The new item is placed after the item the (+) was clicked on. <br>💡 This is different than new, which opens a dialog to add something. <br> 🪜 Only appears on toolbars of items which are in a list. <br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandAddParams)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add = "
                },
                {
                  "kind": "Content",
                  "text": "\"add\""
                }
              ],
              "releaseTag": "Public",
              "name": "add",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.addExisting:member",
              "docComment": "/**\n * `add-existing` opens a dialog allowing the user to select an existing item to add to a **list of items**. <br> The new item is placed after the item the (+) was clicked on. <br> 🪜 Only appears on toolbars of items which are in a list. <br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandAddExistingParams) <br> 🆕 in v11.01\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addExisting = "
                },
                {
                  "kind": "Content",
                  "text": "\"add-existing\""
                }
              ],
              "releaseTag": "Public",
              "name": "addExisting",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.app:member",
              "docComment": "/**\n * `app` opens the app-admin dialog <br> 🔐 Toolbar shows this automatically to elevated admins. <br> 📩 No params required, (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "app = "
                },
                {
                  "kind": "Content",
                  "text": "\"app\""
                }
              ],
              "releaseTag": "Public",
              "name": "app",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.appImport:member",
              "docComment": "/**\n * `app-import` opens the dialog to import an App. <br> 🔘 This is not available on the toolbar. <br> 📩 No params required, (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appImport = "
                },
                {
                  "kind": "Content",
                  "text": "\"app-import\""
                }
              ],
              "releaseTag": "Public",
              "name": "appImport",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.appResources:member",
              "docComment": "/**\n * `app-resources` opens the edit dialog for app-resources (multi-language texts, labels etc.). <br> 🔘 It's disabled on the toolbar if the app doesn't have resource-values to configure. <br> 🔐 Toolbar shows this automatically to elevated admins. <br> 📩 No params required, (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appResources = "
                },
                {
                  "kind": "Content",
                  "text": "\"app-resources\""
                }
              ],
              "releaseTag": "Public",
              "name": "appResources",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.apps:member",
              "docComment": "/**\n * `apps` opens the manage all apps dialog. <br> 🔐 Toolbar shows this automatically to elevated admins. <br> 📩 No params required, (auto-detected based on toolbar)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apps = "
                },
                {
                  "kind": "Content",
                  "text": "\"apps\""
                }
              ],
              "releaseTag": "Public",
              "name": "apps",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.appSettings:member",
              "docComment": "/**\n * `app-settings` opens the edit dialog for the app-settings. <br> 🔘 It's disabled on the toolbar if the app doesn't have setting-values to configure <br> 🔐 Toolbar shows this automatically to elevated admins. <br> 📩 No params required, (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appSettings = "
                },
                {
                  "kind": "Content",
                  "text": "\"app-settings\""
                }
              ],
              "releaseTag": "Public",
              "name": "appSettings",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.code:member",
              "docComment": "/**\n * `code` will execute custom javascript. <br> 🔘 This is mainly for toolbars, to add buttons with custom code. <br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandCustomParams)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code = "
                },
                {
                  "kind": "Content",
                  "text": "\"code\""
                }
              ],
              "releaseTag": "Public",
              "name": "code",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.copy:member",
              "docComment": "/**\n * `copy` opens the edit-dialog for the current item in copy-mode, so when saving it will be a new item. <br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandCopyParams) <br> 🆕 in v14.03\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copy = "
                },
                {
                  "kind": "Content",
                  "text": "\"copy\""
                }
              ],
              "releaseTag": "Public",
              "name": "copy",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.data:member",
              "docComment": "/**\n * `data` opens the list to manage all items of a specific content-type. <br> 🔘 Will use the settings of the current template to open. It is only shown to elevated admins. <br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandDataParams)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data = "
                },
                {
                  "kind": "Content",
                  "text": "\"data\""
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.delete:member",
              "docComment": "/**\n * `delete` will delete (not just remove) a content-item. <br> 💡 This is similar to `remove` but really deletes the data from the DB. <br> 🔘 It only appears if the toolbar explicitly asks for it. <br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandDeleteParams) (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete = "
                },
                {
                  "kind": "Content",
                  "text": "\"delete\""
                }
              ],
              "releaseTag": "Public",
              "name": "delete",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.edit:member",
              "docComment": "/**\n * `edit` opens an edit-dialog. <br> In scenarios where the page is currently showing a _demo item_, this will have the same effect as `add`. So instead of editing the _demo item_ it would trigger a dialog to add a new item. <br> 🔘 Only appears if `entityId` is known or item is in a list. <br> 📩 Parameters either one of these: [Id](xref:Api.Js.SxcJs.CommandParamsEntityById), [In Block](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock), [In List](xref:Api.Js.SxcJs.CommandParamsEntityInList) (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "edit = "
                },
                {
                  "kind": "Content",
                  "text": "\"edit\""
                }
              ],
              "releaseTag": "Public",
              "name": "edit",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.fields:member",
              "docComment": "/**\n * `fields` opens the dialog to view or modify fields of a content-type. <br> 🔘 On a toolbar it will use the content-type of the current item. <br> 🔐 Toolbar shows this automatically to elevated admins. <br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandContentTypeParams)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fields = "
                },
                {
                  "kind": "Content",
                  "text": "\"fields\""
                }
              ],
              "releaseTag": "Public",
              "name": "fields",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.insights:member",
              "docComment": "/**\n * `insights` opens the insights logs page <br> 🔐 Toolbar shows this automatically to elevated admins. <br> 📩 No params required.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insights = "
                },
                {
                  "kind": "Content",
                  "text": "\"insights\""
                }
              ],
              "releaseTag": "Public",
              "name": "insights",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.layout:member",
              "docComment": "/**\n * `layout` opens the in-page dialog to change the layout of the current content. <br> 📩 No params required, (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layout = "
                },
                {
                  "kind": "Content",
                  "text": "\"layout\""
                }
              ],
              "releaseTag": "Public",
              "name": "layout",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.list:member",
              "docComment": "/**\n * `instance-list` opens a dialog to manually re-order **items in a list**. <br> 🪜 Only appears on toolbars of items which are in a list. <br> 📩 No params required, (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "list = "
                },
                {
                  "kind": "Content",
                  "text": "\"instance-list\""
                }
              ],
              "releaseTag": "Public",
              "name": "list",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.metadata:member",
              "docComment": "/**\n * `metadata` opens the edit-dialog for the current metadata item. <br> 🔘 It only appears if the toolbar explicitly asks for it. <br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandMetadataParams)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata = "
                },
                {
                  "kind": "Content",
                  "text": "\"metadata\""
                }
              ],
              "releaseTag": "Public",
              "name": "metadata",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.more:member",
              "docComment": "/**\n * `more` create a \"…\" (ellipsis) button which flips through the button groups of toolbars <br> 🔘 It only appears if the toolbar has `more`=`auto` and has multiple groups. <br> 📩 No params required, (auto-detected based on toolbar)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "more = "
                },
                {
                  "kind": "Content",
                  "text": "\"more\""
                }
              ],
              "releaseTag": "Public",
              "name": "more",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.moveDown:member",
              "docComment": "/**\n * `movedown` moves a content-item down one position in a **list of items**. <br> 🪜 Only appears on toolbars of items which are in a list. <br> 📩 Parameters either one of these: [In Block](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock), [In List](xref:Api.Js.SxcJs.CommandParamsEntityInList) (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "moveDown = "
                },
                {
                  "kind": "Content",
                  "text": "\"movedown\""
                }
              ],
              "releaseTag": "Public",
              "name": "moveDown",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.moveUp:member",
              "docComment": "/**\n * `moveup` moves a content-item up one position in a **list of items**. <br> 🪜 Only appears on toolbars of items which are in a list. <br> 📩 Parameters either one of these: [In Block](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock), [In List](xref:Api.Js.SxcJs.CommandParamsEntityInList) (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "moveUp = "
                },
                {
                  "kind": "Content",
                  "text": "\"moveup\""
                }
              ],
              "releaseTag": "Public",
              "name": "moveUp",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.new:member",
              "docComment": "/**\n * `new` opens the edit-dialog to create a new item/entity. <br> If the previous item is in a list, it will add it to that list _after_ the previous item with the toolbar. Otherwise it just creates it and the visualization will differ depending on the App. <br> 🪜 It works differently for lists - in which case it also adds it to the list. <br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandNewParams) (usually auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "new = "
                },
                {
                  "kind": "Content",
                  "text": "\"new\""
                }
              ],
              "releaseTag": "Public",
              "name": "new",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.publish:member",
              "docComment": "/**\n * `publish` tells the system to update a content-items status to published. If there was a published and a draft before, the draft will replace the previous item <br> 🔘 Appears automatically if the item is in draft mode / not published. <br> 📩 Parameters either one of these: [Id](xref:Api.Js.SxcJs.CommandParamsEntityById), [In Block](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock), [In List](xref:Api.Js.SxcJs.CommandParamsEntityInList) (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "publish = "
                },
                {
                  "kind": "Content",
                  "text": "\"publish\""
                }
              ],
              "releaseTag": "Public",
              "name": "publish",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.query:member",
              "docComment": "/**\n * `template-query` opens the pipeline/query-designer in a new window. <br> 🔘 It's not available on the simple Content App, only on full Apps. It is disabled if no query is configured. <br> 🔐 Toolbar shows this automatically to elevated admins. <br> 📩 No params required, (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "query = "
                },
                {
                  "kind": "Content",
                  "text": "\"template-query\""
                }
              ],
              "releaseTag": "Public",
              "name": "query",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.remove:member",
              "docComment": "/**\n * `remove` removes an item from a list of items. <br> 🪜 Only appears on toolbars of items which are in a list. <br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandParamsEntityInList) (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remove = "
                },
                {
                  "kind": "Content",
                  "text": "\"remove\""
                }
              ],
              "releaseTag": "Public",
              "name": "remove",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.replace:member",
              "docComment": "/**\n * `replace` opens the dialog to assign a different content-item in this slot on module-assigned content items <br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandParamsEntityInList) (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replace = "
                },
                {
                  "kind": "Content",
                  "text": "\"replace\""
                }
              ],
              "releaseTag": "Public",
              "name": "replace",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.system:member",
              "docComment": "/**\n * `system` opens the system dialog for this zone/site. <br> 🔐 Toolbar shows this automatically to elevated admins. <br> 📩 No params required, (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "system = "
                },
                {
                  "kind": "Content",
                  "text": "\"system\""
                }
              ],
              "releaseTag": "Public",
              "name": "system",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.template:member",
              "docComment": "/**\n * `template-develop` opens the template-editor dialog in a new window. <br> 🔐 Toolbar shows this automatically to elevated admins. <br> 📩 No params required, (auto-detected from context)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "template = "
                },
                {
                  "kind": "Content",
                  "text": "\"template-develop\""
                }
              ],
              "releaseTag": "Public",
              "name": "template",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNames.view:member",
              "docComment": "/**\n * `template-settings` will change settings on the template currently used <br> 🔐 Toolbar shows this automatically to elevated admins.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "view = "
                },
                {
                  "kind": "Content",
                  "text": "\"template-settings\""
                }
              ],
              "releaseTag": "Public",
              "name": "view",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandNewParams:interface",
          "docComment": "/**\n * Parameters used for the command `new` <br> The ContentType name determines what kind of item will be created. <br> Can also contain `prefill` to add values to the new item. <br> Can also contain list-information, in which case it's added to that list. Depending on your use case, you will need to use the [](xref:Api.Js.SxcJs.CommandParamsEntityInList) or [](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock) parameters as well. <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandNewParams extends "
            },
            {
              "kind": "Reference",
              "text": "CommandContentTypeParams",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandContentTypeParams:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CommandParamsEntityInList",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInList:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CommandParamsEntityInContentBlock",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInContentBlock:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandNewParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandNewParams#prefill:member",
              "docComment": "/**\n * Optional values to prefill in the new-form\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prefill?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, boolean | string | number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prefill",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandParams:interface",
          "docComment": "/**\n * Command parameters are handed over to a command for execution\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandParams "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParams#action:member",
              "docComment": "/**\n * The action is used in scenarios where the command name must be included\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "action?: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandNames",
                  "canonicalReference": "@2sic.com/2sxc-typings!CommandNames:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "action",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntity:interface",
          "docComment": "/**\n * Parameters used for commands which need an entity ID or a list-reference. <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandParamsEntity extends "
            },
            {
              "kind": "Reference",
              "text": "CommandParamsEntityById",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityById:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CommandParamsEntityInContentBlock",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInContentBlock:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CommandParamsEntityInList",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInList:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandParamsEntity",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityById:interface",
          "docComment": "/**\n * Parameters used for commands which address a specificy entity. <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandParamsEntityById "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandParamsEntityById",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityById#entityId:member",
              "docComment": "/**\n * ID of item to edit.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entityId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entityId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInContentBlock:interface",
          "docComment": "/**\n * Parameters used for command which expect an item from a list of a ContentBlock. <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandParamsEntityInContentBlock "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandParamsEntityInContentBlock",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInContentBlock#index:member",
              "docComment": "/**\n * Determins the position of the item in the list.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "index",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInContentBlock#useModuleList:member",
              "docComment": "/**\n * Must be true, to work on the module list.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useModuleList: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "useModuleList",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInList:interface",
          "docComment": "/**\n * Parameters used for command which expect an item in a list (field) of a parent. <br> ⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandParamsEntityInList "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandParamsEntityInList",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInList#fields:member",
              "docComment": "/**\n * Parent Entity field(s) name(s). Usually just one field, like `Authors`. In field-sets it could be `Author,Award` or similar.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fields: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInList#index:member",
              "docComment": "/**\n * Determins the position of the item in the list of that entity-field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "index",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsEntityInList#parent:member",
              "docComment": "/**\n * Parent entity _GUID_ which has the field referencing this item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parent: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsMetadata:interface",
          "docComment": "/**\n * Parameters on `metadata` for commands which have a metadata-target.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandParamsMetadata "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandParamsMetadata",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsMetadata#key:member",
              "docComment": "/**\n * The key which identifies the target of this metadata item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsMetadata#keyType:member",
              "docComment": "/**\n * the key type, will default to 'string'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyType?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!CommandParamsMetadata#targetType:member",
              "docComment": "/**\n * The target type, will default to 10 = CMS-Item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "targetType?: "
                },
                {
                  "kind": "Reference",
                  "text": "MetadataTargetTypes",
                  "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "targetType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!ContextIdentifier:class",
          "docComment": "/**\n * ContextIdentifier is used to initialize a Sxc object outside of the default context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ContextIdentifier "
            }
          ],
          "releaseTag": "Public",
          "name": "ContextIdentifier",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!ContextIdentifier#appId:member",
              "docComment": "/**\n * AppId of this Context  @requires appId\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "appId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!ContextIdentifier#moduleId:member",
              "docComment": "/**\n * ModuleId of this Context (optional)  @optional\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "moduleId?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "moduleId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!ContextIdentifier#pageId:member",
              "docComment": "/**\n * PageId of this Context (optional)  @optional\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageId?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pageId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!ContextIdentifier#zoneId:member",
              "docComment": "/**\n * ZoneId of this Context  @requires zoneId\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zoneId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "zoneId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!EnvironmentSpecs:interface",
          "docComment": "/**\n * A context information for the current page, helping the JS talk with the backend\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EnvironmentSpecs "
            }
          ],
          "releaseTag": "Public",
          "name": "EnvironmentSpecs",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!EnvironmentSpecs#api:member",
              "docComment": "/**\n * Optional API key - optional if set from external, because it's auto derived from root\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "api: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "api",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!EnvironmentSpecs#appApi:member",
              "docComment": "/**\n * Optional App API Root - required because in Oqtane we'll have a different root for appAPIs\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appApi: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "appApi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!EnvironmentSpecs#page:member",
              "docComment": "/**\n * Page ID\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "page: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "page",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!EnvironmentSpecs#platform:member",
              "docComment": "/**\n * The platform code like 'dnn' or 'oqt'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "platform: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "platform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!EnvironmentSpecs#root:member",
              "docComment": "/**\n * Portal root path - used for various things incl. the API root\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!EnvironmentSpecs#rvt:member",
              "docComment": "/**\n * Request verification token value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rvt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rvt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!EnvironmentSpecs#rvtHeader:member",
              "docComment": "/**\n * Request verification token header name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rvtHeader: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rvtHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!HasLog:class",
          "docComment": "/**\n * Any object that has an own log object  @export  @interface HasLog\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `HasLog` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class HasLog "
            }
          ],
          "releaseTag": "Public",
          "name": "HasLog",
          "members": [],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!Log:class",
          "docComment": "/**\n * A log object which will collect log entries for another ojbect  @export  @interface Log\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `Log` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Log "
            }
          ],
          "releaseTag": "Public",
          "name": "Log",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!Log#add:member(1)",
              "docComment": "/**\n * Add a simple message to the log\n *\n * @param message - preferred usage is with string parameter: log.add(`description ${ parameter }`);\n *\n * in case that we experience error with normal string parameter, we can use arrow function to enclose parameter like this () => parameter but use it very rarely, because there is certainly a performance implication! log.add(`description ${() => parameter}`);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(message: "
                },
                {
                  "kind": "Content",
                  "text": "(() => string) | string"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "add"
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!Log#entries:member",
              "docComment": "/**\n * List of all entries added to this log\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entries: "
                },
                {
                  "kind": "Reference",
                  "text": "LogEntry",
                  "canonicalReference": "@2sic.com/2sxc-typings!LogEntry:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!Log#maxEntries:member",
              "docComment": "/**\n * Maximum amount of entries to add - to prevent memory hoging\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxEntries: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxEntries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!Log#name:member",
              "docComment": "/**\n * The name of this log, for scenarios where multiple loggers are mixed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!LogEntry:class",
          "docComment": "/**\n * A log entry item  @export  @interface LogEntry\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `LogEntry` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class LogEntry "
            }
          ],
          "releaseTag": "Public",
          "name": "LogEntry",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!LogEntry#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!LogEntry#time:member",
              "docComment": "/**\n * A timestamp for this entry to better see sequences of things happening\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "time: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!MetadataFor:interface",
          "docComment": "/**\n * A Metadata-Target identifier to tell an entity that it describes something else.\n *\n * Usually used in Sxc instances with the [Data Service](xref:Api.Js.SxcJs.SxcData)\n *\n * Warning: There is another MetadataFor type and they are not fully consistent. This is historical and not easy to correct, but we're working on it.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MetadataFor "
            }
          ],
          "releaseTag": "Public",
          "name": "MetadataFor",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataFor#Guid:member",
              "docComment": "/**\n * The GUID of the target, if it's identified by a GUID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Guid?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "Guid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataFor#Number:member",
              "docComment": "/**\n * The number of the target, if it's identified by a number.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Number?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "Number",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataFor#String:member",
              "docComment": "/**\n * The string-id of the target, if it's identified by a string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "String?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "String",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataFor#Target:member",
              "docComment": "/**\n * The target type identifier - TODO: @2dm - THIS SHOULD probably be number only\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Target: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MetadataTargetTypes",
                  "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Target",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes:enum",
          "docComment": "/**\n * Metadata Target Types\n *\n * These are constants to determine what something is assigned to (e.g. it describes an Entity, a file, etc.)\n *\n * Use it for the\n *\n * @see\n *\n * MetadataFor objects\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum MetadataTargetTypes "
            }
          ],
          "releaseTag": "Public",
          "name": "MetadataTargetTypes",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.App:member",
              "docComment": "/**\n * App metadata (3). Used to give Apps additional properties. Remarks = The key should always be an int ID of the App.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "App = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "App",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Attribute:member",
              "docComment": "/**\n * Metadata of attributes / fields (2). This is used to store configuration like the field label, amount-of-rows, etc. Remarks = The key is always a number (int) pointing to the Attribute ID in the DB.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Attribute = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "Attribute",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.CmsItem:member",
              "docComment": "/**\n * Item / Object of the Platform, like a File or Folder etc. (10) Remarks = * The key is usually a string to further specify what it's describing, like \"file:72\" * The text equivalent is CmsObject\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CmsItem = "
                },
                {
                  "kind": "Content",
                  "text": "10"
                }
              ],
              "releaseTag": "Public",
              "name": "CmsItem",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.ContentType:member",
              "docComment": "/**\n * Metadata of a content-type / data-schema (5). Used to give it a description etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ContentType = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "releaseTag": "Public",
              "name": "ContentType",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Custom:member",
              "docComment": "/**\n * Custom target (90). This is what you should use for basic apps which have a custom target that's none of the other defaults.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom = "
                },
                {
                  "kind": "Content",
                  "text": "90"
                }
              ],
              "releaseTag": "Public",
              "name": "Custom",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Custom1:member",
              "docComment": "/**\n * Custom target (91). Use this for basic apps which need multiple different custom targets (advanced, rare use case)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom1 = "
                },
                {
                  "kind": "Content",
                  "text": "91"
                }
              ],
              "releaseTag": "Public",
              "name": "Custom1",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Custom2:member",
              "docComment": "/**\n * Custom target (92). Use this for basic apps which need multiple different custom targets (advanced, rare use case)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom2 = "
                },
                {
                  "kind": "Content",
                  "text": "92"
                }
              ],
              "releaseTag": "Public",
              "name": "Custom2",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Custom3:member",
              "docComment": "/**\n * Custom target (93). Use this for basic apps which need multiple different custom targets (advanced, rare use case)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom3 = "
                },
                {
                  "kind": "Content",
                  "text": "93"
                }
              ],
              "releaseTag": "Public",
              "name": "Custom3",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Custom4:member",
              "docComment": "/**\n * Custom target (94). Use this for basic apps which need multiple different custom targets (advanced, rare use case)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom4 = "
                },
                {
                  "kind": "Content",
                  "text": "94"
                }
              ],
              "releaseTag": "Public",
              "name": "Custom4",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Custom5:member",
              "docComment": "/**\n * Custom target (95). Use this for basic apps which need multiple different custom targets (advanced, rare use case)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom5 = "
                },
                {
                  "kind": "Content",
                  "text": "95"
                }
              ],
              "releaseTag": "Public",
              "name": "Custom5",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Custom6:member",
              "docComment": "/**\n * Custom target (96). Use this for basic apps which need multiple different custom targets (advanced, rare use case)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom6 = "
                },
                {
                  "kind": "Content",
                  "text": "96"
                }
              ],
              "releaseTag": "Public",
              "name": "Custom6",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Custom7:member",
              "docComment": "/**\n * Custom target (97). Use this for basic apps which need multiple different custom targets (advanced, rare use case)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom7 = "
                },
                {
                  "kind": "Content",
                  "text": "97"
                }
              ],
              "releaseTag": "Public",
              "name": "Custom7",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Custom8:member",
              "docComment": "/**\n * Custom target (98). Use this for basic apps which need multiple different custom targets (advanced, rare use case)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom8 = "
                },
                {
                  "kind": "Content",
                  "text": "98"
                }
              ],
              "releaseTag": "Public",
              "name": "Custom8",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Custom9:member",
              "docComment": "/**\n * Custom target (99). Use this for basic apps which need multiple different custom targets (advanced, rare use case)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom9 = "
                },
                {
                  "kind": "Content",
                  "text": "99"
                }
              ],
              "releaseTag": "Public",
              "name": "Custom9",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Entity:member",
              "docComment": "/**\n * Metadata of entities / data-items (4). This lets us enhance entities with additional information. Remarks = The Key should always be a GUID\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Entity = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "releaseTag": "Public",
              "name": "Entity",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Module:member",
              "docComment": "/**\n * A Module - like a module containing some content (16) Remarks = New in v13</remarks>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Module = "
                },
                {
                  "kind": "Content",
                  "text": "16"
                }
              ],
              "releaseTag": "Public",
              "name": "Module",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.ModuleVariant:member",
              "docComment": "/**\n * A Module - like a module containing some content (17) Remarks = New in v13 / beta</remarks>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ModuleVariant = "
                },
                {
                  "kind": "Content",
                  "text": "17"
                }
              ],
              "releaseTag": "Public",
              "name": "ModuleVariant",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.None:member",
              "docComment": "/**\n * Things that are not used as Metadata (1). This is the default for most Entities.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "None = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "None",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Page:member",
              "docComment": "/**\n * A Page - like the current page (14) Remarks = New in v13</remarks>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Page = "
                },
                {
                  "kind": "Content",
                  "text": "14"
                }
              ],
              "releaseTag": "Public",
              "name": "Page",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.PageVariant:member",
              "docComment": "/**\n * A Page - like the current page (15) Remarks = New in v13 / beta</remarks>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PageVariant = "
                },
                {
                  "kind": "Content",
                  "text": "15"
                }
              ],
              "releaseTag": "Public",
              "name": "PageVariant",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Site:member",
              "docComment": "/**\n * A Site - like the current site (12) Remarks = New in v13</remarks>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Site = "
                },
                {
                  "kind": "Content",
                  "text": "12"
                }
              ],
              "releaseTag": "Public",
              "name": "Site",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.SiteVariant:member",
              "docComment": "/**\n * A Site - like the current site (13) Remarks = New in v13 / beta</remarks>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SiteVariant = "
                },
                {
                  "kind": "Content",
                  "text": "13"
                }
              ],
              "releaseTag": "Public",
              "name": "SiteVariant",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.System:member",
              "docComment": "/**\n * The entire system / platform - so Metadata for the current Dnn/Oqtane installation (11). Remarks = This is not in use as of now, just added for completeness sakes. New in v13\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "System = "
                },
                {
                  "kind": "Content",
                  "text": "11"
                }
              ],
              "releaseTag": "Public",
              "name": "System",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Undefined:member",
              "docComment": "/**\n * Undefined Type (0) - included for completeness. Not usually used, actually None (1) is the default\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Undefined = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Undefined",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.User:member",
              "docComment": "/**\n * A User - like the admin-user (18) Remarks = New in v13</remarks>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "User = "
                },
                {
                  "kind": "Content",
                  "text": "18"
                }
              ],
              "releaseTag": "Public",
              "name": "User",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!MetadataTargetTypes.Zone:member",
              "docComment": "/**\n * Zone metadata (6) - used to give a Zone additional information. Only used in very special cases, best not use.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Zone = "
                },
                {
                  "kind": "Content",
                  "text": "6"
                }
              ],
              "releaseTag": "Public",
              "name": "Zone",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfig:class",
          "docComment": "/**\n * Quick Edit Configuration which has an `enable` and specific button configurations\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class QuickEditConfig "
            }
          ],
          "releaseTag": "Public",
          "name": "QuickEditConfig",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfig#buttons:member",
              "docComment": "/**\n * Optional detailed configuration of the buttons.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttons?: "
                },
                {
                  "kind": "Reference",
                  "text": "QuickEditConfigButtons",
                  "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigButtons:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "buttons",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfig#enable:member",
              "docComment": "/**\n * Determine whether this section is enabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | 'auto'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigButtons:class",
          "docComment": "/**\n * Buttons on a quick-edit toolbar\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class QuickEditConfigButtons "
            }
          ],
          "releaseTag": "Public",
          "name": "QuickEditConfigButtons",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigButtons#addApp:member",
              "docComment": "/**\n * Enable the button to \"add App\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addApp?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "addApp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigButtons#addContent:member",
              "docComment": "/**\n * Enable the button to \"Add Content\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addContent?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "addContent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigButtons#delete:member",
              "docComment": "/**\n * Enable the button \"Delete\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "delete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigButtons#move:member",
              "docComment": "/**\n * Enable the button \"Move\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "move?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "move",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigButtons#paste:member",
              "docComment": "/**\n * Enable the button \"Paste\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "paste?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "paste",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigButtons#select:member",
              "docComment": "/**\n * Enable the button \"Select\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "select?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "select",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigEnableAuto:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "QuickEditConfigEnableAuto: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "QuickEditConfigEnableAuto",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigRoot:class",
          "docComment": "/**\n * Quick Edit - Full configuration at root, with `enable` and rules for `modules` and `innerBlocks`\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class QuickEditConfigRoot extends "
            },
            {
              "kind": "Reference",
              "text": "QuickEditConfig",
              "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfig:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "QuickEditConfigRoot",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigRoot#buttons:member",
              "docComment": "/**\n * The buttons configuration on the root. Will be used for the `modules` and `innerBlocks` if not specified there. Note that if not specified, will always default to true for all buttons.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttons?: "
                },
                {
                  "kind": "Reference",
                  "text": "QuickEditConfigButtons",
                  "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigButtons:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "buttons",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigRoot#innerBlocks:member",
              "docComment": "/**\n * Optional configuration for the Inner Content Blocks.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "innerBlocks?: "
                },
                {
                  "kind": "Reference",
                  "text": "QuickEditConfig",
                  "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfig:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "innerBlocks",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfigRoot#modules:member",
              "docComment": "/**\n * Optional configuration for the Modules.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "modules?: "
                },
                {
                  "kind": "Reference",
                  "text": "QuickEditConfig",
                  "canonicalReference": "@2sic.com/2sxc-typings!QuickEditConfig:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "modules",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!RunParams:interface",
          "docComment": "/**\n * Parameters for the Instance sxc.cms.run(...) command. New in 13.03\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RunParams "
            }
          ],
          "releaseTag": "Public",
          "name": "RunParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!RunParams#action:member",
              "docComment": "/**\n * The action to perform. Required.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "action?: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandNames",
                  "canonicalReference": "@2sic.com/2sxc-typings!CommandNames:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "action",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!RunParams#event:member",
              "docComment": "/**\n * The event which triggered this command - sometimes useful internally further use. Optional in most cases, but in some cases it will improve the behavior of the code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "event?: "
                },
                {
                  "kind": "Reference",
                  "text": "MouseEvent",
                  "canonicalReference": "!MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "event",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!RunParams#workflows:member",
              "docComment": "/**\n * Workflows work the same way as with a toolbar, except that they are added here and not registered on init. Because of limitations in automatic documentation, the type here is set to `unknown` but it's actually `WorkflowStep` | `WorkflowStep[]`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "workflows?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "workflows",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!RunParamsWithContext:interface",
          "docComment": "/**\n * Parameters for the **Global** $2sxc.cms.run(...) command in Addition to the [RunParams](xref:Api.Js.SxcJs.RunParams). It provides context to the run-params such as a Sxc instance or a tag which it started on. New in 12.10\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RunParamsWithContext extends "
            },
            {
              "kind": "Reference",
              "text": "RunParams",
              "canonicalReference": "@2sic.com/2sxc-typings!RunParams:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "RunParamsWithContext",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!RunParamsWithContext#context:member",
              "docComment": "/**\n * The context to run in, basically containing module id, etc. We always need the tag OR the context, but never both\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context?: "
                },
                {
                  "kind": "Reference",
                  "text": "Sxc",
                  "canonicalReference": "@2sic.com/2sxc-typings!Sxc:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ContextIdentifier",
                  "canonicalReference": "@2sic.com/2sxc-typings!ContextIdentifier:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!RunParamsWithContext#tag:member",
              "docComment": "/**\n * The tag on which the run was triggered - it's used to give the command a context to start from We always need the tag OR the context, but never both\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tag?: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!Sxc:class",
          "docComment": "/**\n * The typical sxc-instance object for a specific DNN module or content-block\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `Sxc` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Sxc extends "
            },
            {
              "kind": "Reference",
              "text": "HasLog",
              "canonicalReference": "@2sic.com/2sxc-typings!HasLog:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Sxc",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!Sxc#cbid:member",
              "docComment": "/**\n * content-block ID, which is either the module ID, or the content-block definition entity ID this is an advanced concept you usually don't care about, otherwise you should research it\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cbid: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cbid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!Sxc#cms:member",
              "docComment": "/**\n * CMS operations on this sxc-instance, such as opening the edit dialog etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cms: "
                },
                {
                  "kind": "Reference",
                  "text": "SxcCms",
                  "canonicalReference": "@2sic.com/2sxc-typings!SxcCms:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!Sxc#data:member(1)",
              "docComment": "/**\n * Get a data service for a specific content-type.\n *\n * @param contentType - : name of the content type which this service will get\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data<T = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">(contentType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SxcData",
                  "canonicalReference": "@2sic.com/2sxc-typings!SxcData:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "contentType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "data"
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!Sxc#id:member",
              "docComment": "/**\n * the sxc-instance ID, which is usually the DNN Module Id\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!Sxc#isEditMode:member(1)",
              "docComment": "/**\n * Test if the current code is in edit-mode and additional javascripts have been loaded to make it work\n *\n * @returns true if we are in edit-mode\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isEditMode(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "isEditMode"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!Sxc#query:member(1)",
              "docComment": "/**\n * @param query - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "query(query: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SxcQuery",
                  "canonicalReference": "@2sic.com/2sxc-typings!SxcQuery:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "query"
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!Sxc#webApi:member",
              "docComment": "/**\n * Web API calls for this instance. This is the pure call APIs system. To get data or queries, best use the data or query services.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "webApi: "
                },
                {
                  "kind": "Reference",
                  "text": "SxcWebApi",
                  "canonicalReference": "@2sic.com/2sxc-typings!SxcWebApi:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "webApi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!SxcCms:class",
          "docComment": "/**\n * This is in charge of sxc.cms on the instance level. ATM it just has the run command. In future, it may also have dedicated command like `layout` etc.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `SxcCms` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SxcCms extends "
            },
            {
              "kind": "Reference",
              "text": "SxcPart",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcPart:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SxcCms",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcCms#run:member(1)",
              "docComment": "/**\n * Run a command on this sxc-instance. Requires edit mode to be on, which would enable the edit-JS parts. To use, remember to activate `2sxc.JsCms` on the page\n *\n * @param runParams - real type is actually RunParams\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "run<T>(runParams: "
                },
                {
                  "kind": "Reference",
                  "text": "RunParams",
                  "canonicalReference": "@2sic.com/2sxc-typings!RunParams:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void | T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "run"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!SxcData:class",
          "docComment": "/**\n * Data Service for an App / Sxc-Instance to get/create data of a specific Content-Type\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `SxcData` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SxcData<T = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "SxcDataServiceBase",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcDataServiceBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "SxcData",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcData#create:member(1)",
              "docComment": "/**\n * Create a new entity with the values supplied\n *\n * @param values - a simple object containing the values to create\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(values: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "values",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcData#create:member(2)",
              "docComment": "/**\n * Create a new entity with the values supplied and also a metadata-for reference\n *\n * @param values - a simple object containing the values to create\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(values: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": ", metadataFor: "
                },
                {
                  "kind": "Reference",
                  "text": "MetadataFor",
                  "canonicalReference": "@2sic.com/2sxc-typings!MetadataFor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "values",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "metadataFor",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcData#delete:member(1)",
              "docComment": "/**\n * Delete an entity\n *\n * @param id - id of the item to delete\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcData#delete:member(2)",
              "docComment": "/**\n * Delete an entity\n *\n * @param guid - GUID of the item to delete\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(guid: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "guid",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcData#getAll:member(1)",
              "docComment": "/**\n * Get all items of this type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAll(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getAll"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcData#getOne:member(1)",
              "docComment": "/**\n * Get the specific item with the ID. It will return null if not found\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOne(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T> | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getOne"
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcData#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcData#update:member(1)",
              "docComment": "/**\n * Update an existing entity with the values supplied\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", values: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "values",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "update"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!SxcDataServiceBase:class",
          "docComment": "/**\n * Base class doing common checks. This is internal and not important, but we can't keep it out of the docs.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `SxcDataServiceBase` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class SxcDataServiceBase extends "
            },
            {
              "kind": "Reference",
              "text": "SxcPart",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcPart:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SxcDataServiceBase",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcDataServiceBase#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcDataServiceBase#webApi:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly webApi: "
                },
                {
                  "kind": "Reference",
                  "text": "SxcWebApi",
                  "canonicalReference": "@2sic.com/2sxc-typings!SxcWebApi:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "webApi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobal:interface",
          "docComment": "/**\n * This is the root global `window.$2sxc` function / object.\n *\n * It is both a function `window.$2sxc(...)` and object `window.$2sxc.insights...`\n *\n * If the page feature `2sxc.JsCms` is enabled, the `window.$2sxc` will also be a [SxcGlobalWithCms](xref:Api.Js.SxcJs.SxcGlobalWithCms)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SxcGlobal "
            }
          ],
          "releaseTag": "Public",
          "name": "SxcGlobal",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobal:call(1)",
              "docComment": "/**\n * Get an Sxc Instance\n *\n * @param id - number: moduleId | HTMLElement: tag in the page | Sxc: an existing sxc - will just be returned | ContextIdentifier: an identifier in complex scenarios without a moduleId/context\n *\n * @param cbid - number\n *\n * @returns SxcInstance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(id: "
                },
                {
                  "kind": "Content",
                  "text": "number | "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ContextIdentifier",
                  "canonicalReference": "@2sic.com/2sxc-typings!ContextIdentifier:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Sxc",
                  "canonicalReference": "@2sic.com/2sxc-typings!Sxc:class"
                },
                {
                  "kind": "Content",
                  "text": ", cbid?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Sxc",
                  "canonicalReference": "@2sic.com/2sxc-typings!Sxc:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "cbid",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobal#env:member",
              "docComment": "/**\n * Environment information  @type {SxcGlobalEnvironment}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "env: "
                },
                {
                  "kind": "Reference",
                  "text": "SxcGlobalEnvironment",
                  "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalEnvironment:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "env",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobal#get:member(1)",
              "docComment": "/**\n * Get an Sxc Instance using the moduleId. Using `$2sxc.get(...)` is the same as using `$2sxc(...)`\n *\n * @param moduleId - number: moduleId\n *\n * @returns SxcInstance  @since v14.01\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(moduleId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Sxc",
                  "canonicalReference": "@2sic.com/2sxc-typings!Sxc:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "moduleId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobal#get:member(2)",
              "docComment": "/**\n * Get an Sxc Instance using the moduleId and contentBlockId. Using `$2sxc.get(...)` is the same as using `$2sxc(...)`\n *\n * @param moduleId - number: moduleId\n *\n * @param contentBlockId - number: content-block ID\n *\n * @returns Sxc  @since v14.01\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(moduleId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", contentBlockId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Sxc",
                  "canonicalReference": "@2sic.com/2sxc-typings!Sxc:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "moduleId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "contentBlockId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobal#get:member(3)",
              "docComment": "/**\n * Get an Sxc Instance using a tag / `HtmlElement`. Using `$2sxc.get(...)` is the same as using `$2sxc(...)`\n *\n * @param tag - HTMLElement: tag in the page\n *\n * @returns Sxc  @since v14.01\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(tag: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Sxc",
                  "canonicalReference": "@2sic.com/2sxc-typings!Sxc:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "tag",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobal#get:member(4)",
              "docComment": "/**\n * Get an Sxc Instance using a full context-identifier (advanced). Using `$2sxc.get(...)` is the same as using `$2sxc(...)`\n *\n * @param context - ContextIdentifier: full context identifier\n *\n * @returns Sxc  @since v14.01\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ContextIdentifier",
                  "canonicalReference": "@2sic.com/2sxc-typings!ContextIdentifier:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Sxc",
                  "canonicalReference": "@2sic.com/2sxc-typings!Sxc:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobal#get:member(5)",
              "docComment": "/**\n * Get an Sxc Instance passing in an existing Sxc - just for cases where you're not sure what you aready have. Using `$2sxc.get(...)` is the same as using `$2sxc(...)`\n *\n * @param sxc - Sxc: an existing sxc - will just be returned\n *\n * @returns Sxc - the same Sxc as the one which was passed in  @since v14.01\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(sxc: "
                },
                {
                  "kind": "Reference",
                  "text": "Sxc",
                  "canonicalReference": "@2sic.com/2sxc-typings!Sxc:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Sxc",
                  "canonicalReference": "@2sic.com/2sxc-typings!Sxc:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "sxc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "get"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobal#http:member",
              "docComment": "/**\n * Http helper for API calls and such\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "http: "
                },
                {
                  "kind": "Reference",
                  "text": "SxcGlobalHttp",
                  "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalHttp:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "http",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobal#insights:member(1)",
              "docComment": "/**\n * The debugging / insights system. Call the `$2sxc.insights()` without parameters to get instructions what the parameters could be.\n *\n * @param partName - optional name of a part of the system for which we want to see the logs\n *\n * @param index - optional index on that part for which log we want to see\n *\n * @param start - log start index - this is to skip the first few lines if there are too many\n *\n * @param length - amount of lines to show - in some cases will default to 25\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insights(partName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", index?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", length?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "partName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "length",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "name": "insights"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobal#sysinfo:member",
              "docComment": "/**\n * system information, mainly for checking which version of 2sxc is running note: it's not always updated reliably, but it helps when debugging\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sysinfo: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        version: string;\n        description: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sysinfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobal#urlParams:member",
              "docComment": "/**\n * Helper to work with url parameters behind ? or #\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "urlParams: "
                },
                {
                  "kind": "Reference",
                  "text": "UrlParams",
                  "canonicalReference": "@2sic.com/2sxc-typings!UrlParams:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "urlParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalCms:class",
          "docComment": "/**\n * Global Content-Management System on the $2sxc.cms.\n *\n * It is only available if the page is in edit mode / the page feature `2sxc.JsCms` has been activated.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `SxcGlobalCms` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SxcGlobalCms extends "
            },
            {
              "kind": "Reference",
              "text": "HasLog",
              "canonicalReference": "@2sic.com/2sxc-typings!HasLog:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SxcGlobalCms",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalCms#run:member(1)",
              "docComment": "/**\n * Run a command within a specific context - mostly for internal use.\n *\n * @param runParams - The complete run params with a context\n *\n * @returns A promise which triggers when the command has completed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "run<T>(runParams: "
                },
                {
                  "kind": "Reference",
                  "text": "RunParamsWithContext",
                  "canonicalReference": "@2sic.com/2sxc-typings!RunParamsWithContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void | T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "run"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalCms#run:member(2)",
              "docComment": "/**\n * Run a command within a specific context.\n *\n * @param tag - The context providing tag - an HTML tag inside a module/content-block\n *\n * @param action - command-name (action)\n *\n * @param event - Optional mouse-event which allows the command to do some optimizations for that case - like a mouse-click\n *\n * @returns A promise which triggers when the command has completed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "run<T>(tag: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ", action: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", event?: "
                },
                {
                  "kind": "Reference",
                  "text": "MouseEvent",
                  "canonicalReference": "!MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void | T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "tag",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "action",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "run"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalCms#run:member(3)",
              "docComment": "/**\n * Run a command within a specific context.\n *\n * @param tag - The context providing tag - an HTML tag inside a module/content-block\n *\n * @param action - command-name (action)\n *\n * @param params - an object containing the the command-params\n *\n * @param event - Optional mouse-event which allows the command to do some optimizations for that case - like a mouse-click\n *\n * @returns A promise which triggers when the command has completed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "run<T>(tag: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ", action: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandParams",
                  "canonicalReference": "@2sic.com/2sxc-typings!CommandParams:interface"
                },
                {
                  "kind": "Content",
                  "text": ", event?: "
                },
                {
                  "kind": "Reference",
                  "text": "MouseEvent",
                  "canonicalReference": "!MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void | T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "tag",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "action",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "run"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalCms#run:member(4)",
              "docComment": "/**\n * Run a command within a specific context.\n *\n * @param tag - The context providing tag - an HTML tag inside a module/content-block\n *\n * @param commandParams - an object containing the the command-params as well as the command-name (action)\n *\n * @param event - Optional mouse-event which allows the command to do some optimizations for that case - like a mouse-click\n *\n * @returns A promise which triggers when the command has completed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "run<T>(tag: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ", commandParams: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandParams",
                  "canonicalReference": "@2sic.com/2sxc-typings!CommandParams:interface"
                },
                {
                  "kind": "Content",
                  "text": ", event?: "
                },
                {
                  "kind": "Reference",
                  "text": "MouseEvent",
                  "canonicalReference": "!MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void | T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "tag",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "commandParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "run"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalEnvironment:class",
          "docComment": "/**\n * Provides environment information to $2sxc - usually page-id, api-root and stuff like that\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `SxcGlobalEnvironment` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SxcGlobalEnvironment extends "
            },
            {
              "kind": "Reference",
              "text": "HasLog",
              "canonicalReference": "@2sic.com/2sxc-typings!HasLog:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SxcGlobalEnvironment",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalEnvironment#api:member(1)",
              "docComment": "/**\n * The API endpoint url from the environment\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "api(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "api"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalEnvironment#load:member(1)",
              "docComment": "/**\n * Manually load a new EnvironmentSpecs in cases where the page cannot provide them. This is only used in scenarios outside of Dnn / Oqtane, you will usually not need this.\n *\n * @param envSpecs - new info to load\n *\n * @param source - _optional_ name where the data came from\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(envSpecs: "
                },
                {
                  "kind": "Reference",
                  "text": "EnvironmentSpecs",
                  "canonicalReference": "@2sic.com/2sxc-typings!EnvironmentSpecs:interface"
                },
                {
                  "kind": "Content",
                  "text": ", source?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "envSpecs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "load"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalEnvironment#page:member(1)",
              "docComment": "/**\n * The current page ID - often needed in API calls\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "page(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "page"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalEnvironment#platform:member(1)",
              "docComment": "/**\n * The platform code like 'oqt' or 'dnn' in case the JS needs to know the difference\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "platform(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "platform"
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalEnvironment#ready:member",
              "docComment": "/**\n * Flag to determine if the environment information is available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ready: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ready",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalEnvironment#rvt:member(1)",
              "docComment": "/**\n * The request-verification token for internal WebAPI calls\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rvt(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "rvt"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalEnvironment#rvtHeader:member(1)",
              "docComment": "/**\n * The request verification token header name for internal WebAPI calls\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rvtHeader(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "rvtHeader"
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalEnvironment#source:member",
              "docComment": "/**\n * Where the environment information came from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "source: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "source",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalHttp:class",
          "docComment": "/**\n * Global HTTP Service for information and helpers on `$2sxc.http`\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `SxcGlobalHttp` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SxcGlobalHttp extends "
            },
            {
              "kind": "Reference",
              "text": "HasLog",
              "canonicalReference": "@2sic.com/2sxc-typings!HasLog:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SxcGlobalHttp",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalHttp#apiUrl:member(1)",
              "docComment": "/**\n * Convert short urls like `app/auto/api/Posts/All` to the full URL needed. Will ignore urls which clearly already are the full url.\n *\n * @param url - short URL like `app/auto/api/Posts/All`\n *\n * @returns the converted, long url with the full endpoint\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiUrl(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "apiUrl"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalHttp#apiUrl:member(2)",
              "docComment": "/**\n * Convert short urls like `app/auto/api/Posts/All` to the full URL needed. Will ignore urls which clearly already are the full url.\n *\n * @param url - short URL like `app/auto/api/Posts/All`\n *\n * @param endpointName - _optional_ endpoint name if accessing a different exotic endpoint\n *\n * @returns the converted, long url with the full endpoint\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiUrl(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", endpointName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "endpointName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "apiUrl"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalHttp#headers:member(1)",
              "docComment": "/**\n * All the headers which are needed in an ajax call.\n *\n * @returns Dictionary / Record of headers\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headers(): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "headers"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalHttp#headers:member(2)",
              "docComment": "/**\n * All the headers which are needed in an ajax call - within a module context.\n *\n * @param id - _optional_ module ID\n *\n * @returns Dictionary / Record of headers\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headers(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "headers"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalHttp#headers:member(3)",
              "docComment": "/**\n * All the headers which are needed in an ajax call - within a module and content-block context.\n *\n * @param id - _optional_ module ID\n *\n * @param cbid - _optional_ content block ID\n *\n * @returns Dictionary / Record of headers\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headers(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", cbid: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "cbid",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "headers"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalHttp#headers:member(4)",
              "docComment": "/**\n * All the headers which are needed in an ajax call. Uses a module and content-block context (but these could also be null) and a full context identifier for advanced operations.\n *\n * @param id - _optional_ module ID\n *\n * @param cbid - _optional_ content block ID\n *\n * @param ctx - _optional_ context information to include in the header\n *\n * @returns Dictionary / Record of headers\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headers(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", cbid: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", ctx: "
                },
                {
                  "kind": "Reference",
                  "text": "ContextIdentifier",
                  "canonicalReference": "@2sic.com/2sxc-typings!ContextIdentifier:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "cbid",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "ctx",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "headers"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalWithCms:interface",
          "docComment": "/**\n * $2sxc global interface _extending_ the `SxcGlobal` when the page feature `JsCms` is enabled.\n *\n * If the page feature `2sxc.JsCms` is not enabled, the `window.$2sxc` will be a [SxcGlobal](xref:Api.Js.SxcJs.SxcGlobal)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SxcGlobalWithCms "
            }
          ],
          "releaseTag": "Public",
          "name": "SxcGlobalWithCms",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalWithCms#cms:member",
              "docComment": "/**\n * Content Management features on the $2sxc\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cms: "
                },
                {
                  "kind": "Reference",
                  "text": "SxcGlobalCms",
                  "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalCms:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcGlobalWithCms#translate:member(1)",
              "docComment": "/**\n * Will retrieve a resource in the current language. Mainly used for toolbars etc. to support localization.\n *\n * Only available when edit mode is on meaning the page feature JsCms is enabled\n *\n * @param key - the key of the resource to translate\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "translate(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "translate"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!SxcPart:class",
          "docComment": "/**\n * Base class for anything attached to an sxc-instance. This is internal and not important, but we can't keep it out of the docs.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `SxcPart` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class SxcPart "
            }
          ],
          "releaseTag": "Public",
          "name": "SxcPart",
          "members": [],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!SxcQuery:class",
          "docComment": "/**\n * Instance Query Service\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `SxcQuery` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SxcQuery extends "
            },
            {
              "kind": "Reference",
              "text": "SxcDataServiceBase",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcDataServiceBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SxcQuery",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcQuery#getAll:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAll<T = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getAll"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcQuery#getAll:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAll<T = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">(urlParams: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "urlParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getAll"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcQuery#getAll:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAll<T = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">(urlParams: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": ", data: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "urlParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getAll"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcQuery#getStream:member(1)",
              "docComment": "/**\n * Get just one stream, returning an array of items in that stream\n *\n * @template T\n *\n * @param stream - \n *\n * @returns {Promise<T[]>} containing an array of items - or empty if stream not found or nothing returned\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStream<T = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">(stream: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "stream",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getStream"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcQuery#getStream:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStream<T = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">(stream: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", urlParams: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "stream",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "urlParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getStream"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcQuery#getStream:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStream<T = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">(stream: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", urlParams: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": ", data: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "stream",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "urlParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getStream"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcQuery#getStreams:member(1)",
              "docComment": "/**\n * Get a query but only the mentioned streams. This will reduce the amount of data retrieved on queries that have many streams.  @template T The schema/interfaces of what will be returned\n *\n * @returns {Promise<T>} Promise containing a object with stream-names and items in the streams.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStreams<T = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">(streams: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "streams",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getStreams"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcQuery#getStreams:member(2)",
              "docComment": "/**\n * Get a query but only the mentioned streams. This will reduce the amount of data retrieved on queries that have many streams.  @template T The schema/interfaces of what will be returned\n *\n * @param streams - name of streams to get, comma separated\n *\n * @param urlParams - additional parameters for the URL, either as a string or as a object\n *\n * @returns {Promise<T>} Promise containing a object with stream-names and items in the streams.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStreams<T = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">(streams: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", urlParams: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "streams",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "urlParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getStreams"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcQuery#getStreams:member(3)",
              "docComment": "/**\n * Get a query but only the mentioned streams. This will reduce the amount of data retrieved on queries that have many streams.  @template T The schema/interfaces of what will be returned\n *\n * @param streams - name of streams to get, comma separated\n *\n * @param urlParams - additional parameters for the URL, either as a string or as a object\n *\n * @param data - data to include in case of a POST call - if this is provided, it will use a post\n *\n * @returns {Promise<T>} Promise containing a object with stream-names and items in the streams.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStreams<T = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">(streams: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", urlParams: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": ", data: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "streams",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "urlParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getStreams"
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcQuery#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!SxcWebApi:class",
          "docComment": "/**\n * helper API to run ajax / REST calls to the server it will ensure that the headers etc. are set correctly and that urls are rewritten\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `SxcWebApi` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SxcWebApi implements "
            },
            {
              "kind": "Reference",
              "text": "ZzzSxcWebApiDeprecated",
              "canonicalReference": "@2sic.com/2sxc-typings!ZzzSxcWebApiDeprecated:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SxcWebApi",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcWebApi#delete:member(1)",
              "docComment": "/**\n * **Deprecated** - docs in the separate interface\n *\n * @deprecated\n *\n * use fetchJson instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(settingsOrUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ZzzAjaxSettingsDeprecated",
                  "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated:interface"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", preventAutoFail?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "settingsOrUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "preventAutoFail",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcWebApi#fetchJson:member(1)",
              "docComment": "/**\n * Will retrieve data from the backend using a standard fetch and give you an object.\n *\n * @param url - a full url or short-hand like `controller/method?params` `app/auto/api/controller/method?params`. Note that params would also be specified on the url.\n *\n * @param data - optional POST data\n *\n * @param method - optional method, defaults to `GET` unless it has data, in which case it defaults to `POST`\n *\n * @returns a Promise containing any object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fetchJson<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ", method?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "method",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "fetchJson"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcWebApi#fetchRaw:member(1)",
              "docComment": "/**\n * Will retrieve data from the backend using a standard fetch.\n *\n * @param url - a full url or short-hand like `controller/method?params` `app/auto/api/controller/method?params`. Note that params would also be specified on the url.\n *\n * @param data - optional POST data\n *\n * @param method - optional method, defaults to `GET` unless it has data, in which case it defaults to `POST`\n *\n * @returns a Promise containing a Response object, just like a normal fetch would. example: webApi.fetchRaw('Rss/Feed'); example: webApi.fetchRaw(webApi.url('Rss/Feed', { id: 47 })); // url params example: webApi.fetchRaw('Rss/Feed', { id: 47 }); // post params example: webApi.fetchRaw(webApi.url('Rss/Feed', { id: 47 }), { something: 'this is a test' }); // url & post params maybe: webApi.fetchRaw({url: 'Rss/Feed', params: { id: 47 }}) maybe: webApi.fetchRaw({url: ..., params: { ...}, body: { ...}, method: 'GET' })\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fetchRaw(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ", method?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "!Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "method",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "fetchRaw"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcWebApi#get:member(1)",
              "docComment": "/**\n * **Deprecated** - docs in the separate interface\n *\n * @deprecated\n *\n * use fetchJson instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(settingsOrUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ZzzAjaxSettingsDeprecated",
                  "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated:interface"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", preventAutoFail?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "settingsOrUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "preventAutoFail",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcWebApi#headers:member(1)",
              "docComment": "/**\n * All the headers which are needed in an ajax call for this to work reliably. Use this if you need to get a list of headers in another system\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headers(method?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "method",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "headers"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcWebApi#post:member(1)",
              "docComment": "/**\n * **Deprecated** - docs in the separate interface\n *\n * @deprecated\n *\n * use fetchJson instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "post(settingsOrUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ZzzAjaxSettingsDeprecated",
                  "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated:interface"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", preventAutoFail?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "settingsOrUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "preventAutoFail",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "post"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcWebApi#put:member(1)",
              "docComment": "/**\n * **Deprecated** - docs in the separate interface\n *\n * @deprecated\n *\n * use fetchJson instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "put(settingsOrUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ZzzAjaxSettingsDeprecated",
                  "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated:interface"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", preventAutoFail?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "settingsOrUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "preventAutoFail",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "put"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcWebApi#request:member(1)",
              "docComment": "/**\n * **Deprecated** - docs in the separate interface\n *\n * @deprecated\n *\n * use fetchJson instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "request(settings: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ZzzAjaxSettingsDeprecated",
                  "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated:interface"
                },
                {
                  "kind": "Content",
                  "text": ", params: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", data: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", preventAutoFail: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", method: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "settings",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "preventAutoFail",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "method",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "request"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!SxcWebApi#url:member(1)",
              "docComment": "/**\n * @param url - A short, medium or long url. Short like `controller/method`, medium like `app/auto/api/controller/method` long like `https://xyz. In all cases it can also have ?params etc.\n *\n * @param params - Optional parameters as string or object, will be added to url-params.\n *\n * @returns In the cases of a short/medium url, it will auto-expand to have the full url as needed for an API call.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "url"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!ToolbarWorkflowManager:class",
          "docComment": "/**\n * A workflow manager _of a Toolbar_ which will run stuff before / after commands. When toolbars are created, they will add a Manager and then raise an event for in-page code to add workflow steps. Normally the toolbar with raise a `toolbar-init` event where you can then add steps.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ToolbarWorkflowManager` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ToolbarWorkflowManager extends "
            },
            {
              "kind": "Reference",
              "text": "HasLog",
              "canonicalReference": "@2sic.com/2sxc-typings!HasLog:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ToolbarWorkflowManager",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!ToolbarWorkflowManager#add:member(1)",
              "docComment": "/**\n * Register one or many [workflow-steps](xref:Api.Js.SxcJs.WorkflowStep) to the toolbar, to use if toolbar commands are executed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(steps: "
                },
                {
                  "kind": "Reference",
                  "text": "WorkflowStep",
                  "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStep:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "WorkflowStep",
                  "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStep:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "steps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "add"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@2sic.com/2sxc-typings!TypeValue:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TypeValue = "
            },
            {
              "kind": "Content",
              "text": "boolean | string | number | "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TypeValue",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!UrlParams:class",
          "docComment": "/**\n * Helper object to read url params. Available on `$2sxc.urlParams`\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class UrlParams "
            }
          ],
          "releaseTag": "Public",
          "name": "UrlParams",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!UrlParams#get:member(1)",
              "docComment": "/**\n * Get a param from the url, no matter if it's behind ? or # If not found, will return an empty string `''`\n *\n * @param name - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!UrlParams#isDebug:member(1)",
              "docComment": "/**\n * Checks if debug is enabled in the URL\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDebug(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "isDebug"
            },
            {
              "kind": "Method",
              "canonicalReference": "@2sic.com/2sxc-typings!UrlParams#require:member(1)",
              "docComment": "/**\n * Get a required param from the url, no matter if it's behind ? or # Will throw an error if not found\n *\n * @param name - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "require(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "require"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@2sic.com/2sxc-typings!WorkflowPhases:enum",
          "docComment": "/**\n * Phases / events of a specific workflow.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum WorkflowPhases "
            }
          ],
          "releaseTag": "Public",
          "name": "WorkflowPhases",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowPhases.after:member",
              "docComment": "/**\n * Run after a specific event / command\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "after = "
                },
                {
                  "kind": "Content",
                  "text": "\"after\""
                }
              ],
              "releaseTag": "Public",
              "name": "after",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowPhases.all:member",
              "docComment": "/**\n * Run at every phase - before and after events/commands\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "all = "
                },
                {
                  "kind": "Content",
                  "text": "\"all\""
                }
              ],
              "releaseTag": "Public",
              "name": "all",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowPhases.before:member",
              "docComment": "/**\n * Run before a specific event / command\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "before = "
                },
                {
                  "kind": "Content",
                  "text": "\"before\""
                }
              ],
              "releaseTag": "Public",
              "name": "before",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStep:interface",
          "docComment": "/**\n * A workflow step (code-sequence) to run before/after specific events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface WorkflowStep "
            }
          ],
          "releaseTag": "Public",
          "name": "WorkflowStep",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStep#code:member",
              "docComment": "/**\n * The code which is run, must be a promise-factory. So it's a function that will return a promise. Required. See [](xref:Api.Js.SxcJs.WorkflowStepCode)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code: "
                },
                {
                  "kind": "Content",
                  "text": "(args: "
                },
                {
                  "kind": "Reference",
                  "text": "WorkflowStepCodeArguments",
                  "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStepCodeArguments:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "WorkflowStepCodeArguments",
                  "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStepCodeArguments:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStep#command:member",
              "docComment": "/**\n * The action this step is for, can be 'any', 'edit', etc. Will be 'all' by default\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "command: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "command",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStep#name:member",
              "docComment": "/**\n * The name of this step, in case it needs to be replaced or somehow controlled Will be empty by default\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStep#phase:member",
              "docComment": "/**\n * Action-phase being run, like 'all', 'before', 'after' will be 'before' by default\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "phase?: "
                },
                {
                  "kind": "Reference",
                  "text": "WorkflowPhases",
                  "canonicalReference": "@2sic.com/2sxc-typings!WorkflowPhases:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "phase",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStep#priority:member",
              "docComment": "/**\n * Execution priority, higher comes first Will be 1 by default.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "priority?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "priority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStepCodeArguments:class",
          "docComment": "/**\n * Arguments for [WorkflowStepCode](xref:Api.Js.SxcJs.WorkflowStepCode). Will be passed to your code and should also be returned by your code. This also allows cancelling further execution.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `WorkflowStepCodeArguments` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class WorkflowStepCodeArguments "
            }
          ],
          "releaseTag": "Public",
          "name": "WorkflowStepCodeArguments",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStepCodeArguments#cancel:member",
              "docComment": "/**\n * If the workflow should be cancelled. Can be set by any workflow step. If set to true, following steps / workflows will not run.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cancel: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cancel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStepCodeArguments#command:member",
              "docComment": "/**\n * Name this workflow is running for\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "command: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "command",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStepCodeArguments#context:member",
              "docComment": "/**\n * Context of the current command / step being run\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "ContextComplete",
                  "canonicalReference": "@2sic.com/2sxc-typings!ContextComplete:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStepCodeArguments#phase:member",
              "docComment": "/**\n * The phase it's in (before, after, etc.)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "phase: "
                },
                {
                  "kind": "Reference",
                  "text": "WorkflowPhases",
                  "canonicalReference": "@2sic.com/2sxc-typings!WorkflowPhases:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "phase",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@2sic.com/2sxc-typings!WorkflowStepCodeArguments#result:member",
              "docComment": "/**\n * Result in after-phases of the workflow BETA - never really tested this\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "result: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "result",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated:interface",
          "docComment": "/**\n * Deprecated parameters for old jQuery AJAX calls. Shouldn't be used any more.\n *\n * @deprecated\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ZzzAjaxSettingsDeprecated "
            }
          ],
          "releaseTag": "Public",
          "name": "ZzzAjaxSettingsDeprecated",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated#action:member",
              "docComment": "/**\n * action name, for controller/action calls\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "action?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "action",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated#controller:member",
              "docComment": "/**\n * Controller name, for controller/action calls\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "controller?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "controller",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated#params:member",
              "docComment": "/**\n * The params to be used in the url for the request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "params?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@2sic.com/2sxc-typings!ZzzSxcWebApiDeprecated:interface",
          "docComment": "/**\n * **Deprecated** Old APIs on sxc.webApi. They only exist if jQuery is included on the page, and we highly discourage their use.\n *\n * @deprecated\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ZzzSxcWebApiDeprecated "
            }
          ],
          "releaseTag": "Public",
          "name": "ZzzSxcWebApiDeprecated",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!ZzzSxcWebApiDeprecated#delete:member(1)",
              "docComment": "/**\n * **Deprecated** Please use [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchJson) or [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchRaw) instead.\n *\n * Returns an http-delete promise using jQuery\n *\n * @deprecated\n *\n * use fetchJson instead\n *\n * @param settingsOrUrl - the url to talk to\n *\n * @param params - jQuery style ajax parameters\n *\n * @param data - jQuery style data for post/put requests\n *\n * @param preventAutoFail - \n *\n * @returns jQuery ajax promise object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(settingsOrUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ZzzAjaxSettingsDeprecated",
                  "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated:interface"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", preventAutoFail?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "settingsOrUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "preventAutoFail",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "name": "delete"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!ZzzSxcWebApiDeprecated#get:member(1)",
              "docComment": "/**\n * **Deprecated** Please use [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchJson) or [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchRaw) instead.\n *\n * Returns an http-get promise using jQuery\n *\n * @deprecated\n *\n * use fetchJson instead\n *\n * @param settingsOrUrl - the url to get\n *\n * @param params - jQuery style ajax parameters\n *\n * @param data - jQuery style data for post/put requests\n *\n * @param preventAutoFail - \n *\n * @returns jQuery ajax promise object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(settingsOrUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ZzzAjaxSettingsDeprecated",
                  "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated:interface"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", preventAutoFail?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "settingsOrUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "preventAutoFail",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!ZzzSxcWebApiDeprecated#post:member(1)",
              "docComment": "/**\n * **Deprecated** Please use [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchJson) or [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchRaw) instead.\n *\n * Returns an http-post promise using jQuery\n *\n * @deprecated\n *\n * use fetchJson instead\n *\n * @param settingsOrUrl - the url to get\n *\n * @param params - jQuery style ajax parameters\n *\n * @param data - jQuery style data for post/put requests\n *\n * @param preventAutoFail - \n *\n * @returns jQuery ajax promise object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "post(settingsOrUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ZzzAjaxSettingsDeprecated",
                  "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated:interface"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", preventAutoFail?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "settingsOrUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "preventAutoFail",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "name": "post"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!ZzzSxcWebApiDeprecated#put:member(1)",
              "docComment": "/**\n * **Deprecated** Please use [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchJson) or [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchRaw) instead.\n *\n * Returns an http-put promise using jQuery\n *\n * @deprecated\n *\n * use fetchJson instead\n *\n * @param settingsOrUrl - the url to put\n *\n * @param params - jQuery style ajax parameters\n *\n * @param data - jQuery style data for post/put requests\n *\n * @param preventAutoFail - \n *\n * @returns jQuery ajax promise object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "put(settingsOrUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ZzzAjaxSettingsDeprecated",
                  "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated:interface"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", preventAutoFail?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "settingsOrUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "preventAutoFail",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "name": "put"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@2sic.com/2sxc-typings!ZzzSxcWebApiDeprecated#request:member(1)",
              "docComment": "/**\n * **Deprecated** Please use [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchJson) or [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchRaw) instead.\n *\n * Generic http request using jQuery\n *\n * @deprecated\n *\n * use fetchJson instead\n *\n * @param settingsOrUrl - the url to get\n *\n * @param params - jQuery style ajax parameters\n *\n * @param data - jQuery style data for post/put requests\n *\n * @param preventAutoFail - \n *\n * @param method - the http verb name\n *\n * @returns jQuery ajax promise object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "request(settings: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ZzzAjaxSettingsDeprecated",
                  "canonicalReference": "@2sic.com/2sxc-typings!ZzzAjaxSettingsDeprecated:interface"
                },
                {
                  "kind": "Content",
                  "text": ", params: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", data: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", preventAutoFail: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", method: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "settings",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "preventAutoFail",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "method",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "name": "request"
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
