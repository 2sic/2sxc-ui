### YamlMime:TSType
name: Log
uid: '@2sic.com/2sxc-typings!Log:class'
package: '@2sic.com/2sxc-typings!'
fullName: Log
summary: A log object which will collect log entries for another ojbect   Log
remarks: >-
  The constructor for this class is marked as internal. Third-party code should not call the constructor directly or
  create subclasses that extend the `Log` class.
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: entries
    uid: '@2sic.com/2sxc-typings!Log#entries:member'
    package: '@2sic.com/2sxc-typings!'
    fullName: entries
    summary: List of all entries added to this log
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'entries: LogEntry[];'
      return:
        type: '<xref uid="@2sic.com/2sxc-typings!LogEntry:class" />[]'
  - name: maxEntries
    uid: '@2sic.com/2sxc-typings!Log#maxEntries:member'
    package: '@2sic.com/2sxc-typings!'
    fullName: maxEntries
    summary: Maximum amount of entries to add - to prevent memory hoging
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxEntries: number;'
      return:
        type: number
  - name: name
    uid: '@2sic.com/2sxc-typings!Log#name:member'
    package: '@2sic.com/2sxc-typings!'
    fullName: name
    summary: 'The name of this log, for scenarios where multiple loggers are mixed'
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string;'
      return:
        type: string
methods:
  - name: 'add(message, data)'
    uid: '@2sic.com/2sxc-typings!Log#add:member(1)'
    package: '@2sic.com/2sxc-typings!'
    fullName: 'add(message, data)'
    summary: Add a simple message to the log
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'add(message: (() => string) | string, data?: unknown): string;'
      parameters:
        - id: message
          description: >-
            Log


            preferred usage is with string parameter: log.add(`description ${ parameter }`<!-- -->);


            in case that we experience error with normal string parameter, we can use arrow function to enclose
            parameter like this () =<!-- -->&gt; parameter but use it very rarely, because there is certainly a
            performance implication! log.add(`description ${() => parameter}`<!-- -->);
          type: (() =&gt; string) | string
        - id: data
          description: ''
          type: unknown
      return:
        type: string
        description: ''
