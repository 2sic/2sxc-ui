{"version":3,"file":"ToSic.Sxc.Controller.js","sourceRoot":"","sources":["../ToSic.Sxc.Controller.ts"],"names":[],"mappings":"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","sourcesContent":["// ReSharper disable InconsistentNaming\r\n\r\nimport { SxcInstance, SxcInstanceWithEditing, SxcInstanceWithInternals } from './ToSic.Sxc.Instance';\r\nimport { TotalPopup } from './ToSic.Sxc.TotalPopup';\r\nimport { UrlParamManager } from './ToSic.Sxc.Url';\r\nimport { Stats } from './Stats';\r\n\r\nexport interface Window { $2sxc: SxcController | SxcControllerWithInternals; }\r\n\r\ndeclare const $: any;\r\ndeclare const window: Window;\r\n\r\n/**\r\n * This is the interface for the main $2sxc object on the window\r\n */\r\nexport interface SxcController {\r\n    /**\r\n     * returns a 2sxc-instance of the id or html-tag passed in\r\n     * @param id\r\n     * @param cbid\r\n     * @returns {}\r\n     */\r\n    (id: number | HTMLElement, cbid?: number): SxcInstance | SxcInstanceWithInternals,\r\n\r\n    /**\r\n     * system information, mainly for checking which version of 2sxc is running\r\n     * note: it's not always updated reliably, but it helps when debugging\r\n     */\r\n    sysinfo: {\r\n        /**\r\n         * the version using the ##.##.## syntax\r\n         */\r\n        version: string,\r\n\r\n        /**\r\n         * a short text description, for people who have no idea what this is\r\n         */\r\n        description: string,\r\n    };\r\n}\r\n\r\n/**\r\n * returns a 2sxc-instance of the id or html-tag passed in\r\n * @param id\r\n * @param cbid\r\n * @returns {}\r\n */\r\nfunction SxcController(id: number | HTMLElement, cbid?: number): SxcInstanceWithInternals {\r\n    const $2sxc = window.$2sxc as SxcControllerWithInternals;\r\n    if (!$2sxc._controllers)\r\n        throw new Error('$2sxc not initialized yet');\r\n\r\n    // if it's a dom-element, use auto-find\r\n    if (typeof id === 'object') {\r\n        const idTuple = autoFind(id);\r\n        id = idTuple[0];\r\n        cbid = idTuple[1];\r\n    }\r\n\r\n    if (!cbid) cbid = id;           // if content-block is unknown, use id of module\r\n    const cacheKey = id + ':' + cbid; // neutralize the id from old \"34\" format to the new \"35:353\" format\r\n\r\n    // either get the cached controller from previous calls, or create a new one\r\n    if ($2sxc._controllers[cacheKey]) return $2sxc._controllers[cacheKey];\r\n\r\n    // also init the data-cache in case it's ever needed\r\n    if (!$2sxc._data[cacheKey]) $2sxc._data[cacheKey] = {};\r\n\r\n    return ($2sxc._controllers[cacheKey]\r\n        = new SxcInstanceWithInternals(id, cbid, cacheKey, $2sxc, $.ServicesFramework));\r\n}\r\n\r\n/**\r\n * Build a SXC Controller for the page. Should only ever be executed once\r\n */\r\nexport function buildSxcController(): SxcController | SxcControllerWithInternals {\r\n    const urlManager = new UrlParamManager();\r\n    const debug = {\r\n        load: (urlManager.get('debug') === 'true'),\r\n        uncache: urlManager.get('sxcver'),\r\n    };\r\n    const stats = new Stats();\r\n\r\n    const addOn: any = {\r\n        _controllers: {} as any,\r\n        sysinfo: {\r\n            version: '09.43.00',\r\n            description: 'The 2sxc Controller object - read more about it on 2sxc.org',\r\n        },\r\n        beta: {},\r\n        _data: {},\r\n        // this creates a full-screen iframe-popup and provides a close-command to finish the dialog as needed\r\n        totalPopup: new TotalPopup(),\r\n        urlParams: urlManager,\r\n        // note: I would like to remove this from $2sxc, but it's currently\r\n        // used both in the inpage-edit and in the dialogs\r\n        // debug state which is needed in various places\r\n        debug,\r\n        stats: stats,\r\n        // mini-helpers to manage 2sxc parts, a bit like a dependency loader\r\n        // which will optimize to load min/max depending on debug state\r\n        parts: {\r\n            getUrl(url: string, preventUnmin: boolean) {\r\n                let r = (preventUnmin || !debug.load) ? url : url.replace('.min', ''); // use min or not\r\n                if (debug.uncache && r.indexOf('sxcver') === -1)\r\n                    r = r + ((r.indexOf('?') === -1) ? '?' : '&') + 'sxcver=' + debug.uncache;\r\n                return r;\r\n            },\r\n        },\r\n    };\r\n    for (const property in addOn)\r\n        if (addOn.hasOwnProperty(property))\r\n            SxcController[property] = addOn[property] as any;\r\n    return SxcController as any as SxcControllerWithInternals;\r\n}\r\n\r\nfunction autoFind(domElement: HTMLElement): [number, number] {\r\n    const containerTag = $(domElement).closest('.sc-content-block')[0];\r\n    if (!containerTag) return null;\r\n    const iid = containerTag.getAttribute('data-cb-instance');\r\n    const cbid = containerTag.getAttribute('data-cb-id');\r\n    if (!iid || !cbid) return null;\r\n    return [iid, cbid];\r\n}\r\n\r\nexport interface SxcControllerWithInternals extends SxcController {\r\n    (id: number | HTMLElement, cbid?: number): SxcInstance | SxcInstanceWithInternals;\r\n    totalPopup: TotalPopup;\r\n    urlParams: UrlParamManager;\r\n    beta: any;\r\n    _controllers: any;\r\n    _data: any;\r\n    _manage: any;\r\n    _translateInit: any;\r\n    debug: any;\r\n    parts: any;\r\n\r\n}\r\n\r\n// ReSharper restore InconsistentNaming\r\n"]}